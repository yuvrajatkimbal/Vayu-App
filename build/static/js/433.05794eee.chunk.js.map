{"version":3,"file":"static/js/433.05794eee.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","views/pages/Status/Status404/index.tsx","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/styled.js"],"sourcesContent":["'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { Box, Typography, Container, Button } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { setPageTitle } from 'src/reducers/common';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst MainContent = styled(Box)(\r\n  ({ theme }) => `\r\n    height: 100%;\r\n    display: flex;\r\n    flex: 1;\r\n    overflow: auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n);\r\n\r\nfunction Status404() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Status - 404</title>\r\n      </Helmet>\r\n      <MainContent>\r\n        <Container maxWidth=\"md\">\r\n          <Box textAlign=\"center\">\r\n            <img alt=\"404\" height={180} src=\"/static/images/status/404.svg\" />\r\n            <Typography variant=\"h2\" sx={{ my: 2 }}>\r\n              The page you were looking for doesn't exist.\r\n            </Typography>\r\n          </Box>\r\n          <Container maxWidth=\"sm\" sx={{ textAlign: 'center', mt: 3, p: 4 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                color: '#000',\r\n                border: '1px solid'\r\n              }}\r\n              onClick={() => {\r\n                dispatch(setPageTitle('Commands'));\r\n                navigate('/commands');\r\n              }}\r\n              // sx={{\r\n              //   '&:hover': {\r\n              //     color: '#1773BE' // Replace 'desiredHoverColor' with the color you want, e.g., 'red' or '#ff0000'\r\n              //   }\r\n              // }}\r\n            >\r\n              Go to homepage\r\n            </Button>\r\n          </Container>\r\n        </Container>\r\n      </MainContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Status404;\r\n","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;"],"names":["useThemeProps","_ref","props","name","defaultTheme","themeId","theme","useTheme","getThemeProps","_excluded","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","createStyledComponent","componentName","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","ref","className","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","_jsx","as","clsx","createContainer","styled","useDefaultProps","MainContent","Box","dispatch","useDispatch","navigate","useNavigate","_jsxs","_Fragment","children","Helmet","textAlign","alt","height","src","Typography","variant","sx","my","mt","p","Button","color","border","onClick","setPageTitle","params","components","defaultProps","resolveProps","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","obj","defaultOverridesResolver","processStyleArg","callableStyle","resolvedStylesArg","Array","isArray","flatMap","resolvedStyle","variants","result","forEach","isMatch","key","push","style","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","filter","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","_len","expressions","_key","expressionsWithDefaultTheme","map","styleOverrides","resolvedStyleOverrides","entries","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","fill","raw","Component","muiName","withConfig","createStyled"],"sourceRoot":""}