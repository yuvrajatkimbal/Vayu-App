{"version":3,"file":"static/js/195.420630b0.chunk.js","mappings":"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","sources":["components/CustomTabPanel/index.tsx","components/Button/index.tsx","models/customModal/index.tsx","components/CustomDropdown/CustomDropdown.tsx","components/CustomDrawer/index.tsx","components/CustomMenuItem/index.tsx","components/SelectBox/SelectBox.tsx","api/AccessManagement/index.ts","api/common/index.ts","views/pages/User-Management/Component/Header.tsx","components/StyledComponents/Table/index.tsx","components/CommandStatus/index.tsx","components/CustomSwitch/index.tsx","assets/styledComponent/BoxStyled.tsx","components/Labels/SeverityLabel.tsx","components/Table/GetCellContent.tsx","components/Table/CommonTable.tsx","views/pages/User-Management/Component/RoleManagement.tsx","views/pages/User-Management/Component/UserManagement.tsx","views/pages/User-Management/index.tsx","components/CustomSelectMenu/index.tsx","api/index.ts","components/CustomBackdrop/CustomBackdrop.tsx"],"sourcesContent":["import React from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index?: any;\r\n  value?: any;\r\n}\r\n\r\nconst CustomTabPanel: React.FC<TabPanelProps> = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ py: 1 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTabPanel;\r\n","import { Button, CircularProgress } from '@mui/material';\r\nimport React, { Children, FC } from 'react';\r\nimport { button } from './Button';\r\n\r\nconst CommonButton: FC<button> = (props) => {\r\n  const {\r\n    onClick,\r\n    text,\r\n    disabled = false,\r\n    variant,\r\n    loading = false,\r\n    color,\r\n    size,\r\n    type,\r\n    sx,\r\n    xs,\r\nsm,\r\nmd,\r\nlg,\r\nchildren\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        fullWidth\r\n        disabled={disabled}\r\n        variant={variant}\r\n        color={color}\r\n        onClick={onClick}\r\n        size={size}\r\n        type={type}\r\n        sx={sx}\r\n        style={{\r\n          margin: '10px , 0px',\r\n          border: '1px solid black'\r\n        }}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress\r\n            size={25}\r\n            color={variant === 'outlined' ? color : 'inherit'}\r\n          />\r\n        ) : (\r\n          <span>{text || children}</span>\r\n        )}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommonButton;\r\n","import { useState } from 'react';\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport CommonButton from 'src/components/Button';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nexport const CustomPopUpModal = ({\r\n  setOpen,\r\n  open,\r\n  handleClose,\r\n  handleApply,\r\n  title,\r\n  isApply,\r\n  buttonText,\r\n  children\r\n}) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"sm\"  \r\n        fullWidth={true} \r\n        aria-labelledby=\"responsive-dialog-title\"\r\n        sx={{\r\n          '& .MuiDialog-paper': {\r\n            borderRadius: 0   \r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{children}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       <Box display={\"flex\"} mx={1} mb={1}>\r\n\r\n      \r\n          <Box mx={1} >\r\n            <CommonButton\r\n              sx={{\r\n                background: theme.colors.alpha.grey[100],\r\n                color: theme.colors.alpha.black[100],\r\n                border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                fontSize: '16px',\r\n                fontWeight: '500'\r\n              }}\r\n              size={'small'}\r\n              variant={'outlined'}\r\n              onClick={handleClose}\r\n            >\r\n              Close\r\n            </CommonButton>\r\n          </Box>\r\n          <Box mx={1}>\r\n            {isApply && (\r\n              <CommonButton\r\n                sx={{\r\n                  background: theme.colors.alpha.secondary[100],\r\n                  // cursor: isDisabled ? 'not-allowed !important' : 'pointer',\r\n                  color: theme.colors.alpha.black[100],\r\n                  border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                  fontSize: '16px',\r\n                  fontWeight: '500'\r\n                }}\r\n                size={'small'}\r\n                variant={'outlined'}\r\n                onClick={handleApply}\r\n              >\r\n                {buttonText}\r\n              </CommonButton>\r\n            )}\r\n          </Box>\r\n          </Box>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Grid, Box, InputLabel, FormControl, MenuItem } from '@mui/material'; \r\nimport { useTheme } from '@mui/material';\r\n// import { CustomMenuItem } from '../CustomMenuItem';\r\nimport { CustomSelectInput, CustomSelectIcon, CustomMenuItem, CustomSelectInputBox } from '../CustomSelectMenu';\r\nimport styled from '@emotion/styled';\r\n \r\nexport const CustomMenuItemOptions = styled(MenuItem)(({ theme }) => ({\r\n  padding: '10px !important', // Customize the padding as needed\r\n  color: `#000 !important`,\r\n  margin: '0px !important',\r\n  border: '1px solid #000 !important',\r\n  borderBottom: '0px solid #000 !important', // Remove bottom border\r\n  borderRadius: '0px !important',\r\n\r\n  '&:first-child': {\r\n    borderTop: '0px solid #000 !important' // Optional: can apply top border specifically for the first item\r\n  },\r\n\r\n  '&:last-child': {\r\n    borderBottom: '1px solid #000 !important' // Add bottom border only to the last item\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: '#5FCAE7 !important', // You can customize the hover color here\r\n    color: '#333 !important', // Change the text color on hover\r\n    margin: '0px !important'\r\n  }\r\n}));\r\n\r\ninterface CommonDropdownProps {\r\n  label?: string;\r\n  value?: any;\r\n  onChange?: (e: React.ChangeEvent<{ value: unknown }>) => void;\r\n  options?: { value: any; label: string; icon?: any }[];\r\n  name?: string;\r\n  filtersData?: any;\r\n  setFiltersData?: (data: any) => void;\r\n  minWidth?: number;\r\n  xs?: number;\r\n  sm?: number;\r\n  md?: number;\r\n  lg?: number;\r\n  mt?: number;\r\n}\r\n\r\nconst CommonDropdown: React.FC<CommonDropdownProps> = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  options,\r\n  name,\r\n  filtersData,\r\n  minWidth,\r\n  setFiltersData,\r\n  xs,\r\n  sm,\r\n  md,\r\n  lg,\r\n  mt\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={xs}\r\n      sm={sm}\r\n      md={md}\r\n      lg={lg}\r\n      mt={mt}\r\n      display=\"flex\"\r\n      alignItems=\"center\" \r\n    >\r\n      {/* First Part: Input Label */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          paddingX: '18px',\r\n          border: '1px solid #000',\r\n          borderLeft: '1px solid #000',\r\n          borderRight: '0px solid #000',\r\n          height: '36px',\r\n          backgroundColor: theme.colors.alpha.primary[100],\r\n          fontFamily: theme.typography.fontFamily\r\n        }}\r\n      >\r\n        <InputLabel sx={{ color: '#000', fontWeight: '400', fontSize: '15px' }}>\r\n          {label}\r\n        </InputLabel>\r\n      </Box>\r\n\r\n      {/* Second Part: Form Control */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          borderRight: '1px solid #000',\r\n          flex: 1\r\n        }}\r\n      >\r\n        <FormControl fullWidth>\r\n          <CustomSelectInputBox\r\n            IconComponent={CustomSelectIcon}\r\n            value={value}\r\n            // @ts-ignore\r\n            onChange={onChange}\r\n            name={name}\r\n            displayEmpty\r\n            sx={{\r\n              minWidth: minWidth,\r\n              borderRight: '0px solid',\r\n              '& .MuiSelect-select': {\r\n                padding: '6px 10px',\r\n                display: \"flex\",\r\n                alignItems:\"center\"\r\n              }\r\n            }}\r\n            MenuProps={{\r\n              PaperProps: {\r\n                style: {\r\n                  marginTop: '1.2px',\r\n                  padding: '0',\r\n                  borderRadius: '0px'\r\n                }\r\n              },\r\n              MenuListProps: {\r\n                style: {\r\n                  padding: '0px',\r\n                  maxHeight: 400, // Set the maximum height of the dropdown\r\n                  overflowY: 'auto' // Enable vertical scrolling\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {options?.map((option) => (\r\n              <CustomMenuItem key={option.value} value={option.value}>\r\n                {option.icon && (\r\n                  <Box\r\n                    component=\"span\"\r\n                    sx={{\r\n                      marginRight: '8px',\r\n                      display: 'flex',\r\n                      alignItems: 'center'\r\n                    }}\r\n                  >\r\n                    <option.icon />\r\n                  </Box>\r\n                )}\r\n                {option.label}\r\n              </CustomMenuItem>\r\n            ))}\r\n          </CustomSelectInputBox>\r\n        </FormControl>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CommonDropdown;\r\n","import {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  Divider\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CloseIcon, RightIcon } from \"src/assets/svg/svg\";\r\nimport { useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { Clear, CropSquareSharp } from \"@mui/icons-material\";\r\nimport { showToast } from \"src/customHooks/ToastEmitter\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\ninterface CustomDrawerProps {\r\n  toggleDrawer?: () => void;\r\n  open?: boolean;\r\n  title?: string;\r\n  children: React.ReactNode; // Allows any renderable content\r\n  buttonText?: string;\r\n  onApply?: () => void;\r\n  onCancel?: () => void;\r\n  isApply?: boolean;\r\n  isCancel?: boolean;\r\n  isDisabled?: any;\r\n  isApplyDisabled?: boolean;\r\n}\r\n\r\nconst DrawerWrapper = styled(Drawer)(({ theme }) => ({\r\n  \"& .MuiDrawer-paper\": {\r\n    width: \"400px\",\r\n    padding: \"0rem 0rem\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"480px\",\r\n      padding: \"0rem 0rem\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomDrawer: React.FC<CustomDrawerProps> = ({\r\n  toggleDrawer,\r\n  open,\r\n  title,\r\n  buttonText,\r\n  onApply,\r\n  onCancel,\r\n  children,\r\n  isApply,\r\n  isDisabled,\r\n  isApplyDisabled,\r\n  isCancel\r\n}) => {\r\n  const theme = useTheme();\r\n  const { addToast } = useToasts();\r\n\r\n  const showToastMsg = () => {\r\n    addToast(\"Filter Cleared\", {\r\n      appearance: \"success\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DrawerWrapper\r\n      open={open}\r\n      onClose={toggleDrawer}\r\n      anchor={\"right\"}\r\n      BackdropProps={{\r\n        sx: {\r\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\"\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n        <Box\r\n          mt={2}\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\"\r\n          }}\r\n        >\r\n          <Typography sx={{ fontSize: \"20px\", pl: 2, fontWeight: 500 }}>\r\n            {title}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={toggleDrawer}\r\n            sx={{\r\n              \"&:hover\": {\r\n                color: \"red\", // change this to your desired hover color\r\n                backgroundColor: \"#1773BE\" // subtle background on hover\r\n              },\r\n              mr: 2,\r\n              padding: \"8px\" // controls splash size indirectly\r\n            }}\r\n            disableRipple={false} // make sure ripple is enabled\r\n          >\r\n            <CloseIcon sx={{ fontSize: 32 }} />\r\n          </IconButton>\r\n        </Box>\r\n        <Divider sx={{ mb: -2, mt: 2 }} />\r\n        <Box\r\n          my={4}\r\n          // mt={2}\r\n\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: \"auto\",\r\n            pr: 1\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        <Divider sx={{ mb: 0, mt: 2 }} /> {/*divider*/}\r\n        <Box\r\n          sx={{\r\n            position: \"sticky\",\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            paddingTop: \"1rem\",\r\n            display: \"flex\",\r\n            justifyContent: `end`,\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", gap: \"12px\", mx: 2, mb: 2 }}>\r\n            {\" \"}\r\n            {/*gap between the buttons */}\r\n            {isCancel && (\r\n              <IconButton\r\n                sx={{\r\n                  cursor: isDisabled ? \"not-allowed !important\" : \"pointer\",\r\n                  padding: 0\r\n                }}\r\n                onClick={() => {\r\n                  onCancel();\r\n                  showToastMsg();\r\n                }}\r\n                disabled={isDisabled}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  // className=\"filter-button\"\r\n                  disabled={isDisabled}\r\n                  sx={{\r\n                    borderRadius: \"4px\",\r\n                    background: theme.colors.alpha.trueWhite[100],\r\n                    color: theme.colors.alpha.danger[100],\r\n                    border: `1px solid ${theme.colors.alpha.danger[100]}`,\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"500\",\r\n                    // marginRight: \"12px\",\r\n                    padding: \"6px 16px\",\r\n                    \"&:hover\": !isDisabled && {\r\n                      backgroundColor: \"#FFDBD8\",\r\n                      color: theme.colors.alpha.danger[100],\r\n                      border: `1px solid ${theme.colors.alpha.danger[100]}`\r\n                    }\r\n                  }}\r\n                >\r\n                  {\"Clear Filters\"}\r\n                </Button>\r\n              </IconButton>\r\n            )}\r\n            {isApply && (\r\n              <IconButton\r\n                sx={{\r\n                  cursor: isApplyDisabled\r\n                    ? \"not-allowed !important\"\r\n                    : \"pointer\",\r\n                  padding: 0\r\n                }}\r\n                onClick={onApply}\r\n                disabled={isApplyDisabled}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  // disabled={isApplyDisabled}\r\n                  sx={{\r\n                    borderRadius: \"4px\",\r\n                    backgroundColor: isApplyDisabled\r\n                      ? \"rgba(23, 115, 190, 0.4)\" // light grey for disabled\r\n                      : \"rgba(23, 115, 190, 1)\",\r\n                    color: \"#ffffff\",\r\n                    border: `1px solid ${\r\n                      isApplyDisabled\r\n                        ? \"rgba(23, 115, 190, 0.4)\" // light grey for disabled\r\n                        : \"rgba(23, 115, 190, 1)\"\r\n                    }`,\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"500\",\r\n                    padding: \"6px 16px\",\r\n                    \"& .MuiButton-endIcon\": {\r\n                      marginLeft: 1\r\n                    },\r\n                    \"&.Mui-disabled\": {\r\n                      cursor: \"not-allowed\" // explicitly override MUI's default\r\n                    },\r\n                    \"&:hover\": !isApplyDisabled && {\r\n                      backgroundColor: \"rgba(23, 115, 190, 1)\",\r\n                      color: \"#ffffff\",\r\n                      border: `1px solid ${\"rgba(23, 115, 190, 1)\"}`\r\n                    },\r\n\r\n                    pointers: isApplyDisabled ? \"none\" : \"auto\", // prevent interactions\r\n                    cursor: isApplyDisabled\r\n                      ? \"not-allowed !important\"\r\n                      : \"pointer\"\r\n                  }}\r\n                >\r\n                  {buttonText || \"Apply\"}\r\n                </Button>\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n          <Box></Box>\r\n        </Box>\r\n      </Box>\r\n    </DrawerWrapper>\r\n  );\r\n};\r\n\r\nexport default CustomDrawer;\r\n","import { MenuItem } from '@mui/material';\r\nimport { styled } from '@mui/styles';\r\n\r\nexport const CustomMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  padding: '10px 37px !important', // Customize the padding as needed\r\n  color: `#000 !important`,\r\n  margin: '0px !important',\r\n  border: '1px solid #000 !important',\r\n  borderBottom: '0px solid #000 !important', // Remove bottom border\r\n  borderRadius: '0px !important',\r\n\r\n  '&:first-child': {\r\n    borderTop: '0px solid #000 !important' // Optional: can apply top border specifically for the first item\r\n  },\r\n\r\n  '&:last-child': {\r\n    borderBottom: '1px solid #000 !important' // Add bottom border only to the last item\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: '#5FCAE7 !important', // You can customize the hover color here\r\n    color: '#333 !important', // Change the text color on hover\r\n    margin: '0px !important'\r\n  }\r\n}));\r\n\r\nexport const SATMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  padding: '10px 37px !important', // Customize the padding as needed\r\n  color: `#000 !important`,\r\n  margin: '0px !important',\r\n  border: '1px solid #000 !important',\r\n  borderBottom: '0px solid #000 !important', // Remove bottom border\r\n  borderRadius: '0px !important',\r\n\r\n  '&:first-child': {\r\n    borderTop: '1px solid #000 !important' // Optional: can apply top border specifically for the first item\r\n  },\r\n\r\n  '&:last-of-type': {\r\n    borderBottom: '1px solid #000 !important'\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: '#5FCAE7 !important', // You can customize the hover color here\r\n    color: '#333 !important', // Change the text color on hover\r\n    margin: '0px !important'\r\n  }\r\n}));\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  Box,\r\n  ListItemText\r\n} from '@mui/material';\r\nimport { CommonFormControlProps } from '.';\r\nimport {\r\n  CustomBasicSelect,\r\n  CustomSelect,\r\n  CustomSelectIcon\r\n} from '../CustomSelectMenu';\r\nimport { CustomMenuItem } from '../CustomMenuItem';\r\n\r\nconst CommonSelectBox: React.FC<CommonFormControlProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  fullWidth = false,\r\n  error,\r\n  errorMsg,\r\n  options,\r\n  disabled,\r\n  renderValue,\r\n  multiple\r\n}) => {\r\n  return (\r\n    <Box>\r\n      <FormControl fullWidth={fullWidth} error={error}>\r\n        <InputLabel id={label}>{label}</InputLabel>\r\n        <CustomSelect\r\n          labelId={label}\r\n          label={label}\r\n          id={label}\r\n          value={value}\r\n          name={name}\r\n          multiple={multiple}\r\n          disabled={disabled}\r\n          onChange={onChange}\r\n          renderValue={renderValue}\r\n          color={errorMsg ? 'error' : 'primary'}\r\n          IconComponent={CustomSelectIcon}\r\n          displayEmpty\r\n          sx={{\r\n            '& .MuiSelect-select': {\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            }\r\n          }}\r\n          MenuProps={{\r\n            PaperProps: {\r\n              style: {\r\n                marginTop: '0px',\r\n                padding: '0',\r\n                borderRadius: '0px',\r\n                borderTop: \"1px solid\"\r\n              }\r\n            },\r\n            MenuListProps: {\r\n              style: {\r\n                padding: '0px',\r\n                overflowY: 'auto'\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          {options?.map((option, index) => (\r\n            <CustomMenuItem key={index} value={option.value}> \r\n              <ListItemText primary={option.label} />\r\n            </CustomMenuItem>\r\n          ))}\r\n        </CustomSelect>\r\n        {error && <FormHelperText>{errorMsg}</FormHelperText>}\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommonSelectBox;\r\n","import { createQueryString } from 'src/utils/helper';\r\nimport { instance } from '../index';\r\nimport { removeUserFromList, setModules, setRoleModuleMapping, setRoles, setUserList } from 'src/reducers/AccessManagement';\r\n\r\nexport const getUserList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(`/User/GetUserList?${queryString}`);\r\n      dispatch(setUserList(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const register: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/User/Register`, apiData);\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\nexport const updateUserDetail: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/User/UpdateUserDetail`, apiData);\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\nexport const setUserStatus: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {  \r\n      const res = await instance.post(`/User/SetUserStatus`, apiData);\r\n      dispatch(removeUserFromList(res))\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteUserList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.delete(`/User/DeleteUserList`, {\r\n        data: apiData  \r\n      });\r\n      // dispatch(setCurrentRTCDrift(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n///// for role management\r\n\r\nexport const getRoles: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.get(`/User/GetRoles`);\r\n      dispatch(setRoles(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getModules : any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try { \r\n      const res = await instance.get(`/User/GetModules`);\r\n      dispatch(setModules(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n \r\nexport const updateRoleModuleMapping : any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try { \r\n      const res = await instance.post(`/User/UpdateRoleModuleMapping`,apiData);\r\n      // dispatch(setUpdateRoleModuleMapping(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteRole: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.delete(`/User/DeleteRole`, {\r\n        data: apiData  \r\n      }); \r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getRoleModuleMapping: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(`User/GetRoleModuleMapping?${queryString}`);\r\n      dispatch(setRoleModuleMapping(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n","import { instance } from '../index';\r\nimport { createQueryString } from 'src/utils/helper';\r\nimport {\r\n  setProjectList,\r\n  setRoutingHopeCount,\r\n  setRoutingSourceEndpoint\r\n} from 'src/reducers/common';\r\n\r\nexport const getRoutingSourceEndpoint: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const queryString = createQueryString(apiData);\r\n        const res = await instance.get(\r\n          `/Meters/GetMeterDropdownDetail?${queryString}`\r\n        );\r\n        dispatch(setRoutingSourceEndpoint(res?.data?.dropdownDetailList));\r\n        resolve(res?.data);\r\n      } catch (error) {\r\n        //@ts-ignore\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\nexport const getRoutingHopeCount: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(\r\n        `/Meters/GetMeterDropdownDetail?${queryString}`\r\n      );\r\n      dispatch(setRoutingHopeCount(res?.data?.dropdownDetailList));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      \r\n      reject(error);\r\n    }\r\n  });\r\n};\r\nexport const getMeterProjectList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try { \r\n      const res = await instance.get(\r\n        `MeterProjects/getMeterProjectList `\r\n      );\r\n      dispatch(setProjectList(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      \r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Box,\r\n  TextField,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  Typography,\r\n  FormHelperText,\r\n  IconButton,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Button,\r\n  Tooltip,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport {\r\n  ClearIcon,\r\n  DeleteIcon,\r\n  MeterNoApplyIcon,\r\n  TickIcon\r\n} from 'src/assets/svg/svg';\r\nimport { useTheme } from '@mui/material';\r\nimport CommonButton from 'src/components/Button';\r\nimport CommonDropdown from 'src/components/CustomDropdown/CustomDropdown';\r\nimport CustomBackdrop from 'src/components/CustomBackdrop/CustomBackdrop';\r\nimport CustomDrawer from 'src/components/CustomDrawer';\r\nimport CommonSelectBox from 'src/components/SelectBox/SelectBox';\r\nimport {\r\n  Clear,\r\n  Delete,\r\n  Description,\r\n  Source,\r\n  Visibility,\r\n  VisibilityOff\r\n} from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getModules,\r\n  getRoleModuleMapping,\r\n  getRoles,\r\n  register,\r\n  updateRoleModuleMapping,\r\n  updateUserDetail\r\n} from 'src/api/AccessManagement';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { Checkbox, List, ListItem } from '@mui/material';\r\nimport { findRoles, hasPermission } from 'src/utils/permission';\r\nimport { getMeterProjectList } from 'src/api/common';\r\n// import { getMeterDropdownDetailHandler } from 'src/api/Meters';\r\nimport { encryptMessage, getLocalStorage } from 'src/utils/helper';\r\nimport { roleNames } from 'src/utils/const';\r\n// Define the props type for the Header component\r\ninterface HeaderProps {\r\n  fetchList: () => void;\r\n  filterData: any;\r\n  onChangeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  applyFilterHandler: () => void;\r\n  clearBulkHandler?: () => void;\r\n  clearFilterHandler: () => void;\r\n  isBulk?: boolean;\r\n  isRole?: boolean;\r\n  applyBulkHandler?: () => void;\r\n  activeViewState?: boolean;\r\n  setActiveViewState?: any;\r\n  activeEdit?: boolean;\r\n  selectedEditData?: any;\r\n  setActiveEdit?: any;\r\n  setSelectedEditData?: any;\r\n}\r\n\r\n// for role Management\r\n\r\nconst RoleContent = ({\r\n  roleModule,\r\n  setRoleModule,\r\n  moduleList,\r\n  handleCheckboxChange,\r\n  handleRoleApply,\r\n  refRoleHandler,\r\n  activeView,\r\n  moduleListByRole,\r\n  activeEdit\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const filterCheck = (roleModule) => {\r\n    if (moduleListByRole?.roleName === 'superadmin') {\r\n      let rolesToHide = findRoles('user');\r\n      const isRoleHidden = rolesToHide.includes(roleModule.roleName);\r\n      return isRoleHidden;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          width: '100%',\r\n          gap: 2\r\n        }}\r\n      >\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={roleModule.roleName}\r\n            onChange={(e) => {\r\n              setRoleModule({ ...roleModule, roleName: e.target.value });\r\n            }}\r\n            required\r\n            disabled={activeView ? activeView : activeEdit ? true : false}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            // color={errorsMsg.name ? 'error' : 'primary'}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"desc\"\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={roleModule.description}\r\n            onChange={(e) => {\r\n              setRoleModule({ ...roleModule, description: e.target.value });\r\n            }}\r\n            required\r\n            // disabled={activeView ? activeView : filterCheck(roleModule)}\r\n            disabled={activeView ? activeView : activeEdit ? true : false}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={3}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <List sx={{ p: 0 }}>\r\n            {moduleList?.map((row, i) => (\r\n              <ListItem key={row.moduleName}>\r\n                <Checkbox\r\n                  disabled={activeView ? activeView : false}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                  checked={roleModule?.moduleList?.includes(row.moduleName)}\r\n                  onChange={() => handleCheckboxChange(row.moduleName)}\r\n                />\r\n                {row.moduleName}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n          <Button\r\n            sx={{ display: 'none' }}\r\n            onClick={handleRoleApply}\r\n            ref={refRoleHandler}\r\n          >\r\n            Apply button\r\n          </Button>\r\n        </FormControl>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\n// for user Management\r\n\r\nconst Content = ({\r\n  formState,\r\n  setFormState,\r\n  errors,\r\n  setErrors,\r\n  errorsMsg,\r\n  setErrorsMsg,\r\n  showPassword,\r\n  setShowPassword,\r\n  roles,\r\n  handleApplys,\r\n  refHandler,\r\n  activeViewState,\r\n  activeEdit,\r\n  moduleListByRole,\r\n  projectList,\r\n  columnsList,\r\n  setColumnsList,\r\n  getMeterDropdownDetailList\r\n}) => {\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  const handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseUpPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'roleName') {\r\n      const selectedRole = roles?.roleList?.find(\r\n        (item) => item.roleId === value\r\n      );\r\n\r\n      setFormState((prevState) => ({\r\n        ...prevState,\r\n        roleName: selectedRole?.roleName,\r\n        roleId: value\r\n      }));\r\n    } else if (name === 'project') {\r\n      setColumnsList(typeof value === 'string' ? value.split(',') : value);\r\n      setFormState((prevState) => ({\r\n        ...prevState,\r\n        project: value.join(',')\r\n      }));\r\n    } else {\r\n      setFormState((prevState) => ({\r\n        ...prevState,\r\n        [name]: value\r\n      }));\r\n    }\r\n\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: false\r\n    }));\r\n\r\n    setErrorsMsg((prevErrorsMsg) => ({\r\n      ...prevErrorsMsg,\r\n      [name]: ''\r\n    }));\r\n  };\r\n\r\n  const filterRoles = (loggedInRole) => {\r\n    let rolesToHide = findRoles(loggedInRole);\r\n    let list = roles?.roleList?.filter(\r\n      (role) => !rolesToHide.includes(role.roleName.toLowerCase())\r\n    );\r\n    list = list?.map((item, i) => {\r\n      let obj = {\r\n        value: item?.roleId,\r\n        label: item?.roleName\r\n      };\r\n      return obj;\r\n    });\r\n    return list;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        style={{\r\n          padding: '20px 0px'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: '100%',\r\n            gap: 2\r\n          }}\r\n        >\r\n          {/* name Field */}\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              error={errors.name}\r\n              helperText={errorsMsg.name}\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              inputProps={{\r\n                style: {\r\n                  fontSize: '20px'\r\n                }\r\n              }}\r\n              value={formState.name}\r\n              disabled={activeViewState ? true : false}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                //   setEmailError(false);\r\n                //   setEmailErrorMessage('');\r\n              }}\r\n              autoFocus\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color={errorsMsg.name ? 'error' : 'primary'}\r\n            />\r\n          </FormControl>\r\n          {/* Email Field */}\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              error={errors.email}\r\n              helperText={errorsMsg.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              autoComplete=\"email\"\r\n              inputProps={{\r\n                style: {\r\n                  fontSize: '20px'\r\n                }\r\n              }}\r\n              disabled={activeViewState || activeEdit ? true : false}\r\n              value={formState.email}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                //   setEmailError(false);\r\n                //   setEmailErrorMessage('');\r\n              }}\r\n              autoFocus\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color={errorsMsg.email ? 'error' : 'primary'}\r\n            />\r\n          </FormControl>\r\n          {/* Password Field */}\r\n          {!activeEdit && !activeViewState && (\r\n            <FormControl variant=\"outlined\" error={errors.password}>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                name=\"password\"\r\n                sx={{ borderRadius: 0 }}\r\n                placeholder=\"Password\"\r\n                disabled={activeViewState ? true : false}\r\n                type={showPassword ? 'text' : 'password'}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                  // setPasswordError(false);\r\n                  // setPasswordErrorMessage('');\r\n                }}\r\n                inputProps={{\r\n                  style: {\r\n                    fontSize: '20px'\r\n                  }\r\n                }}\r\n                required\r\n                fullWidth\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      disabled={activeViewState ? true : false}\r\n                      // className=\"custom-textfield\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      onMouseUp={handleMouseUpPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              {errors.password && (\r\n                <FormHelperText>{errorsMsg.password}</FormHelperText>\r\n              )}\r\n            </FormControl>\r\n          )}\r\n          {/* Number field */}\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              error={errors.phoneNumber}\r\n              helperText={errorsMsg.phoneNumber}\r\n              id=\"\"\r\n              type=\"text\"\r\n              name=\"phoneNumber\"\r\n              placeholder=\"Phone Number\"\r\n              value={formState.phoneNumber}\r\n              disabled={activeViewState ? true : false}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                //   setEmailError(false);\r\n                //   setEmailErrorMessage('');\r\n              }}\r\n              inputProps={{\r\n                style: {\r\n                  fontSize: '20px'\r\n                }\r\n              }}\r\n              autoFocus\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color={errorsMsg.phoneNumber ? 'error' : 'primary'}\r\n            />\r\n          </FormControl>\r\n          {/* project field */}\r\n          <CommonSelectBox\r\n            error={errors.roleName}\r\n            errorMsg={errorsMsg.roleName}\r\n            // id=\"roleName\"\r\n            name=\"roleName\"\r\n            value={formState.roleId}\r\n            onChange={handleChange}\r\n            disabled={activeViewState ? true : false}\r\n            fullWidth\r\n            renderValue={(selectedValue) => {\r\n              if (!selectedValue) {\r\n                return (\r\n                  <Typography fontSize={18} color=\"gray\">\r\n                    Role\r\n                  </Typography>\r\n                );\r\n              }\r\n              const selectedOption = filterRoles(\r\n                moduleListByRole?.roleName\r\n              ).find((option) => option.value === selectedValue);\r\n              return selectedOption ? (\r\n                <Typography fontSize={18}>{selectedOption.label}</Typography>\r\n              ) : (\r\n                <Typography fontSize={18} color=\"gray\">\r\n                  Role\r\n                </Typography>\r\n              );\r\n            }}\r\n            options={filterRoles(moduleListByRole?.roleName)}\r\n          />\r\n          {/* Project field */}\r\n\r\n          <CommonSelectBox\r\n            error={errors.project}\r\n            errorMsg={errorsMsg.project}\r\n            name=\"project\"\r\n            multiple={true}\r\n            value={columnsList}\r\n            // onChange={handleChangeMultipleSelect}\r\n            onChange={handleChange}\r\n            disabled={activeViewState}\r\n            fullWidth\r\n            renderValue={(selected) => {\r\n              if (selected.length === 0) {\r\n                return (\r\n                  <Typography color=\"text.secondary\" fontSize={18}>\r\n                    Project\r\n                  </Typography>\r\n                );\r\n              }\r\n              return selected.join(', ');\r\n            }}\r\n            options={projectList?.map((item, i) => {\r\n              let obj = {\r\n                value: item.projectName,\r\n                label: item.projectName\r\n              };\r\n              return obj;\r\n            })}\r\n          />\r\n          {/* source field */}\r\n\r\n          <CommonSelectBox\r\n            error={errors.source}\r\n            errorMsg={errorsMsg.source}\r\n            name=\"source\"\r\n            value={formState.source}\r\n            onChange={(event) => {\r\n              handleChange(event);\r\n              // Make sure to update formState.source here if needed\r\n            }}\r\n            disabled={activeViewState}\r\n            fullWidth\r\n            renderValue={(selectedValue) => {\r\n              if (!selectedValue) {\r\n                return (\r\n                  <Typography fontSize={18} color=\"gray\">\r\n                    Role Purpose\r\n                  </Typography>\r\n                );\r\n              }\r\n              const selectedOption =\r\n                getMeterDropdownDetailList?.dropdownDetailList?.[0]?.optionsList?.find(\r\n                  (option) => option.options === selectedValue\r\n                );\r\n              return selectedOption ? (\r\n                <Typography fontSize={18}>{selectedOption.options}</Typography>\r\n              ) : (\r\n                <Typography fontSize={18} color=\"gray\">\r\n                  Role Purpose\r\n                </Typography>\r\n              );\r\n            }}\r\n            options={getMeterDropdownDetailList?.dropdownDetailList?.[0]?.optionsList?.map(\r\n              (item) => ({\r\n                value: item.options,\r\n                label: item.options\r\n              })\r\n            )}\r\n          />\r\n          <Button\r\n            sx={{ display: 'none' }}\r\n            onClick={handleApplys}\r\n            ref={refHandler}\r\n          >\r\n            Apply button\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\n// main component header\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  fetchList,\r\n  filterData,\r\n  onChangeHandler,\r\n  applyFilterHandler,\r\n  clearFilterHandler,\r\n  isRole,\r\n  isBulk,\r\n  applyBulkHandler,\r\n  activeEdit,\r\n  selectedEditData,\r\n  setActiveEdit,\r\n  setSelectedEditData,\r\n  activeViewState,\r\n  setActiveViewState,\r\n  clearBulkHandler\r\n}) => {\r\n  let secretKey = \"MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgFt4U5sB+I3fi4GATqnJYbTuPo1hrzZR0y4zolF6UA2EWvZMRoslvZJP8wqV4iwPFhSBXNj+bEPolnL117DGWgXIroN0NV1vF51FcdbYZXP8MltY4XNnzelawsnzeKwHqtg3I0wj5DfxmYDTlCjgdKhdABdg91T1+WZeeR0mpyH9AgMBAAE=\"\r\n  let defaultPayload = {\r\n    roleName: '',\r\n    roleId: null,\r\n    description: '',\r\n    moduleList: []\r\n  };\r\n  let defaultFormData = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phoneNumber: '',\r\n    project: '',\r\n    roleId: '',\r\n    roleName: '',\r\n    source: '',\r\n    isActive: true\r\n  };\r\n\r\n  let defaultErrors = {\r\n    name: false,\r\n    email: false,\r\n    password: false,\r\n    phoneNumber: false,\r\n    roleName: false,\r\n    project: false,\r\n    source: false\r\n  };\r\n  let defaultErrorMsg = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phoneNumber: '',\r\n    roleName: '',\r\n    project: '',\r\n    source: ''\r\n  };\r\n\r\n  // Validation rules\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const passwordRegex =\r\n    /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n  // const phoneRegex = /^\\d{10}$/;\r\n  const phoneRegex = /^[6-9]\\d{9}$/;\r\n\r\n  const theme = useTheme();\r\n  const { addToast } = useToasts();\r\n  const refHandler = useRef(null);\r\n  const refRoleHandler = useRef(null);\r\n  const { roles, moduleList } = useSelector(\r\n    (state: any) => state.accessManagement\r\n  );\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const { getMeterDropdownDetailList } = useSelector(\r\n    (state: any) => state.meters\r\n  );\r\n  const media = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const { projectList } = useSelector((state: any) => state.common);\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [columnsList, setColumnsList] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [roleModule, setRoleModule] = useState(defaultPayload);\r\n  const [roleListMapping, setRoleListMapping] = useState([]);\r\n  const [formState, setFormState] = useState(defaultFormData);\r\n  const [errors, setErrors] = useState(defaultErrors);\r\n  const [errorsMsg, setErrorsMsg] = useState(defaultErrorMsg);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n\r\n\r\n  const toggleDrawer = () => {\r\n    setSelectedEditData(null);\r\n    setRoleModule(defaultPayload);\r\n    setFormState(defaultFormData);\r\n    setActiveViewState(false);\r\n    setActiveEdit(false);\r\n    setDrawerOpen(!drawerOpen);\r\n    setColumnsList([]);\r\n    setErrors(defaultErrors);\r\n    setErrorsMsg(defaultErrorMsg);\r\n  };\r\n\r\n  const getRoleListCall = () => {\r\n    setLoading(true);\r\n    dispatch(\r\n      getRoleModuleMapping({\r\n        RoleName: selectedEditData?.roleName,\r\n        RoleId: selectedEditData?.roleId\r\n      })\r\n    )\r\n      .then((res) => {\r\n        let createPayload = {\r\n          roleName: res.roleName,\r\n          roleId: res.roleId,\r\n          description: selectedEditData.description,\r\n          // moduleList: findIds.map((item) => item.moduleId)\r\n          moduleList: res?.moduleListByRole?.map((item) => item.moduleName)\r\n        };\r\n        setLoading(false);\r\n        setRoleModule(createPayload);\r\n        dispatch(getRoles());\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const getUserDetail = () => {\r\n    setLoading(true);\r\n    if (selectedEditData) {\r\n      setFormState({ ...selectedEditData });\r\n      setColumnsList(selectedEditData.project.split(','));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApply = () => {\r\n    refHandler.current.click();\r\n  };\r\n\r\n  const handleRoleRefApply = () => {\r\n    refRoleHandler.current.click();\r\n  };\r\n\r\n  const handleCheckboxChange = (item) => {\r\n    if (roleModule?.moduleList?.includes(item)) {\r\n      setRoleModule({\r\n        ...roleModule,\r\n        moduleList: roleModule?.moduleList?.filter((module) => module !== item)\r\n      });\r\n    } else {\r\n      setRoleModule({\r\n        ...roleModule,\r\n        moduleList: [...roleModule?.moduleList, item]\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRoleApply = async () => {\r\n    if (roleModule.roleName && roleModule.moduleList.length > 0) {\r\n      let payload = {\r\n        ...roleModule\r\n        // moduleList: moduleList?.moduleList\r\n        //   ?.filter((module) => roleModule.moduleList.includes(module.moduleId))\r\n        //   .map((module) => module.moduleName)\r\n      };\r\n\r\n      setLoading(true);\r\n      try {\r\n        let res = await dispatch(updateRoleModuleMapping(payload));\r\n        if (res) {\r\n          console.log('res', res);\r\n          setLoading(false);\r\n          toggleDrawer();\r\n          fetchList();\r\n          addToast(res.Message, {\r\n            appearance: 'success'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        toggleDrawer();\r\n        // setFormState(defaultPaylod);\r\n      }\r\n    } else {\r\n      addToast('Fields are required', {\r\n        appearance: 'success'\r\n      });\r\n    }\r\n  };\r\n\r\n  //  user Management\r\n  const validateForm = () => {\r\n    const { name, email, password, phoneNumber, roleName, project, source } =\r\n      formState;\r\n    let valid = true;\r\n    const newErrors = { ...errors };\r\n    const newErrorsMsg = { ...errorsMsg };\r\n\r\n    // Name validation\r\n    if (!name.trim()) {\r\n      newErrors.name = true;\r\n      newErrorsMsg.name = 'Name is required';\r\n      valid = false;\r\n    }\r\n\r\n    // Email validation\r\n    if (!emailRegex.test(email)) {\r\n      newErrors.email = true;\r\n      newErrorsMsg.email = 'Invalid email format';\r\n      valid = false;\r\n    }\r\n\r\n    if (!activeEdit) {\r\n      if (!password) {\r\n        newErrors.password = true;\r\n        newErrorsMsg.password = 'Password is required';\r\n        valid = false;\r\n      } else if (password.length < 8) {\r\n        newErrors.password = true;\r\n        newErrorsMsg.password = 'Password must be at least 8 characters long';\r\n        valid = false;\r\n      } else if (!passwordRegex.test(password)) {\r\n        newErrors.password = true;\r\n        newErrorsMsg.password =\r\n          'Password must include at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character';\r\n        valid = false;\r\n      } else {\r\n        newErrors.password = false;\r\n        newErrorsMsg.password = '';\r\n      }\r\n    }\r\n\r\n    // Phone number validation\r\n    if (!phoneRegex.test(phoneNumber)) {\r\n      newErrors.phoneNumber = true;\r\n      newErrorsMsg.phoneNumber =\r\n        'Invalid phone number. Phone number must start with 6, 7, 8, or 9 and be 10 digits long.';\r\n      valid = false;\r\n    }\r\n\r\n    // Role name validation\r\n    if (!roleName) {\r\n      newErrors.roleName = true;\r\n      newErrorsMsg.roleName = 'Role is required';\r\n      valid = false;\r\n    }\r\n\r\n    // Project validation\r\n    if (!project) {\r\n      newErrors.project = true;\r\n      newErrorsMsg.project = 'Project is required';\r\n      valid = false;\r\n    }\r\n    // Project validation\r\n    if (!source) {\r\n      newErrors.source = true;\r\n      newErrorsMsg.source = 'Source is required';\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    setErrorsMsg(newErrorsMsg);\r\n    return valid;\r\n  };\r\n\r\n  const handleApplys = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setLoading(true);\r\n      try {\r\n        let res = await dispatch(\r\n          activeEdit\r\n            ? updateUserDetail({\r\n                name: formState.name,\r\n                email: formState.email,\r\n                phoneNumber: formState.phoneNumber,\r\n                project: formState.project,\r\n                roleId: formState.roleId,\r\n                isActive: formState.isActive,\r\n                roleName: formState.roleName\r\n              })\r\n            : register({\r\n                ...formState,\r\n                password: encryptMessage(formState?.password, secretKey)\r\n              })\r\n        );\r\n        if (res) {\r\n          setLoading(false);\r\n          toggleDrawer();\r\n          setFormState(defaultFormData);\r\n          fetchList();\r\n          addToast(res.message, {\r\n            appearance: 'success'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        toggleDrawer();\r\n        addToast(error?.data?.errors?.Message, {\r\n          appearance: 'error'\r\n        });\r\n        setFormState(defaultFormData);\r\n        // addToast(res.message, {\r\n        //   appearance: 'success'\r\n        // });\r\n      }\r\n    } else {\r\n      console.log('Validation errors');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isRole) {\r\n      dispatch(getMeterProjectList());\r\n      // dispatch(\r\n      //   getMeterDropdownDetailHandler({\r\n      //     Project: getLocalStorage('project'),\r\n      //     DropdownName: 'rolepurpose'\r\n      //   })\r\n      // );\r\n      dispatch(getRoles());\r\n    }\r\n    if (moduleListByRole.roleName === 'superadmin') {\r\n      // dispatch(getModules());\r\n    }\r\n\r\n    if (isRole && moduleListByRole.roleName !== 'superadmin') {\r\n      dispatch(\r\n        getRoleModuleMapping({\r\n          RoleName: moduleListByRole?.roleName,\r\n          RoleId: moduleListByRole?.roleId\r\n        })\r\n      )\r\n        .then((res) => {\r\n          setRoleListMapping(res?.moduleListByRole);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [isRole]);\r\n\r\n  useEffect(() => {\r\n    if (activeEdit || activeViewState) {\r\n      setDrawerOpen(true);\r\n      if (isRole) {\r\n        getRoleListCall();\r\n      } else {\r\n        getUserDetail();\r\n      }\r\n    }\r\n  }, [activeEdit, activeViewState]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <CustomBackdrop open={loading} />}\r\n      <CustomDrawer\r\n        open={drawerOpen}\r\n        toggleDrawer={toggleDrawer}\r\n        title={\r\n          isRole\r\n            ? activeEdit\r\n              ? 'Edit Role'\r\n              : activeViewState\r\n              ? 'View Role'\r\n              : 'Add Role'\r\n            : activeEdit\r\n            ? 'Edit User'\r\n            : activeViewState\r\n            ? 'View User'\r\n            : 'Add User'\r\n        }\r\n        buttonText=\"Apply\"\r\n        isApply={activeViewState ? false : true}\r\n        onApply={isRole ? handleRoleRefApply : handleApply}\r\n        isDisabled={activeViewState}\r\n        // isCancel\r\n        // onCancel={handleCancel}\r\n        children={\r\n          isRole ? (\r\n            <RoleContent\r\n              roleModule={roleModule}\r\n              setRoleModule={setRoleModule}\r\n              moduleListByRole={moduleListByRole}\r\n              moduleList={\r\n                moduleListByRole.roleName === 'superadmin'\r\n                  ? moduleList?.moduleList\r\n                  : roleListMapping\r\n              }\r\n              handleCheckboxChange={handleCheckboxChange}\r\n              handleRoleApply={handleRoleApply}\r\n              refRoleHandler={refRoleHandler}\r\n              activeView={activeViewState}\r\n              activeEdit={activeEdit}\r\n            />\r\n          ) : (\r\n            <Content\r\n              formState={formState}\r\n              errors={errors}\r\n              errorsMsg={errorsMsg}\r\n              showPassword={showPassword}\r\n              setFormState={setFormState}\r\n              setErrors={setErrors}\r\n              setErrorsMsg={setErrorsMsg}\r\n              setShowPassword={setShowPassword}\r\n              roles={roles}\r\n              handleApplys={handleApplys}\r\n              refHandler={refHandler}\r\n              activeViewState={activeViewState}\r\n              activeEdit={activeEdit}\r\n              moduleListByRole={moduleListByRole}\r\n              projectList={projectList?.projectList}\r\n              columnsList={columnsList}\r\n              setColumnsList={setColumnsList}\r\n              getMeterDropdownDetailList={getMeterDropdownDetailList}\r\n            />\r\n          )\r\n        }\r\n      />\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            display: media ? 'flex' : 'flex-column',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          {!isRole &&\r\n            hasPermission(\r\n              moduleListByRole,\r\n              permission?.User_Management_Search\r\n            ) && (\r\n              <Box display={'flex'} alignItems={'center'}>\r\n                <Box sx={{ width: media ? 'none' : '100%' }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={filterData?.NameOrEmail || ''}\r\n                    name=\"NameOrEmail\"\r\n                    placeholder=\"Search\"\r\n                    onChange={onChangeHandler}\r\n                    InputProps={{\r\n                      sx: {\r\n                        width: media ? '100%' : '100%',\r\n                        height: 35,\r\n                        fontSize: '22px !important',\r\n                        fontWeight: '500 !important',\r\n                        borderRight: '0px'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  display={'flex'}\r\n                  alignItems={'center'}\r\n                  justifyContent={'start'}\r\n                  // pb={1}\r\n                >\r\n                  <Tooltip title=\"Apply Filters\">\r\n                    <IconButton onClick={applyFilterHandler}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        sx={{\r\n                          borderRadius: 0,\r\n                          width: 44,\r\n                          height: 35,\r\n                          border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                          backgroundColor: theme.colors.alpha.secondary[100],\r\n                          padding: '11px 10px !important',\r\n                          minWidth: 'unset',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center'\r\n                        }}\r\n                      >\r\n                        <TickIcon />\r\n                      </Button>\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Clear Filters\">\r\n                    <IconButton onClick={clearFilterHandler}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        sx={{\r\n                          borderRadius: 0,\r\n                          width: 44,\r\n                          height: 35,\r\n                          border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                          backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                          padding: '11px 10px !important',\r\n                          minWidth: 'unset',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center'\r\n                        }}\r\n                      >\r\n                        <ClearIcon />\r\n                      </Button>\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          <Box\r\n            flexGrow={1}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: media ? 'end' : 'start',\r\n              gap: 2\r\n            }}\r\n          >\r\n            {isBulk && (\r\n              <Box>\r\n                <Tooltip title=\"Bulk Delete\">\r\n                  <IconButton onClick={applyBulkHandler}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        borderRadius: 0,\r\n                        width: 44,\r\n                        height: 35,\r\n                        border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                        padding: '11px 10px !important',\r\n                        minWidth: 'unset',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                      }}\r\n                    >\r\n                      <Delete />\r\n                    </Button>\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Bulk Clear\">\r\n                  <IconButton onClick={clearBulkHandler}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        borderRadius: 0,\r\n                        width: 44,\r\n                        height: 35,\r\n                        border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                        padding: '11px 10px !important',\r\n                        minWidth: 'unset',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                      }}\r\n                    >\r\n                      <Clear />\r\n                    </Button>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            )}\r\n            {!isRole && (\r\n              <CommonDropdown\r\n                label={'Role'}\r\n                name=\"Role\"\r\n                xs={12}\r\n                sm={12}\r\n                md={6}\r\n                lg={4}\r\n                value={filterData?.Role}\r\n                onChange={onChangeHandler}\r\n                options={roles?.roleList?.map((item, i) => {\r\n                  let obj = {\r\n                    value: item.roleName,\r\n                    label: item.roleName\r\n                  };\r\n                  return obj;\r\n                })}\r\n                // xs={6}\r\n                // sm={6}\r\n                // md={6}\r\n              />\r\n            )}\r\n\r\n            {((isRole &&\r\n              hasPermission(\r\n                moduleListByRole,\r\n                permission?.Role_Management_Add_Role\r\n              )) ||\r\n              (!isRole &&\r\n                hasPermission(\r\n                  moduleListByRole,\r\n                  permission?.User_Management_Add_User\r\n                ))) && (\r\n              <Box>\r\n                <CommonButton\r\n                  onClick={() => {\r\n                    toggleDrawer();\r\n                  }}\r\n                  lg={2}\r\n                  text={isRole ? 'Add Role' : 'Add User'}\r\n                  disabled={false}\r\n                  variant=\"contained\"\r\n                  loading={false}\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  type=\"button\"\r\n                  sx={{ minWidth: '180px', paddingY: '8px' }}\r\n                />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport { Pagination } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\n\r\nexport const StyledTableCell = styled(TableCell)(({ theme, align }) => ({\r\n  \r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: '#E2E2E2',\r\n    color: theme.colors.alpha.black[100],\r\n    textTransform: 'none',\r\n    border: `0px solid ${theme.colors.alpha.black[100]}`, \r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: theme.typography.pxToRem(45)\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      height: theme.typography.pxToRem(50)\r\n    }\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n    textAlign: `${align} !important`,\r\n    color: theme.colors.alpha.black[100],\r\n    // border: `1px solid ${theme.colors.alpha.black[50]}`, // Set to 1px\r\n    fontWeight: 400,\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: theme.typography.pxToRem(20)\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      height: theme.typography.pxToRem(30)\r\n    }\r\n  },\r\n  '&:(:last-child)': {\r\n    borderBottom: `1px solid ${theme.colors.alpha.black[100]}`\r\n  }\r\n}));\r\n\r\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: '#FFFFFF'\r\n  },\r\n  '&:not(:last-child)': {\r\n    borderBottom: `1px solid ${theme.colors.alpha.black[100]}`\r\n  },\r\n  [`&.${tableCellClasses.head}`]: {\r\n    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n    color: theme.colors.alpha.black[100]\r\n  }\r\n}));\r\n\r\nexport const StyledTableSortLabel = styled(TableSortLabel)(({ theme }) => ({\r\n  '& .MuiTableSortLabel-icon': {\r\n    opacity: 1, // Make the sort icon always visible\r\n    cursor: 'pointer !important'\r\n  },\r\n  '&.Mui-active': {\r\n    fontWeight: '700', // Ensure font weight is normal for active sort label\r\n    color: theme.colors.alpha.black[100]\r\n  },\r\n  '&:hover': {\r\n    color: '#111 !important', // Set the hover text color if needed\r\n    cursor: 'pointer !important'\r\n  }\r\n}));\r\n\r\nexport const StyledPagination = styled(Pagination)(({ theme }) => ({\r\n  '& .MuiPaginationItem-root': {\r\n    margin: '0 0.5px',\r\n    minWidth: '31px',\r\n    height: '31px',\r\n    borderRadius: 0,\r\n    fontSize: '12',\r\n    fontWeight: '500',\r\n    color: theme.colors.alpha.black[100],\r\n    backgroundColor: 'white',\r\n    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n    '&:hover': {\r\n      backgroundColor: theme.colors.alpha.primaryAlt[100]\r\n    }\r\n  },\r\n  '& .Mui-selected': {\r\n    backgroundColor: `${theme.colors.alpha.nmsPrimaryAlt[100]} !important`,\r\n    color: theme.colors.alpha.trueWhite[100],\r\n    '&:hover': {\r\n      backgroundColor: `${theme.palette.info.light} !important`\r\n    }\r\n  },\r\n  '& .MuiPaginationItem-ellipsis': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\n// export const StyledPagination = styled(Pagination)(({ theme }) => ({\r\n//   '& .MuiPaginationItem-root': {\r\n//     margin: '0 2px',\r\n//     minWidth: '32px',\r\n//     height: '32px',\r\n//     borderRadius: 0,\r\n//     fontSize: '12',\r\n//     fontWeight: '500',\r\n//     color: theme.colors.alpha.black[100],\r\n//     backgroundColor: 'white',\r\n//     border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n//     '&:hover': {\r\n//       backgroundColor: theme.colors.alpha.primaryAlt[100]\r\n//     }\r\n//   },\r\n//   '& .MuiPaginationItem-ellipsis, & .MuiPaginationItem-page': {\r\n//     display: 'none' // Hide page numbers and ellipsis\r\n//   },\r\n//   '& .Mui-selected': {\r\n//     backgroundColor: `${theme.colors.alpha.primary[100]} !important`,\r\n//     color: theme.colors.alpha.black[100],\r\n//     '&:hover': {\r\n//       backgroundColor: `${theme.palette.info.light} !important`\r\n//     }\r\n//   }\r\n// }));\r\n","import Chip from '@mui/material/Chip';\r\n\r\nconst CommandStatusChip = ({ status }) => {\r\n  const getStatusChip = (status) => {\r\n    switch (status) {\r\n      case 1:\r\n      case 2:\r\n      case 3:\r\n        return (\r\n          <Chip\r\n            label=\"Pending\"\r\n            sx={{ backgroundColor: '#F7CB73', color: 'black',  borderRadius: 0 }}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Chip\r\n            label=\"Success\"\r\n            sx={{ backgroundColor: '#82FF88', color: 'black',  borderRadius: 0 }}\r\n          />\r\n        );\r\n      case 5:\r\n        return (\r\n          <Chip\r\n            label=\"Failed\"\r\n            sx={{ backgroundColor: '#F8D3D2', color: 'black',  borderRadius: 0 }}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <Chip\r\n            label=\"Pending\"\r\n            sx={{ backgroundColor: '#F7CB73', color: 'black',  borderRadius: 0 }}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return getStatusChip(status);\r\n};\r\n\r\nexport default CommandStatusChip;\r\n","import { styled, Switch } from '@mui/material';\r\n\r\nexport const CustomSwitch = styled(Switch)(({ theme, checked, disabled }) => ({\r\n  width: 50,\r\n  height: 35,\r\n  padding: 7,\r\n  cursor: disabled ? 'not-allowed' : 'pointer',  \r\n  '& .MuiSwitch-switchBase': {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: 'translateX(6px)',\r\n    '&.Mui-checked': {\r\n      color: '#fff',\r\n      transform: 'translateX(22px)',\r\n      '& + .MuiSwitch-track': {\r\n        backgroundColor: '#000', // Black background when switch is on\r\n        opacity: 1,\r\n        border: 'none'\r\n      }\r\n    }\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    backgroundColor: checked\r\n      ? `${\r\n          disabled\r\n            ? theme.colors.alpha.grey[100]\r\n            : theme.colors.alpha.secondary[100]\r\n        } !important`\r\n      : `${\r\n          disabled\r\n            ? theme.colors.alpha.grey[100]\r\n            : theme.colors.alpha.danger[100]\r\n        } !important`, // Green if true, red if false\r\n    width: 20,\r\n    height: 20.5,\r\n    marginTop: 6,\r\n    borderRadius: 0, // Removes the default round shape, making it square\r\n    '&:before': {\r\n    \r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundImage: 'none'\r\n    }\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 0,\r\n    backgroundColor: '#000', // Black background when switch is off\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color'], {\r\n      duration: 500\r\n    })\r\n  }\r\n}));\r\n","import { Box, Grid, styled } from '@mui/material';\r\n\r\ninterface ProfilesBoxProps {\r\n  isActive: boolean;\r\n}\r\n\r\nexport const ProfilesBox = styled(Box, {\r\n  shouldForwardProp: (prop) => prop !== 'isActive' // Prevent `isActive` from being passed to the DOM\r\n})<ProfilesBoxProps>(({ theme, isActive }) => ({\r\n  border: '1px solid #000',\r\n  textAlign: 'center',\r\n  height: '40px',\r\n  background: isActive ? theme.colors.alpha.primary[100] : theme.colors.alpha.grey[100], // Active state background\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  cursor: 'pointer',\r\n  fontSize: '12px',\r\n  fontWeight: '500',\r\n  fontFamily: theme.typography.fontFamily,\r\n  '&:hover': {\r\n    background: theme.colors.alpha.trueWhite[100],\r\n  },\r\n}));\r\n\r\nexport const CategoryBox = styled(Box)(({ theme }) => ({\r\n  border: '1px solid #000',\r\n  textAlign: 'center',\r\n  height: '60px',\r\n  background: theme.colors.alpha.grey[100],\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  cursor: 'pointer',\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  fontFamily: theme.typography.fontFamily,\r\n  '&:hover': {\r\n    background: theme.colors.alpha.trueWhite[100] // Change to the desired hover background color\r\n  }\r\n}));\r\n\r\ninterface ActionBoxProps {\r\n  isActive: boolean;\r\n}\r\nexport const ActionBox = styled(Grid, {\r\n  shouldForwardProp: (prop) => prop !== 'isActive'\r\n})<ActionBoxProps>(({ theme, isActive }) => ({\r\n  height: '53px',\r\n  border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n  background: isActive\r\n    ? theme.colors.alpha.primary[100]\r\n    : theme.colors.alpha.black[100],\r\n  color: isActive\r\n    ? theme.colors.alpha.black[100]\r\n    : theme.colors.alpha.trueWhite[100],\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '16px 22px',\r\n  cursor: 'pointer',\r\n  transition: 'background-color 0.3s ease', // Optional: smooth transition for background color\r\n  '&:hover': {\r\n    background: theme.colors.alpha.primary[100], // Change to the desired hover background color\r\n    color: theme.colors.alpha.black[100]\r\n  }\r\n}));\r\n\r\nexport const StatusBox = styled(Box)(({ theme }) => ({\r\n  height: '19px',\r\n  width: '19px',\r\n  background: theme.colors.alpha.secondary[100],\r\n  border: `1px solid ${theme.colors.alpha.black[100]}`\r\n}));\r\n\r\nexport const StatusBoxOnline = styled(Box)(({ theme }) => ({\r\n  height: '16px',\r\n  width: '16px',\r\n  background: \"#D7FAE0\",\r\n  border: `1px solid #00AB56`\r\n}));\r\nexport const StatusBoxOffline = styled(Box)(({ theme }) => ({\r\n  height: '16px',\r\n  width: '16px',\r\n  background: \"#FFD6D3FF\",\r\n  border: `1px solid #E63D45A4`\r\n}));\r\n\r\nexport const StatusBoxs = styled(Grid)(({ theme }) => ({\r\n  height: '30px',\r\n  width: '30px',\r\n  border: '1px solid #000',\r\n  borderRight: '0px',\r\n  borderTop: '0px',\r\n  borderBottom: '0px',\r\n  background: theme.colors.alpha.danger[100],\r\n  position: 'absolute',\r\n  top: 0,\r\n  right: 0\r\n}));\r\n\r\nexport const CommandCategoryBox = styled(Box)(({ theme }) => ({\r\n  border: '1px solid #000',\r\n  textAlign: 'center',\r\n  height: '50px',\r\n  background: '#F6F6F6',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  cursor: 'pointer',\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  fontFamily: theme.typography.fontFamily,\r\n  '&:hover': {\r\n    background: '#fff' // Change to the desired hover background color\r\n  }\r\n}));","import React from \"react\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { WarningRounded } from \"@mui/icons-material\";\r\n\r\nconst SeverityLabel = ({ severity, showIcon = true }) => {\r\n  return (\r\n    <Chip\r\n      label={severity}\r\n      deleteIcon={\r\n        showIcon ? (\r\n          <WarningRounded\r\n            style={{\r\n              padding: 0,\r\n              color:\r\n                severity.toLowerCase().includes(\"high\") ||\r\n                severity.toLowerCase().includes(\"fatal\") ||\r\n                severity.toLowerCase().includes(\"error\")\r\n                  ? \"#b71c1c\"\r\n                  : severity.toLowerCase().includes(\"medium\") ||\r\n                    severity.toLowerCase().includes(\"warning\")\r\n                  ? \"#ff8f00\"\r\n                  : severity.toLowerCase().includes(\"low\") ||\r\n                    severity.toLowerCase().includes(\"success\") ||\r\n                    severity.toLowerCase().includes(\"info\")\r\n                  ? \"#388e3c\"\r\n                  : \"#000000\",\r\n              fontSize: \"16px\"\r\n            }}\r\n          />\r\n        ) : null\r\n      }\r\n      onDelete={showIcon ? () => {} : undefined}\r\n      sx={{\r\n        backgroundColor:\r\n          severity.toLowerCase().includes(\"high\") ||\r\n          severity.toLowerCase().includes(\"fatal\") ||\r\n          severity.toLowerCase().includes(\"error\")\r\n            ? \"#ffebee\"\r\n            : severity.toLowerCase().includes(\"medium\") ||\r\n              severity.toLowerCase().includes(\"warning\") \r\n            ? \"#fff8e1\"\r\n            : severity.toLowerCase().includes(\"low\") ||\r\n              severity.toLowerCase().includes(\"success\") ||\r\n              severity.toLowerCase().includes(\"info\")\r\n            ? \"#e8f5e9\"\r\n            : \"#f5f5f5\",\r\n\r\n        color:\r\n          severity.toLowerCase().includes(\"high\") ||\r\n          severity.toLowerCase().includes(\"fatal\") ||\r\n          severity.toLowerCase().includes(\"error\")\r\n            ? \"#b71c1c\"\r\n            : severity.toLowerCase().includes(\"medium\") ||\r\n              severity.toLowerCase().includes(\"warning\")\r\n            ? \"#ff8f00\"\r\n            : severity.toLowerCase().includes(\"low\") ||\r\n              severity.toLowerCase().includes(\"success\") ||\r\n              severity.toLowerCase().includes(\"info\")\r\n            ? \"#388e3c\"\r\n            : \"#000000\",\r\n\r\n        border: `1px solid ${\r\n          severity.toLowerCase().includes(\"high\") ||\r\n          severity.toLowerCase().includes(\"fatal\") ||\r\n          severity.toLowerCase().includes(\"error\")\r\n            ? \"#b71c1c\"\r\n            : severity.toLowerCase().includes(\"medium\") ||\r\n              severity.toLowerCase().includes(\"warning\")\r\n            ? \"#ff8f00\"\r\n            : severity.toLowerCase().includes(\"low\") ||\r\n              severity.toLowerCase().includes(\"success\") ||\r\n              severity.toLowerCase().includes(\"info\")\r\n            ? \"#388e3c\"\r\n            : \"#bdbdbd\"\r\n        }`,\r\n\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"16px\",\r\n        padding: \"1px 1px\",\r\n        minWidth: \"80px\",\r\n        height: \"24px\",\r\n        \"& .MuiChip-label\": {\r\n          padding: \"0px 4px\",\r\n          fontSize: \"14px\"\r\n        },\r\n        \"& .MuiChip-deleteIcon\": {\r\n          marginLeft: \"4px\",\r\n          fontSize: \"18px\"\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SeverityLabel;\r\n","import {\r\n  convertTimeFormat,\r\n  convertUTCtoIST,\r\n  formatDateColumn,\r\n  formatTime,\r\n  formatTimestamp,\r\n  getDateAndTime,\r\n  isPayloadColumn,\r\n  isPayloadColumnId,\r\n  secondsToMint,\r\n  secondsToMinutes\r\n} from \"src/utils/helper\";\r\nimport { StyledTableCell } from \"../StyledComponents/Table\";\r\nimport { Box, Button, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { EditIcon, RightTableIcon } from \"src/assets/svg/svg\";\r\nimport moment from \"moment\";\r\nimport CommandStatusChip from \"../CommandStatus\";\r\nimport { roleNames, tabsEnum } from \"src/utils/const\";\r\nimport { CustomSwitch } from \"../CustomSwitch\";\r\nimport { commandNameEnum } from \"src/utils/enums\";\r\nimport { hasPermission } from \"src/utils/permission\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  StatusBox,\r\n  StatusBoxOffline,\r\n  StatusBoxOnline\r\n} from \"src/assets/styledComponent/BoxStyled\";\r\nimport SeverityLabel from \"src/components/Labels/SeverityLabel\";\r\n\r\ninterface GetCellContentProps {\r\n  column?: any;\r\n  row?: any;\r\n  handleNavigation?: any;\r\n  routeType?: any;\r\n  checkBoxes?: any;\r\n  action?: any;\r\n  handleButtonClick?: any;\r\n  handleChange?: any;\r\n  cellContent?: any;\r\n}\r\nconst getCellContent = ({\r\n  column,\r\n  row,\r\n  handleNavigation,\r\n  routeType,\r\n  checkBoxes,\r\n  action,\r\n  handleButtonClick,\r\n  handleChange,\r\n  cellContent\r\n}: GetCellContentProps) => {\r\n  const theme = useTheme();\r\n\r\n  // const getCellValue = (row, columnId) => {\r\n  //   const commandDetail = row?.commandDetail;\r\n\r\n  //   switch (columnId) {\r\n  //     case ColumnEnum.SUCCESS_UNDER_15_MINS:\r\n  //       return commandDetail?.[0]?.successCount ?? null;\r\n  //     case ColumnEnum.SUCCESS_PERCENT_UNDER_15_MINS:\r\n  //       return commandDetail?.[0]?.successPercentage ?? null;\r\n  //     case ColumnEnum.SUCCESS_UNDER_6_HOURS:\r\n  //       return commandDetail?.[1]?.successCount ?? null;\r\n  //     case ColumnEnum.SUCCESS_PERCENT_UNDER_6_HOURS:\r\n  //       return commandDetail?.[1]?.successPercentage ?? null;\r\n  //     case ColumnEnum.SUCCESS_OVER_6_HOURS:\r\n  //       return commandDetail?.[2]?.successCount ?? null;\r\n  //     case ColumnEnum.SUCCESS_PERCENT_OVER_6_HOURS:\r\n  //       return commandDetail?.[2]?.successPercentage ?? null;\r\n  //     default:\r\n  //       return null;\r\n  //   }\r\n  // };\r\n\r\n  switch (column.id) {\r\n    /////////////////////////////////////////////////////For NMS Start//////////////////////////////////////////////////\r\n\r\n    // case 'nodeId':\r\n    //   return cellContent(column, row);\r\n\r\n    case \"id\":\r\n      return cellContent(column, row);\r\n\r\n    ///////////////////////////////////////////////////////For NMS END/////////////////////////////////////////////////////\r\n    case \"completedon\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <span>{formatTimestamp(row.completedOn)}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"meterNo\":\r\n      if (!location.pathname.includes(\"/historical\")) {\r\n        return action(column, row);\r\n      } else {\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            <span>{row.meterNo ??'-'}</span>\r\n          </StyledTableCell>\r\n        );\r\n      }\r\n    case \"time\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <span>{formatTimestamp(row.timestamp)}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"event\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <span>{row.title}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"severity\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <SeverityLabel severity={row.severity} />\r\n        </StyledTableCell>\r\n      );\r\n    case \"desc\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <span>{row.description}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"isActive\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span> {row.isActive ? \"Yes\" : \"No\"}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"isSuccessful\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {\" \"}\r\n            {row.isSuccessful === true\r\n              ? \"true\"\r\n              : row.isSuccessful === false\r\n              ? \"false\"\r\n              : row.isSuccessful === null\r\n              ? \"\"\r\n              : \"\"}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"completedOn\":\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            <span>{formatTimestamp(row.completedOn)}</span>\r\n          </StyledTableCell>\r\n        \r\n      );\r\n    case \"driftInSeconds\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{secondsToMint(row.driftInSeconds)}</span> <br />\r\n          <span className=\"f-12\">{`( ${formatTime(\r\n            row.driftInSeconds\r\n          )} )`}</span>\r\n        </StyledTableCell>\r\n      );\r\n    // case 'roleName':\r\n    //   return (\r\n    //     <StyledTableCell\r\n    //       key={column.id}\r\n    //       align={column.align}\r\n    //       style={{\r\n    //         width: column.width,\r\n    //         minWidth: column.width,\r\n    //         // color: getRowColor(row),\r\n    //         textAlign: 'center'\r\n    //       }}\r\n    //       sx={{\r\n    //         '&:hover': {\r\n    //           backgroundColor: isPayloadColumn(column.id)\r\n    //             ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n    //             : 'inherit'\r\n    //         }\r\n    //       }}\r\n    //     >\r\n    //       <span style={{textTransform: 'capitalize'}}>\r\n    //         {row.roleName === 'user'\r\n    //           ? 'User'\r\n    //           : row.roleName === 'superuser'\r\n    //           ? 'Super User'\r\n    //           : row.roleName === 'admin'\r\n    //           ? 'Admin'\r\n    //           : row.roleName === 'superadmin'\r\n    //           ? 'Super Admin'\r\n    //           : row.roleName}\r\n    //       </span>{' '}\r\n    //       <br />\r\n    //     </StyledTableCell>\r\n    //   );\r\n    case \"commandType\":\r\n      const matchedCommandName = Object.keys(commandNameEnum).find(\r\n        (key) => commandNameEnum[key] === row.commandType\r\n      );\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span className=\"f-12\">{matchedCommandName || row.commandType}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"lastTriedOn\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {\" \"}\r\n            {row.lastTriedOn === \"0001-01-01T00:00:00\"\r\n              ? \"\"\r\n              : moment(row.lastTriedOn).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"lastRecordReceivedOnIst\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {row?.lastRecordReceivedOnIst\r\n              ? moment(row.lastRecordReceivedOnIst).format(\r\n                  \"DD-MM-YYYY hh:mm:ss A\"\r\n                )\r\n              : \"\"}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"createdDateIst\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {moment(row.createdDateIst).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"lastAccess\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{moment(row.lastAccess).format(\"DD-MM-YYYY hh:mm:ss A\")}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"rtcDateTimeUtc\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {moment(row.rtcDateTimeUtc).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"firstCommunicationOn\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {moment(row.firstCommunicationOn)\r\n              .utc()\r\n              .format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n\r\n    // case 'lastCommunicatedOn': {\r\n    //   const formattedDate = location.pathname.includes('/historical-routings') || location.pathname.includes('/meter-detail')\r\n    //     ? moment(row.lastCommunicatedOn).format('DD-MM-YYYY hh:mm:ss A')\r\n    //     : moment(row.lastCommunicatedOn).utc().format('DD-MM-YYYY hh:mm:ss A');\r\n\r\n    //   return (\r\n    //     <StyledTableCell\r\n    //       key={column.id}\r\n    //       align={column.align}\r\n    //       style={{\r\n    //         width: column.width,\r\n    //         minWidth: column.width,\r\n    //         textAlign: 'center'\r\n    //       }}\r\n    //       sx={{\r\n    //         '&:hover': {\r\n    //           backgroundColor: isPayloadColumn(column.id)\r\n    //             ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n    //             : 'inherit'\r\n    //         }\r\n    //       }}\r\n    //     >\r\n    //       <span>{formattedDate}</span>\r\n    //     </StyledTableCell>\r\n    //   );\r\n    // }\r\n\r\n    case \"lastCommunicatedOn\":\r\n      if (location.pathname.includes(\"/historical-routings\")) {\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            sx={{\r\n              \"&:hover\": {\r\n                backgroundColor: isPayloadColumn(column.id)\r\n                  ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                  : \"inherit\"\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              {moment(row.lastCommunicatedOn).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n            </span>\r\n          </StyledTableCell>\r\n        );\r\n      } else if (\r\n        localStorage?.activeRouting === '\"All\"' &&\r\n        location.pathname.includes(\"/meter-detail\")\r\n      ) {\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            sx={{\r\n              \"&:hover\": {\r\n                backgroundColor: isPayloadColumn(column.id)\r\n                  ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                  : \"inherit\"\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              {moment(row.lastCommunicatedOn).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n            </span>\r\n          </StyledTableCell>\r\n        );\r\n      } else if (\r\n        localStorage?.activeRouting === '\"Latest IP\"' &&\r\n        location.pathname.includes(\"/meter-detail\")\r\n      ) {\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            sx={{\r\n              \"&:hover\": {\r\n                backgroundColor: isPayloadColumn(column.id)\r\n                  ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                  : \"inherit\"\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              {moment(row.lastCommunicatedOn)\r\n                .utc()\r\n                .format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n            </span>\r\n          </StyledTableCell>\r\n        );\r\n      } else {\r\n        return (\r\n          <StyledTableCell\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            sx={{\r\n              \"&:hover\": {\r\n                backgroundColor: isPayloadColumn(column.id)\r\n                  ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                  : \"inherit\"\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              {moment(row.lastCommunicatedOn)\r\n                .utc()\r\n                .format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n            </span>\r\n          </StyledTableCell>\r\n        );\r\n      }\r\n    case \"serverTime\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{moment(row.serverTime).format(\"DD-MM-YYYY hh:mm:ss A\")}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"rtcDateTime\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{moment(row.rtcDateTime).format(\"DD-MM-YYYY hh:mm:ss A\")}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"lastUpdateTime\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {moment(row.lastUpdateTime).utc().format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"createdAt\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{moment(row.createdAt).format(\"DD-MM-YYYY hh:mm:ss A\")}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"eventLogList\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100]\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          {row?.eventLogList.map((event, index) => (\r\n            <div key={index}>\r\n              {event}\r\n              {index < row.eventLogList.length - 1 ? \", \" : \"\"}\r\n            </div>\r\n          ))}\r\n        </StyledTableCell>\r\n      );\r\n    case \"createdDate\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>{moment(row.createdDate).format(\"DD-MM-YYYY hh:mm:ss A\")}</span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"rtcDateTimeIst\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span>\r\n            {moment(row.rtcDateTimeIst).format(\"DD-MM-YYYY hh:mm:ss A\")}\r\n          </span>\r\n        </StyledTableCell>\r\n      );\r\n    case \"status\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          // align=\"center\"\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width\r\n            // color: getRowColor(row),\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          {row.status === \"Online\" ? (\r\n            <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n              <Box pr={1}>\r\n                <StatusBoxOnline />\r\n              </Box>\r\n              <Typography>{row.status}</Typography>\r\n            </Box>\r\n          ) : (\r\n            <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n              <Box pr={1}>\r\n                <StatusBoxOffline />\r\n              </Box>\r\n              <Typography>{row.status}</Typography>\r\n            </Box>\r\n          )}\r\n        </StyledTableCell>\r\n      );\r\n    case \"mdmStatus\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <CommandStatusChip status={row.mdmStatus} />\r\n        </StyledTableCell>\r\n      );\r\n    case \"bulkId\":\r\n      return cellContent(column, row);\r\n    case \"gatewayId\":\r\n      if (routeType === tabsEnum.GATEWAYLOAD) {\r\n        return (\r\n          <StyledTableCell\r\n            className=\"cursor-pointer\"\r\n            key={column.id}\r\n            align={column.align}\r\n            onClick={() => handleNavigation(row)}\r\n            style={{\r\n              // ...bodyCellStyle,\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            sx={{\r\n              \"&:hover\": {\r\n                backgroundColor: isPayloadColumn(column.id)\r\n                  ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                  : \"inherit\"\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent={\"center\"}\r\n              pl={1}\r\n            >\r\n              <Box mr={5}>{row.gatewayId}</Box>\r\n              <RightTableIcon />\r\n            </Box>\r\n          </StyledTableCell>\r\n        );\r\n      } else {\r\n        return (\r\n          <StyledTableCell\r\n            // className=\"cursor-pointer\"\r\n            key={column.id}\r\n            align={column.align}\r\n            style={{\r\n              width: column.width,\r\n              minWidth: column.width,\r\n              // color: getRowColor(row),\r\n              textAlign: \"center\"\r\n            }}\r\n            // sx={{\r\n            //   '&:hover': {\r\n            //     backgroundColor: isPayloadColumn(column.id)\r\n            //       ? theme.colors.alpha.primary[100]\r\n            //       : 'inherit'\r\n            //   }\r\n            // }}\r\n          >\r\n            <span>{row.gatewayId}</span>\r\n          </StyledTableCell>\r\n        );\r\n      }\r\n    case \"veeManage\":\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Box display={\"flex\"} alignItems={\"center\"} justifyContent={\"center\"}>\r\n            <Box\r\n              className=\"cursor-pointer\"\r\n              mr={1}\r\n              onClick={(e) => handleButtonClick(row)}\r\n            >\r\n              <IconButton>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    // setIsDisabled(true);\r\n                    // setFormDisable(false);\r\n                  }}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: \"11px 10px !important\",\r\n                    minWidth: \"unset\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </Button>\r\n              </IconButton>\r\n            </Box>\r\n\r\n            <Box>\r\n              <CustomSwitch\r\n                onChange={(e) => handleChange(e, row)}\r\n                checked={row.isActive} // Pass checked prop here\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </StyledTableCell>\r\n      );\r\n    case \"accessManagement\":\r\n      return action(column, row);\r\n    // case 'checkbox':\r\n    //   return checkBoxes(column, row);\r\n    // case ColumnEnum.SUCCESS_UNDER_15_MINS:\r\n    // case ColumnEnum.SUCCESS_PERCENT_UNDER_15_MINS:\r\n    // case ColumnEnum.SUCCESS_UNDER_6_HOURS:\r\n    // case ColumnEnum.SUCCESS_PERCENT_UNDER_6_HOURS:\r\n    // case ColumnEnum.SUCCESS_OVER_6_HOURS:\r\n    // case ColumnEnum.SUCCESS_PERCENT_OVER_6_HOURS: {\r\n    //   const value = getCellValue(row, column?.id);\r\n    //   return (\r\n    //     <StyledTableCell\r\n    //       key={column.id}\r\n    //       align={column.align}\r\n    //       style={{\r\n    //         width: column.width,\r\n    //         minWidth: column.width,\r\n    //         textAlign: 'center'\r\n    //       }}\r\n    //     >\r\n    //       <span>{value !== null ? value : null}</span>\r\n    //     </StyledTableCell>\r\n    //   );\r\n    // }\r\n    case \"yearMonthDayIST\": {\r\n      return cellContent(column, row);\r\n    }\r\n    default:\r\n      return (\r\n        <StyledTableCell\r\n          key={column.id}\r\n          align={column.align}\r\n          style={{\r\n            width: column.width,\r\n            minWidth: column.width,\r\n            // color: getRowColor(row),\r\n            textAlign: \"center\"\r\n          }}\r\n          sx={{\r\n            \"&:hover\": {\r\n              backgroundColor: isPayloadColumn(column.id)\r\n                ? theme.colors.alpha.primary[100] // Change this to your desired hover color\r\n                : \"inherit\"\r\n            }\r\n          }}\r\n        >\r\n          <span> {formatDateColumn(column.id, row[column.id])}</span>\r\n        </StyledTableCell>\r\n      );\r\n  }\r\n};\r\n\r\nexport default getCellContent;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  Pagination,\r\n  PaginationItem,\r\n  styled,\r\n  Switch,\r\n  TableCell,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  useTheme\r\n} from \"@mui/material\";\r\nimport {\r\n  StyledPagination,\r\n  StyledTableCell,\r\n  StyledTableRow\r\n} from \"../StyledComponents/Table\";\r\nimport {\r\n  DeleteIcon,\r\n  EditIcon,\r\n  NavigateBeforeDisableIcon,\r\n  NavigateBeforeIcon,\r\n  NavigateNextDisableIcon,\r\n  NavigateNextIcon,\r\n  NotFound,\r\n  PencilIcon,\r\n  RightTableIcon\r\n} from \"src/assets/svg/svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\nimport TableHeaderCell from \"./TableHeaderCell\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { CustomSwitch } from \"../CustomSwitch\";\r\nimport { tabsEnum } from \"src/utils/const\";\r\nimport CommandStatusChip from \"../CommandStatus\";\r\nimport moment from \"moment\";\r\nimport getCellContent from \"./GetCellContent\";\r\nimport { setLocalStorage } from \"src/utils/helper\";\r\n\r\nconst CustomPreviousIcon = (props) => (\r\n  <NavigateBeforeIcon {...props} style={{ fontSize: \"20px\" }} />\r\n);\r\n\r\nconst CustomNextIcon = (props) => (\r\n  <NavigateNextIcon {...props} style={{ fontSize: \"20px\" }} />\r\n);\r\n\r\nconst CommonTable: React.FC<CommonTableInterface> = ({\r\n  columns,\r\n  rows,\r\n  handleChangeRowsPerPage,\r\n  rowsPerPage,\r\n  totalRecords,\r\n  paginationState,\r\n  currentPaginationState,\r\n  currentPage,\r\n  pageNumber,\r\n  nextPageHandler,\r\n  routeType,\r\n  previousPageHandler,\r\n  isStatePagination,\r\n  checkBoxes,\r\n  action,\r\n  loading,\r\n  cellContent,\r\n  handleGotoPageChange,\r\n  handleKeyPress,\r\n  filtersData,\r\n  handleChangePage,\r\n  totalPages,\r\n  noPagination,\r\n  isSelectionEnabled,\r\n  selectedRows,\r\n  handleRowSelection,\r\n  handleSelectAll\r\n}) => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { addToast } = useToasts();\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(columns[0]?.id);\r\n  const [displayRows, setDisplayRows] = useState(rows); // State to hold rows to be displayed\r\n\r\n  useEffect(() => {\r\n    setDisplayRows(rows); // Update displayRows when rows prop changes\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    // const isAsc = orderBy === property && order === 'asc';\r\n    // const newOrder = isAsc ? 'desc' : 'asc';\r\n    // setOrder(newOrder);\r\n    // setOrderBy(property);\r\n    // const sortedRows = [...displayRows].sort((a, b) => {\r\n    //   if (a[property] < b[property]) return newOrder === 'asc' ? -1 : 1;\r\n    //   if (a[property] > b[property]) return newOrder === 'asc' ? 1 : -1;\r\n    //   return 0;\r\n    // });\r\n    // setDisplayRows(sortedRows);\r\n  };\r\n  // const [checked, setChecked] = useState(false);\r\n\r\n  // const handleChange = (event, item) => {\r\n  //   let apiData = {\r\n  //     meterCategory: item?.meterCategory,\r\n  //     validationName: item?.validationName,\r\n  //     profileType: item?.profileType,\r\n  //     validationId: item?.validationId,\r\n  //     validationExpression: item?.validationExpression,\r\n  //     sequenceId: item?.sequenceId,\r\n  //     isActive: item?.isActive === true ? false : true\r\n  //   };\r\n  //   let obj = {\r\n  //     validationRules: [apiData]\r\n  //   };\r\n  //   dispatch(addUpdateVeeExpression(obj))\r\n  //     .then((res) => {\r\n  //       addToast(`Expression status updated successfully`, {\r\n  //         appearance: 'success'\r\n  //       });\r\n  //       dispatch(\r\n  //         getAllVEEExpressionList({\r\n  //           MeterCategory: 'D1',\r\n  //           ProfileType: 'INSTANTPROFILE',\r\n  //           PageSize: 30,\r\n  //           PaginationState: null,\r\n  //           CurrentPaginationState: null,\r\n  //           RequiredTotalCount: false\r\n  //         })\r\n  //       );\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log('err', err);\r\n  //     });\r\n  // };\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  const paginatedRows = displayRows?.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const getRowColor = (row) => {\r\n    // if (row.isValid === false) return '#ff0000';\r\n    // if (row.isActive === false) return theme.palette.text.disabled;\r\n    // return 'inherit';\r\n  };\r\n\r\n  const handleNavigation = (row) => {\r\n    if (location.pathname === `/nodes`) {\r\n      navigate(`/node/${row?.nodeId}`);\r\n    }\r\n    if (location.pathname === `/gateways`) {\r\n      navigate(`/gateway/${row?.id}`);\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = (data) => {\r\n    let obj = {\r\n      MeterCategory: data?.meterCategory,\r\n      ProfileType: data?.profileType,\r\n      RequiredTotalCount: false,\r\n      PageSize: 1,\r\n      ValidationId: data?.validationId\r\n    };\r\n    setLocalStorage(\"veeObject\", obj);\r\n    navigate(\"/edit-vee-expression\");\r\n  };\r\n\r\n  const isTotalCount = (current, selectPage, total) => {\r\n    let findTotal = current * selectPage;\r\n    if (findTotal === total) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        sx={{\r\n          borderRadius: \"0px !important\",\r\n          boxShadow: \"none\",\r\n          border: \"1px solid #000\"\r\n        }}\r\n      >\r\n        <TableContainer\r\n          sx={{\r\n            \"& .MuiTableHead-root\": {\r\n              position: \"sticky\",\r\n              top: 0,\r\n              zIndex: 2,\r\n              backgroundColor: \"#DBEEFF\",\r\n              borderBottom: \"1px solid #ddd !important\"\r\n            },\r\n            \"& .MuiTableHead-root .MuiTableCell-root\": {\r\n              backgroundColor: \"#DBEEFF\"\r\n            },\r\n            \"& table\": {\r\n              borderCollapse: \"separate\",\r\n              borderSpacing: \"0px\"\r\n            }\r\n          }}\r\n          className=\"custom-scrollbar\"\r\n        >\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {isSelectionEnabled && (\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      sx={{\r\n                        color: selectedRows?.size > 0 ? \"#1773BE\" : \"#000000\",\r\n                        \"&.Mui-checked\": { color: \"#1773BE\" }\r\n                      }}\r\n                      checked={\r\n                        (selectedRows?.size || 0) === (rows?.length || 0) &&\r\n                        rows?.length > 0\r\n                      }\r\n                      onChange={() => handleSelectAll(rows)}\r\n                    />\r\n                  </TableCell>\r\n                )}\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{\r\n                      top: 0,\r\n                      minWidth: column.minWidth,\r\n                      borderBottom: \"1px solid grey\",\r\n                      textAlign: \"center\",\r\n                      color: \"black\",\r\n                      textTransform: \"capitalize\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"500\"\r\n                    }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n\r\n          {/* Scrollable wrapper only around body */}\r\n          <Box\r\n            sx={{\r\n              maxHeight: 525,\r\n              overflowY: \"auto\"\r\n            }}\r\n            className=\"custom-scrollbar\"\r\n          >\r\n            <Table aria-label=\"body table\">\r\n              <TableBody>\r\n                {/* Your logic remains same here */}\r\n                <StyledTableRow>\r\n                  <StyledTableCell\r\n                    sx={{ height: \"0px !important\" }}\r\n                    colSpan={columns.length}\r\n                    style={{\r\n                      padding: \"0px\",\r\n                      backgroundColor: \"#fff\",\r\n                      border: \"none\"\r\n                    }}\r\n                  />\r\n                </StyledTableRow>\r\n\r\n                {loading ? (\r\n                  <StyledTableRow>\r\n                    <StyledTableCell\r\n                      colSpan={columns.length}\r\n                      align=\"center\"\r\n                      style={{\r\n                        padding: \"20px\",\r\n                        fontSize: \"16px\"\r\n                      }}\r\n                    >\r\n                      <Box mt={4} mb={4}>\r\n                        <CircularProgress />\r\n                      </Box>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ) : rows.length === 0 ? (\r\n                  <StyledTableRow>\r\n                    <StyledTableCell colSpan={columns.length} align=\"center\">\r\n                      <Box mt={4} mb={4}>\r\n                        <NotFound />\r\n                        <Typography className=\"f-20\" mt={1}>\r\n                          No Records Found\r\n                        </Typography>\r\n                      </Box>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ) : (\r\n                  paginatedRows?.map((row, rowIndex) => (\r\n                    <StyledTableRow\r\n                      key={rowIndex}\r\n                      onClick={(event) => {\r\n                        handleNavigation(row);\r\n                      }}\r\n                      sx={{\r\n                        transition: \"background-color 0.2s ease\",\r\n                        \"&:hover\": {\r\n                          backgroundColor: \"#f5f5f5\", // subtle grey on hover\r\n                          cursor: \"pointer\"\r\n                        }\r\n                      }}\r\n                    >\r\n                      {isSelectionEnabled && (\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            sx={{\r\n                              color: selectedRows?.has(row.id)\r\n                                ? \"#1773BE\"\r\n                                : \"#000000\", // Default color\r\n                              \"&.Mui-checked\": {\r\n                                color: selectedRows?.has(row.id)\r\n                                  ? \"#1773BE\"\r\n                                  : \"#000000\" // Adjust checked color\r\n                              }\r\n                            }}\r\n                            checked={!!selectedRows?.has(row.id)} // Ensure `selectedRows` is defined\r\n                            onChange={() => handleRowSelection(row.id)} // Toggle selection using `id`\r\n                          />\r\n                        </TableCell>\r\n                      )}\r\n                      {columns.map((column) =>\r\n                        getCellContent({\r\n                          column,\r\n                          row,\r\n                          handleNavigation,\r\n                          routeType,\r\n                          checkBoxes,\r\n                          action,\r\n                          handleButtonClick,\r\n                          cellContent\r\n                        })\r\n                      )}\r\n                    </StyledTableRow>\r\n                  ))\r\n        \r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </TableContainer>\r\n      </Paper>\r\n      {rows?.length > 0 && (\r\n        <Grid\r\n          container\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\"\r\n          }}\r\n        >\r\n          <Box sx={{ my: 2 }}>\r\n            <StyledPagination\r\n              count={totalPages}\r\n              page={currentPage}\r\n              onChange={(e, value) => handleChangePage(e, value)}\r\n              siblingCount={1}\r\n              boundaryCount={1}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Grid\r\n              item\r\n              sm={12}\r\n              xs={12}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: {\r\n                  sm: \"flex-end\",\r\n                  xs: \"center\"\r\n                }\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                <Typography className=\"f-16\">Go to page</Typography>\r\n                <Box mx={1}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={pageNumber}\r\n                    onChange={handleGotoPageChange}\r\n                    onKeyDown={handleKeyPress}\r\n                    sx={{\r\n                      width: 60,\r\n                      \"& .MuiOutlinedInput-root\": {\r\n                        \"& fieldset\": {\r\n                          borderRadius: \"0px\" // Adjust the border radius\r\n                        }\r\n                      },\r\n                      \"& input\": {\r\n                        textAlign: \"center\", // Center align the text\r\n                        padding: \"6px !important\",\r\n                        fontSize: \"16px !important\"\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n                {totalPages && (\r\n                  <Typography className=\"f-16\">{`of ${totalPages}`}</Typography>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n\r\n      {/* <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n      {rows.length > 0 && !noPagination && (\r\n        <Grid\r\n          container\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            mt: 1\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={6}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: {\r\n                sm: 'flex-start',\r\n                xs: 'center'\r\n              }\r\n            }}\r\n          >\r\n             \r\n            <Box marginRight={1}>\r\n              {isStatePagination ? (\r\n                currentPaginationState == null ? (\r\n                  <NavigateBeforeDisableIcon />\r\n                ) : (\r\n                  <Box onClick={previousPageHandler}>\r\n                    <NavigateBeforeIcon />\r\n                  </Box>\r\n                )\r\n              ) : currentPage <= 1 ? (\r\n                <NavigateBeforeDisableIcon />\r\n              ) : (\r\n                <Box onClick={previousPageHandler}>\r\n                  <NavigateBeforeIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n            <Box>\r\n              {rows.length < rowsPerPage || isTotalCount(currentPage, rowsPerPage , totalRecords)  ? (\r\n                <NavigateNextDisableIcon />\r\n              ) : (\r\n                <Box\r\n                  onClick={\r\n                    !(rows.length < rowsPerPage) ? nextPageHandler : null\r\n                  }\r\n                >\r\n                  <NavigateNextIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={6}\r\n            xs={12}\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: {\r\n                sm: 'flex-end',\r\n                xs: 'center'\r\n              }\r\n            }}\r\n          >\r\n            <Box>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 30, 50]}\r\n                component=\"div\"\r\n                count={totalRecords ? totalRecords : 0}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                labelRowsPerPage=\"Rows per page:\"\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}  */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CustomBackdrop from 'src/components/CustomBackdrop/CustomBackdrop';\r\nimport { CustomPopUpModal } from 'src/models/customModal';\r\nimport Header from './Header';\r\nimport CommonTable from 'src/components/Table/CommonTable';\r\nimport { StyledTableCell } from 'src/components/StyledComponents/Table';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  IconButton,\r\n  Switch,\r\n  Tooltip,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Delete, Visibility } from '@mui/icons-material';\r\nimport { CustomSwitch } from 'src/components/CustomSwitch';\r\nimport { EditIcon } from 'src/assets/svg/svg';\r\nimport { clearPaginationHistory } from 'src/utils/helper';\r\nimport { deleteRole, getRoles } from 'src/api/AccessManagement';\r\nimport { findRoles, hasPermission } from 'src/utils/permission';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'roleName',\r\n    label: 'Role',\r\n    align: 'left',\r\n    width: 120\r\n  },\r\n\r\n  {\r\n    id: 'description',\r\n    label: 'Descriptions',\r\n    align: 'left',\r\n    width: 400\r\n  },\r\n  {\r\n    id: 'accessManagement',\r\n    label: 'Action',\r\n    align: 'center',\r\n    width: 100\r\n  }\r\n];\r\n\r\nconst RoleManagement = () => {\r\n  const { roles } = useSelector((state: any) => state.accessManagement);\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  const theme = useTheme();\r\n  const defaultPayload = {\r\n    PageNumber: 1,\r\n    PageSize: 30,\r\n    Role: null,\r\n    NameOrEmail: null\r\n  };\r\n\r\n  const [filterData, setFilterData] = useState(defaultPayload);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectRow, setSelectRow] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [isBulk, setIsBulk] = useState(false);\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n\r\n  const [activeView, setActiveView] = useState(false);\r\n  const [activeEdit, setActiveEdit] = useState(false);\r\n  const [selectedEditData, setSelectedEditData] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n\r\n  const fetchList = (payload) => {\r\n    setLoading(true);\r\n    dispatch(getRoles(payload))\r\n      .then((res) => {\r\n        setLoading(false);\r\n        // updateLocalStorage(currentPage);\r\n        // setFiltersData(payload);\r\n      })\r\n      .catch((err) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchList(filterData);\r\n    // dispatch(getUserList(filterData));\r\n  }, []);\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilterData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  const toggleDrawer = () => {\r\n    setShow(!show);\r\n  };\r\n  const handleApply = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await dispatch(\r\n        deleteRole({\r\n          roleName: selectRow?.roleName,\r\n          roleId: selectRow?.roleId\r\n        })\r\n      );\r\n      if (res) {\r\n        setLoading(false);\r\n        setSelectRow(null);\r\n        setSelectedEmails([]);\r\n        setShow(false);\r\n        setIsBulk(false);\r\n        addToast(res.message, {\r\n          appearance: 'success'\r\n        });\r\n        fetchList(filterData);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShow(false);\r\n      setIsBulk(false);\r\n      setSelectRow(null);\r\n      setSelectedEmails([]);\r\n    }\r\n  };\r\n\r\n  const applyFilterHandler = () => {\r\n    fetchList({ ...filterData });\r\n  };\r\n  const clearFilterHandler = () => {\r\n    setFilterData(defaultPayload);\r\n    fetchList({ ...defaultPayload });\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    if (roles?.PageNumber !== null) {\r\n      const nextPage = currentPage + 1;\r\n      setCurrentPage(nextPage);\r\n      fetchList({ ...filterData, PageNumber: nextPage });\r\n    }\r\n  };\r\n\r\n  const previousPageHandler = () => {\r\n    const prevPage = currentPage - 1;\r\n    if (prevPage >= 1) {\r\n      setCurrentPage(prevPage);\r\n      fetchList({ ...filterData, PageNumber: prevPage });\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setCurrentPage(1);\r\n    setFilterData({\r\n      ...filterData,\r\n      PageSize: parseInt(event.target.value)\r\n    });\r\n    clearPaginationHistory();\r\n  };\r\n\r\n  const filterByRole = (type, row) => {\r\n    const permissionMap = {\r\n      view: permission?.Role_Management_View,\r\n      edit: permission?.Role_Management_Edit,\r\n      delete: permission?.Role_Management_Delete_Role\r\n    };\r\n\r\n    const requiredPermission = permissionMap[type];\r\n    let rolesToHide = findRoles(moduleListByRole.roleName);\r\n\r\n    const hasRequiredPermission = requiredPermission\r\n      ? !hasPermission(moduleListByRole, requiredPermission)\r\n      : false;\r\n\r\n    const isRoleHidden = rolesToHide.includes(row.roleName);\r\n\r\n    return hasRequiredPermission || isRoleHidden;\r\n\r\n    // return requiredPermission\r\n    //   ? !hasPermission(moduleListByRole, requiredPermission)\r\n    //   : true;\r\n  };\r\n\r\n  // Edit action Start\r\n  const ActionContent = ({ column, row }) => {\r\n    const deleteHandler = (item) => {\r\n      setShow(true);\r\n      setSelectRow(item);\r\n    };\r\n\r\n    // const filterByRole = (row) => {\r\n    //   let rolesToHide = findRoles(moduleListByRole.roleName);\r\n\r\n    //   if (rolesToHide.includes(row.roleName)) {\r\n    //     return true;\r\n    //   }\r\n    //   if (moduleListByRole.roleName === 'user' || rolesToHide.length === 0) {\r\n    //     return true;\r\n    //   }\r\n    //    return false;\r\n    // };\r\n    return (\r\n      <StyledTableCell\r\n        key={column.id}\r\n        align={column.align}\r\n        style={{\r\n          width: column.width,\r\n          minWidth: column.width,\r\n          // color: getRowColor(row),\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        <Box display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n          <Box>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('view', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('view', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveEdit(false);\r\n                    setActiveView(true);\r\n                    setSelectedEditData(row);\r\n                  }}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Visibility />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('edit', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('edit', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveEdit(true);\r\n                    setActiveView(false);\r\n                    setSelectedEditData(row);\r\n                  }}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n\r\n          <Box>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('delete', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('delete', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteHandler(row)}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n      </StyledTableCell>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <CustomBackdrop open={loading} />}\r\n      <CustomPopUpModal\r\n        open={show}\r\n        setOpen={toggleDrawer}\r\n        handleClose={toggleDrawer}\r\n        title=\"Delete\"\r\n        buttonText=\"Ok\"\r\n        isApply\r\n        handleApply={handleApply}\r\n        children={'Are you sure want to delete?'}\r\n      />\r\n      {/* \r\n      <CustomDrawer\r\n        open={drawerOpen}\r\n        toggleDrawer={toggleDrawer}\r\n        title={isRole ? 'Add Role' : 'Add User'}\r\n        buttonText=\"Apply\"\r\n        isApply\r\n        onApply={isRole ? handleRoleRefApply : handleApply}\r\n        // isCancel\r\n        // onCancel={handleCancel}\r\n        children={\r\n          isRole ? <RoleContent payload={defaultPayload} /> : <Content />\r\n        }\r\n      /> */}\r\n      <Box>\r\n        <Box mt={2}>\r\n          <Header\r\n            fetchList={() => fetchList(defaultPayload)}\r\n            filterData={filterData}\r\n            onChangeHandler={onChangeHandler}\r\n            applyFilterHandler={applyFilterHandler}\r\n            clearFilterHandler={clearFilterHandler}\r\n            activeViewState={activeView}\r\n            setActiveViewState={setActiveView}\r\n            activeEdit={activeEdit}\r\n            selectedEditData={selectedEditData}\r\n            setActiveEdit={setActiveEdit}\r\n            setSelectedEditData={setSelectedEditData}\r\n            isRole\r\n          />\r\n        </Box>\r\n        <Box mt={2}>\r\n          <CommonTable\r\n            columns={columns}\r\n            currentPage={currentPage}\r\n            rows={roles?.roleList || []}\r\n            rowsPerPage={rowsPerPage}\r\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n            nextPageHandler={nextPageHandler}\r\n            previousPageHandler={previousPageHandler}\r\n            totalRecords={roles?.totalRecords}\r\n            action={(column, row) => (\r\n              <ActionContent column={column} row={row} />\r\n            )}\r\n            noPagination\r\n            loading={loading}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleManagement;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  IconButton,\r\n  Switch,\r\n  Tooltip,\r\n  useTheme\r\n} from '@mui/material';\r\nimport CommonTable from '../../../../components/Table/CommonTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  deleteUserList,\r\n  getUserList,\r\n  setUserStatus\r\n} from '../../../../api/AccessManagement';\r\nimport { clearPaginationHistory, updateLocalStorage } from 'src/utils/helper';\r\nimport { StyledTableCell } from '../../../../components/StyledComponents/Table';\r\nimport { DeleteIcon, EditIcon, EyeIcon } from 'src/assets/svg/svg';\r\nimport { CustomSwitch } from '../../../../components/CustomSwitch';\r\nimport NotFoundData from '../../../../components/NotFound';\r\nimport CustomBackdrop from 'src/components/CustomBackdrop/CustomBackdrop';\r\nimport { CustomPopUpModal } from 'src/models/customModal';\r\nimport { Delete, Visibility } from '@mui/icons-material';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport Header from './Header';\r\nimport { findRoles, hasPermission } from 'src/utils/permission';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'checkbox',\r\n    label: '',\r\n    align: 'left',\r\n    width: 100\r\n  },\r\n  {\r\n    id: 'name',\r\n    label: 'User Name',\r\n    align: 'left',\r\n    width: 200\r\n  },\r\n  {\r\n    id: 'roleName',\r\n    label: 'Role',\r\n    align: 'left',\r\n    width: 120\r\n  },\r\n  {\r\n    id: 'userName',\r\n    label: 'Email',\r\n    align: 'left',\r\n    width: 150\r\n  },\r\n  {\r\n    id: 'lastAccess',\r\n    label: 'Last Access',\r\n    align: 'left',\r\n    width: 220\r\n  },\r\n  {\r\n    id: 'accessManagement',\r\n    label: 'Action',\r\n    align: 'center',\r\n    width: 300\r\n  }\r\n];\r\n\r\nconst UserManagement = () => {\r\n  const theme = useTheme();\r\n  const defaultPayload = {\r\n    PageNumber: 1,\r\n    PageSize: 30,\r\n    Role: null,\r\n    NameOrEmail: null\r\n  };\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  const { userList } = useSelector((state: any) => state.accessManagement);\r\n  const [filterData, setFilterData] = useState(defaultPayload);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectRow, setSelectRow] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [isBulk, setIsBulk] = useState(false);\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n  const [activeView, setActiveView] = useState(false);\r\n  const [activeEdit, setActiveEdit] = useState(false);\r\n  const [selectedEditData, setSelectedEditData] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n\r\n  const fetchList = (payload) => {\r\n    setLoading(true);\r\n    dispatch(getUserList(payload))\r\n      .then((res) => {\r\n        setLoading(false);\r\n        updateLocalStorage(currentPage);\r\n        // setFiltersData(payload);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchList(filterData);\r\n    // dispatch(getUserList(filterData));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedEmails.length > 0) {\r\n      setIsBulk(true);\r\n      return;\r\n    }\r\n    setIsBulk(false);\r\n  }, [selectedEmails]);\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value));\r\n    setCurrentPage(1);\r\n    setFilterData({\r\n      ...filterData,\r\n      PageSize: parseInt(event.target.value)\r\n    });\r\n    fetchList({ ...filterData, PageSize: parseInt(event.target.value) });\r\n    clearPaginationHistory();\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    if (userList?.PageNumber !== null) {\r\n      const nextPage = currentPage + 1;\r\n      setCurrentPage(nextPage);\r\n      fetchList({ ...filterData, PageNumber: nextPage });\r\n    }\r\n  };\r\n\r\n  const previousPageHandler = () => {\r\n    const prevPage = currentPage - 1;\r\n    if (prevPage >= 1) {\r\n      setCurrentPage(prevPage);\r\n      fetchList({ ...filterData, PageNumber: prevPage });\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (row, newStatus) => {\r\n    setLoading(true);\r\n    dispatch(setUserStatus({ userName: row.userName, isActivate: newStatus }))\r\n      .then((res) => {\r\n        setLoading(false);\r\n        // fetchList(filterData);\r\n      })\r\n      .catch((err) => {\r\n        console.log('err', err);\r\n        setLoading(false);\r\n      });\r\n    // updateStatusInBackend(rowId, newStatus);\r\n  };\r\n\r\n  // const filterByRole = (type) => {\r\n  //   // let rolesToHide = findRoles(moduleListByRole.roleName);\r\n\r\n  //   // if (rolesToHide.includes(row.roleName)) {\r\n  //   //   return true;\r\n  //   // }\r\n  //   // if (moduleListByRole.roleName === 'user' || rolesToHide.length === 0) {\r\n  //   //   return true;\r\n  //   // }\r\n\r\n  //   const hasRoleManagementPermission =\r\n  //     type === 'view'\r\n  //       ? hasPermission(moduleListByRole, permission?.User_Management_View)\r\n  //       : type === 'edit'\r\n  //       ? hasPermission(\r\n  //           moduleListByRole,\r\n  //           permission?.User_Management_Edit_User_Details\r\n  //         )\r\n  //       : type === 'delete'\r\n  //       ? hasPermission(\r\n  //           moduleListByRole,\r\n  //           permission?.User_Management_Delete_User\r\n  //         )\r\n  //       : hasPermission(\r\n  //           moduleListByRole,\r\n  //           permission?.User_Management_Bulk_Delete\r\n  //         );\r\n\r\n  //   return hasRoleManagementPermission ? false : true;\r\n  // };\r\n\r\n  // const filterByRole = (type) => {\r\n  //   const permissionMap = {\r\n  //     view: permission?.User_Management_View,\r\n  //     edit: permission?.User_Management_Edit_User_Details,\r\n  //     delete: permission?.User_Management_Delete_User,\r\n  //     bulk: permission?.User_Management_Bulk_Delete\r\n  //   };\r\n\r\n  //   const requiredPermission = permissionMap[type];\r\n\r\n  //   return requiredPermission ? !hasPermission(moduleListByRole, requiredPermission) : true;\r\n  // };\r\n\r\n  const filterByRole = (type, row) => {\r\n    const permissionMap = {\r\n      view: permission?.User_Management_View,\r\n      edit: permission?.User_Management_Edit_User_Details,\r\n      delete: permission?.User_Management_Delete_User,\r\n      bulk: permission?.User_Management_Bulk_Delete\r\n    };\r\n\r\n    const requiredPermission = permissionMap[type];\r\n    let rolesToHide = findRoles(moduleListByRole.roleName);\r\n\r\n    const hasRequiredPermission = requiredPermission\r\n      ? !hasPermission(moduleListByRole, requiredPermission)\r\n      : false;\r\n\r\n    const isRoleHidden = rolesToHide.includes(row.roleName);\r\n\r\n    return hasRequiredPermission || isRoleHidden;\r\n\r\n    // return requiredPermission\r\n    //   ? !hasPermission(moduleListByRole, requiredPermission)\r\n    //   : true;\r\n  };\r\n\r\n  // Edit action Start\r\n  const ActionContent = ({ column, row, onStatusChange }) => {\r\n    const [isActive, setIsActive] = useState(row.isActive);\r\n\r\n    const handleChange = () => {\r\n      const newStatus = !isActive;\r\n      setIsActive(newStatus);\r\n      onStatusChange(row, newStatus); // Assuming each row has an id\r\n    };\r\n\r\n    const deleteHandler = (item) => {\r\n      setShow(true);\r\n      setSelectRow(item.email);\r\n    };\r\n\r\n    return (\r\n      <StyledTableCell\r\n        key={column.id}\r\n        align={column.align}\r\n        style={{\r\n          width: column.width,\r\n          minWidth: column.width,\r\n          // color: getRowColor(row),\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        <Box display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n          <Box>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('view', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('view', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveEdit(false);\r\n                    setActiveView(true);\r\n                    setSelectedEditData(row);\r\n                  }}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Visibility />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('edit', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('edit', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setActiveEdit(true);\r\n                    setActiveView(false);\r\n                    setSelectedEditData(row);\r\n                  }}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n\r\n          <Box>\r\n            <Tooltip title=\"Is Active\" placement=\"top\">\r\n              <CustomSwitch\r\n                disabled={filterByRole('edit', row)}\r\n                onChange={handleChange}\r\n                checked={row.isActive} // Pass checked prop here\r\n              />\r\n            </Tooltip>\r\n          </Box>\r\n\r\n          <Box>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton\r\n                sx={{\r\n                  cursor: filterByRole('delete', row)\r\n                    ? 'not-allowed !important'\r\n                    : 'pointer !important'\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={filterByRole('delete', row)}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => deleteHandler(row)}\r\n                  sx={{\r\n                    borderRadius: 0,\r\n                    width: 38,\r\n                    height: 35,\r\n                    border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n                    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n                    padding: '11px 10px !important',\r\n                    minWidth: 'unset',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </Button>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n      </StyledTableCell>\r\n    );\r\n  };\r\n  // edit action end\r\n\r\n  const toggleDrawer = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const handleApply = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await dispatch(\r\n        deleteUserList({\r\n          userEmailList:\r\n            selectedEmails.length >= 1 ? selectedEmails : [selectRow]\r\n        })\r\n      );\r\n      if (res) {\r\n        setLoading(false);\r\n        setSelectRow('');\r\n        setSelectedEmails([]);\r\n        setShow(false);\r\n        setIsBulk(false);\r\n        addToast(res.message, {\r\n          appearance: 'success'\r\n        });\r\n        fetchList(filterData);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShow(false);\r\n      setIsBulk(false);\r\n      setSelectRow('');\r\n      setSelectedEmails([]);\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilterData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n    if (name === 'Role') {\r\n      fetchList({ ...filterData, Role: value });\r\n    }\r\n  };\r\n  const applyFilterHandler = () => {\r\n    fetchList({ ...filterData });\r\n  };\r\n  const clearFilterHandler = () => {\r\n    setFilterData(defaultPayload);\r\n    fetchList({ ...defaultPayload });\r\n  };\r\n  const handleCheckboxChange = (email) => {\r\n    setSelectedEmails((prevSelectedEmails) =>\r\n      prevSelectedEmails.includes(email)\r\n        ? prevSelectedEmails.filter((e) => e !== email)\r\n        : [...prevSelectedEmails, email]\r\n    );\r\n  };\r\n\r\n  const ActionCheckBoxes = ({ column, row }) => {\r\n    const isChecked = selectedEmails?.includes(row.email);\r\n\r\n    // const filterByRole = (row) => {\r\n    //   let rolesToHide = findRoles(moduleListByRole.roleName);\r\n\r\n    //   if (rolesToHide.includes(row.roleName)) {\r\n    //     return true;\r\n    //   }\r\n    //   if (moduleListByRole.roleName === 'user' || rolesToHide.length === 0) {\r\n    //     return true;\r\n    //   }\r\n    //   return false;\r\n    // };\r\n    return (\r\n      <StyledTableCell\r\n        key={column.id}\r\n        align={column.align}\r\n        style={{\r\n          width: column.width,\r\n          minWidth: column.width,\r\n          // color: getRowColor(row),\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            cursor: filterByRole('bulk', row)\r\n              ? 'not-allowed !important'\r\n              : 'pointer !important'\r\n          }}\r\n          display={'flex'}\r\n          alignItems={'center'}\r\n          justifyContent={'center'}\r\n        >\r\n          <Checkbox\r\n            disabled={filterByRole('bulk', row)}\r\n            checked={isChecked}\r\n            onChange={() => handleCheckboxChange(row.email)}\r\n          />\r\n        </Box>\r\n      </StyledTableCell>\r\n    );\r\n  };\r\n\r\n  const applyBulkHandler = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const clearBulkHandler = () => {\r\n    setSelectedEmails([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <CustomBackdrop open={loading} />}\r\n      <CustomPopUpModal\r\n        open={show}\r\n        setOpen={toggleDrawer}\r\n        handleClose={toggleDrawer}\r\n        title=\"Delete\"\r\n        buttonText=\"Ok\"\r\n        isApply\r\n        handleApply={handleApply}\r\n        children={'Are you sure want to delete?'}\r\n      />\r\n      <Box>\r\n        <Box mt={2}>\r\n          <Header\r\n            fetchList={() => fetchList(defaultPayload)}\r\n            isBulk={isBulk}\r\n            filterData={filterData}\r\n            onChangeHandler={onChangeHandler}\r\n            applyFilterHandler={applyFilterHandler}\r\n            clearFilterHandler={clearFilterHandler}\r\n            applyBulkHandler={applyBulkHandler}\r\n            activeViewState={activeView}\r\n            setActiveViewState={setActiveView}\r\n            activeEdit={activeEdit}\r\n            selectedEditData={selectedEditData}\r\n            setActiveEdit={setActiveEdit}\r\n            setSelectedEditData={setSelectedEditData}\r\n            clearBulkHandler={clearBulkHandler}\r\n          />\r\n        </Box>\r\n        <Box mt={2}>\r\n          <CommonTable\r\n            columns={columns}\r\n            currentPage={currentPage}\r\n            rows={userList?.userList || []}\r\n            rowsPerPage={rowsPerPage}\r\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n            nextPageHandler={nextPageHandler}\r\n            previousPageHandler={previousPageHandler}\r\n            totalRecords={userList?.totalRecords}\r\n            checkBoxes={(column, row) => (\r\n              <ActionCheckBoxes column={column} row={row} />\r\n            )}\r\n            loading={loading}\r\n            action={(column, row) => (\r\n              <ActionContent\r\n                column={column}\r\n                row={row}\r\n                onStatusChange={handleStatusChange}\r\n              />\r\n            )}\r\n          />\r\n          {/* {!(userList?.userList?.length > 0) && !loading && <NotFoundData />} */}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n","import styled from '@emotion/styled';\r\nimport { Box, Container, Grid, Tab, Tabs } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport CustomBackdrop from 'src/components/CustomBackdrop/CustomBackdrop';\r\nimport CustomTabPanel from '../../../components/CustomTabPanel';\r\nimport Footer from 'src/components/Footer';\r\nimport RoleManagement from './Component/RoleManagement';\r\nimport UserManagement from './Component/UserManagement';\r\nimport { hasPermission } from 'src/utils/permission';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst FullWidthTabs = styled(Tabs)(({ theme }) => ({\r\n  '& .MuiTabs-flexContainer': {\r\n    display: 'flex'\r\n  },\r\n  '& .MuiTabs-indicator': {\r\n    height: '2px',\r\n    bottom: 0\r\n  }\r\n}));\r\n\r\nconst CustomTab = styled(Tab)(({ theme }) => ({\r\n  flex: 1,\r\n  maxWidth: 'none',\r\n  // height: '45px',\r\n  // minHeight: '45px',\r\n  padding: 8,\r\n  textTransform: 'none',\r\n  // fontWeight: theme.typography.fontWeightRegular,\r\n  fontSize: '16px',\r\n  '&.seleted-tab': {\r\n    // fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  '&.tab-btn': {\r\n    fontSize: '16px !important',\r\n    fontWeight: '500 !important'\r\n  },\r\n  '& .MuiTab-wrapper': {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst index = () => {\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  // const [activeHeader, setActiveHeader] = useState(false);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const hasRoleManagementPermission = hasPermission(\r\n  //     moduleListByRole,\r\n  //     permission?.Access_Management_Role_Management\r\n  //   );\r\n\r\n  //   const hasUserManagementPermission = hasPermission(\r\n  //     moduleListByRole,\r\n  //     permission?.Access_Management_User_Management\r\n  //   );\r\n\r\n  //   if (hasRoleManagementPermission && hasUserManagementPermission) {\r\n  //     setActiveHeader(true);\r\n  //     setTabValue(0);\r\n  //   } else if (hasRoleManagementPermission) {\r\n  //     setActiveHeader(false);\r\n  //     setTabValue(1);\r\n  //   } else if (hasUserManagementPermission) {\r\n  //     setActiveHeader(false);\r\n  //     setTabValue(0);\r\n  //   }\r\n  // }, [moduleListByRole, permission]);\r\n  return (\r\n    <>\r\n      {loading && <CustomBackdrop open={loading} />}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Box marginTop={6} sx={{ width: '100%' }}>\r\n          {/* {activeHeader && ( */}\r\n            <Box>\r\n              <FullWidthTabs\r\n                value={tabValue}\r\n                onChange={handleTabChange}\r\n                aria-label=\"basic tabs example\"\r\n              >\r\n                <CustomTab\r\n                  className=\"seleted-tab tab-btn\"\r\n                  label=\"User Management\"\r\n                />\r\n                <CustomTab\r\n                  className=\"seleted-tab tab-btn\"\r\n                  label=\"Role Management\"\r\n                />\r\n              </FullWidthTabs>\r\n            </Box>\r\n          {/* )} */}\r\n          <CustomTabPanel value={tabValue} index={0}>\r\n            <UserManagement />\r\n          </CustomTabPanel>\r\n          <CustomTabPanel value={tabValue} index={1}>\r\n            <RoleManagement />\r\n          </CustomTabPanel>\r\n        </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import { MenuItem, Select, styled } from '@mui/material';\r\nimport {\r\n  BottomIcon,\r\n  FormControlDownIcon,\r\n  FormControlUpIcon,\r\n  NMSArrowDownIcon,\r\n  NMSArrowUpIcon,\r\n  NMSDownIcon,\r\n  RightIcon,\r\n  UpIcon\r\n} from 'src/assets/svg/svg';\r\n\r\nexport const ProjectSelectDropDown = styled(Select)(({ theme }) => ({\r\n  backgroundColor: 'transparent',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '28px',\r\n  '& .MuiSelect-select': {\r\n    // padding: '28px 20px 18px 20px !important',\r\n    fontSize: '16px', // Set the desired font size\r\n    fontWeight: '500', // Set the desired font weight\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    paddingLeft: '10px'\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\nexport const ProjectSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '35px',\r\n  '& .MuiSelect-select': {\r\n    padding: '28px 20px 18px 20px !important',\r\n    fontSize: '20px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '60px',\r\n  '& .MuiSelect-select': {\r\n    padding: '10px 14px',\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomSelectInput = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '42px',\r\n  '& .MuiSelect-select': {\r\n    padding: '10px 14px',\r\n    fontSize: '14px',\r\n    fontWeight: '500'\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  backgroundColor: theme.colors.alpha.trueWhite[100],\r\n  border: 'none', \r\n  borderBottom: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  borderLeft: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  borderRight: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  margin: '0px !important',\r\n  borderRadius: '0px',\r\n  fontSize: '14px !important',\r\n  fontWeight: '500',\r\n  color: `${theme.colors.alpha.black[100]} !important`,\r\n  height: '44px',\r\n\r\n  '&:first-child': {\r\n    borderTop: `1px solid ${theme.colors.alpha.black[100]}` \r\n  },\r\n  '&:hover': {\r\n    backgroundColor: `${theme.colors.alpha.grey[100]} !important`\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: `${theme.colors.alpha.nmsPrimary[100]} !important`\r\n  },\r\n    //   '&.Mui-selected:hover': {\r\n   //     backgroundColor: '#bae7ff'\r\n  //   }\r\n}));\r\n\r\nexport const ProjectMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  backgroundColor: theme.colors.alpha.primaryAlt[100],\r\n  border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n  borderRadius: '0px',\r\n  fontSize: '18px !important',\r\n  fontWeight: '500 !important',\r\n  color: theme.colors.alpha.black[100],\r\n  height: '48px',\r\n  paddingLeft: '22px',\r\n\r\n  '&:hover': {\r\n    backgroundColor: `${theme.colors.alpha.primary[100]} !important`\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: `${theme.colors.alpha.primary[100]} !important`\r\n  }\r\n  //   '&.Mui-selected:hover': {\r\n  //     backgroundColor: '#bae7ff'\r\n  //   }\r\n}));\r\n\r\n\r\nconst RotatingIcon = styled(NMSDownIcon, {\r\n  shouldForwardProp: (prop) => prop !== 'open'\r\n})(({ open }) => ({\r\n  transition: 'transform 0.3s ease',\r\n  transform: open ? 'rotate(180deg)' : 'rotate(0deg)',\r\n  pointerEvents: 'none',\r\n  // fontSize: '4px',\r\n  marginTop: 2\r\n}));\r\n\r\nexport const CustomSelectRotatingIcon = (props) => {\r\n  return <RotatingIcon {...props} />;\r\n};\r\n\r\n\r\nexport const CustomSelectIcon = ({ open, ...props }) => {\r\n  const Icon = open ? NMSArrowUpIcon : NMSArrowDownIcon;\r\n\r\n  const StyledIcon = styled(Icon)(({ theme }) => ({\r\n    // width: 18,\r\n    // height: 18,\r\n    marginTop: '2px',\r\n    transition: 'transform 0.3s ease',\r\n    transform: open ? 'rotate(180deg)' : 'rotate(0deg)', // rotation animation\r\n    pointerEvents: 'none'\r\n  }));\r\n\r\n  return <StyledIcon {...props} />;\r\n};\r\n\r\nexport const ProjectSelectIcon = ({ open, ...props }) =>\r\n  open ? (\r\n    <FormControlUpIcon\r\n      {...props}\r\n      style={{ marginTop: '9px', marginRight: '9px' }}\r\n    />\r\n  ) : (\r\n    <FormControlDownIcon\r\n      {...props}\r\n      style={{ marginTop: '9px', marginRight: '12px' }}\r\n    />\r\n  );\r\n// export const DropUpDown = ({ open, ...props }) =>\r\n//   open ? (\r\n//     <FormControlUpIcon\r\n//       {...props}\r\n//       style={{ marginTop: '9px', marginRight: '9px' }}\r\n//     />\r\n//   ) : (\r\n//     <FormControlUpIcon\r\n//       {...props}\r\n//       style={{ marginTop: '9px', marginRight: '12px' }}\r\n//     />\r\n//   );\r\n\r\nexport const CustomBasicSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  '& .MuiSelect-select': {\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\n// Common Select Input\r\nexport const CustomSelectInputBox = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  height: '36px',\r\n  '& .MuiSelect-select': {\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n","// import axios from 'axios';\r\n// import { useDispatch } from 'react-redux';\r\n// import {\r\n//   clearLocalStorage,\r\n//   getErrorMessage,\r\n//   getLocalStorage,\r\n//   setLocalStorage\r\n// } from 'src/utils/helper';\r\n// import { logOutAction } from './auth';\r\n// import { store } from 'src/store';\r\n// import { showToast } from 'src/customHooks/ToastEmitter';\r\n\r\n// export const API_URLS = {\r\n//   baseURL: process.env.REACT_APP_BASE_URL_MAIN,\r\n//   baseURLCmd: process.env.REACT_APP_BASE_URL_COMMANDS,\r\n//   baseURLNMS: process.env.REACT_APP_BASE_URL_MAIN_NMS\r\n// };\r\n\r\n// export const instance = (baseURL) => {\r\n//   return axios.create({\r\n//     baseURL\r\n//   });\r\n// };\r\n\r\n// export const api = instance(API_URLS.baseURL);\r\n// export const api1 = instance(API_URLS.baseURLCmd);\r\n// export const instance = instance(API_URLS.baseURLNMS);\r\n\r\n// let isRefreshing = false;\r\n// let refreshSubscribers = [];\r\n// const handleConfig = (config: any) => {\r\n//   const token = getLocalStorage('accessToken');\r\n//   if (token) {\r\n//     config.headers['Authorization'] = `Bearer ${token}`;\r\n//   }\r\n//   if (config.data instanceof FormData) {\r\n//     config.headers['Content-Type'] = 'multipart/form-data';\r\n//   } else {\r\n//     config.headers['Content-Type'] = 'application/json';\r\n//   }\r\n//   return config;\r\n// };\r\n\r\n// const logoutUser = () => {\r\n//   store.dispatch(logOutAction({ userName: getLocalStorage('userName') }));\r\n//   clearLocalStorage();\r\n//   window.location.replace('/login');\r\n// };\r\n\r\n// const setupInterceptors = (axiosInstance) => {\r\n//   axiosInstance.interceptors.request.use(\r\n//     (config) => handleConfig(config),\r\n//     (error) => Promise.reject(error)\r\n//   );\r\n\r\n//   axiosInstance.interceptors.response.use(\r\n//     (response) => {\r\n//       if (response?.data?.accessToken) {\r\n//         let projectList = [];\r\n//         if (response?.data?.project) {\r\n//           projectList = response?.data?.project.split(',');\r\n//         }\r\n\r\n//         setLocalStorage('accessToken', response.data.accessToken);\r\n//         setLocalStorage('isAuthenticated', response.data.isAuthenticated);\r\n//         projectList.length > 0 && setLocalStorage('project', projectList[0]);\r\n//         projectList.length > 0 &&\r\n//           setLocalStorage('projectList', response?.data?.project);\r\n//       }\r\n//       if (response?.data?.message === 'concurrent session') {\r\n//         let projectList = [];\r\n//         if (response?.data?.project) {\r\n//           projectList = response?.data?.project.split(',');\r\n//         }\r\n//         setLocalStorage('isAuthenticated', response.data.isAuthenticated);\r\n//         projectList.length > 0 && setLocalStorage('project', projectList[0]);\r\n//         projectList.length > 0 &&\r\n//           setLocalStorage('projectList', response?.data?.project);\r\n//       }\r\n\r\n//       return response;\r\n//     },\r\n//     (error) => {\r\n//       if (error?.code === 'ERR_NETWORK') {\r\n//         showToast(error?.message || 'Network error occurred', {\r\n//           appearance: 'error'\r\n//         });\r\n//         // return Promise.reject(error?.response || 'Something went wrong!');\r\n//         return;\r\n//       }\r\n\r\n//       const errorData = error?.response?.data;\r\n//       if (typeof errorData === 'string' && errorData.includes('expired')) {\r\n//         // logoutUser();\r\n//         return;\r\n//       }\r\n\r\n//       let login;\r\n//       const url = error?.response?.config?.url;\r\n//       if (url) {\r\n//         const splitUrl = url?.split('/');\r\n//         login = splitUrl[splitUrl?.length - 1].toLowerCase();\r\n//       }\r\n//       // if (login !== 'login') {\r\n//       //   const originalRequest = error.config;\r\n//       //   if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       //     if (isRefreshing) {\r\n//       //       return new Promise((resolve) => {\r\n//       //         refreshSubscribers.push((token) => {\r\n//       //           originalRequest.headers['Authorization'] = `Bearer ${token}`;\r\n//       //           resolve(axios(originalRequest));\r\n//       //         });\r\n//       //       });\r\n//       //     }\r\n//       //     originalRequest._retry = true;\r\n//       //     isRefreshing = true;\r\n//       //     return new Promise((resolve, reject) => {\r\n//       //       const access_token = getLocalStorage('accessToken');\r\n//       //       axios\r\n//       //         .post(`${API_URLS.baseURL}/Authentication/Login`, {\r\n//       //           grantType: 'refresh_token',\r\n//       //           refreshToken: access_token\r\n//       //         })\r\n//       //         .then((response) => {\r\n//       //           const res = response.data;\r\n//       //           setLocalStorage('accessToken', res.accessToken);\r\n//       //           setLocalStorage('isAuthenticated', res.isAuthenticated);\r\n//       //           originalRequest.headers[\r\n//       //             'Authorization'\r\n//       //           ] = `Bearer ${res.accessToken}`;\r\n//       //           resolve(axios(originalRequest));\r\n//       //           refreshSubscribers.forEach((callback) =>\r\n//       //             callback(res.accessToken)\r\n//       //           );\r\n//       //         })\r\n//       //         .catch((err) => {\r\n//       //           // logoutUser();\r\n//       //           // clearLocalStorage();\r\n//       //           // window.location.replace('/login');\r\n//       //           reject(err);\r\n//       //         })\r\n//       //         .finally(() => {\r\n//       //           isRefreshing = false;\r\n//       //           refreshSubscribers = [];\r\n//       //         });\r\n//       //     });\r\n//       //   }\r\n//       // }\r\n\r\n//       if (error?.response?.status === 500 || error?.response?.status === 502) {\r\n//         const errorMessage = getErrorMessage(error?.response?.data?.errorCode);\r\n//         showToast(errorMessage, { appearance: 'error' });\r\n//       } else if (error?.response?.status === 404) {\r\n//         showToast('Something went wrong!', { appearance: 'error' });\r\n//       } else {\r\n//         return Promise.reject(error?.response || 'Something went wrong!');\r\n//       }\r\n//     }\r\n//   );\r\n// };\r\n\r\n// setupInterceptors(api);\r\n// setupInterceptors(api1);\r\n// setupInterceptors(instance);\r\n\r\n// export default instance;\r\n\r\nimport axios from 'axios';\r\nimport { getErrorMessage, getLocalStorage } from 'src/utils/helper';\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL_MAIN_NMS;\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request Interceptor\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getLocalStorage('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response Interceptor with toast handling\r\nexport const setupInterceptors = (\r\n  addToast: (message: string, options: any) => void\r\n) => {\r\n  instance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response) {\r\n        const errorMessage = getErrorMessage(error?.response?.data?.errorCode);\r\n        addToast(errorMessage, { appearance: 'error' });\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default instance;\r\n","\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\ninterface CustomBackdropProps {\r\n  open: boolean;\r\n}\r\n\r\nexport default function CustomBackdrop({ open }: CustomBackdropProps) {\r\n  return (\r\n    <div>\r\n      <Backdrop\r\n        sx={(theme) => ({\r\n          color: '#fff',\r\n          zIndex: '999999',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.6)'\r\n        })}\r\n        open={open}\r\n      >\r\n        <CircularProgress size={64} />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["props","children","value","index","other","_jsx","role","hidden","id","Box","sx","py","onClick","text","disabled","variant","loading","color","size","type","xs","sm","md","lg","Button","fullWidth","style","margin","border","CircularProgress","CustomPopUpModal","_ref","setOpen","open","handleClose","handleApply","title","isApply","buttonText","theme","useTheme","_Fragment","_jsxs","Dialog","onClose","maxWidth","borderRadius","DialogTitle","DialogContent","DialogContentText","DialogActions","display","mx","mb","CommonButton","background","colors","alpha","grey","black","fontSize","fontWeight","secondary","styled","MenuItem","padding","borderBottom","borderTop","backgroundColor","_ref2","label","onChange","options","name","filtersData","minWidth","setFiltersData","mt","Grid","item","alignItems","justifyContent","paddingX","borderLeft","borderRight","height","primary","fontFamily","typography","InputLabel","flex","FormControl","CustomSelectInputBox","IconComponent","CustomSelectIcon","displayEmpty","MenuProps","PaperProps","marginTop","MenuListProps","maxHeight","overflowY","map","option","CustomMenuItem","icon","component","marginRight","DrawerWrapper","Drawer","width","breakpoints","up","toggleDrawer","onApply","onCancel","isDisabled","isApplyDisabled","isCancel","addToast","useToasts","anchor","BackdropProps","flexDirection","Typography","pl","IconButton","mr","disableRipple","CloseIcon","Divider","my","flexGrow","pr","position","bottom","left","right","paddingTop","gap","cursor","appearance","trueWhite","danger","marginLeft","pointers","error","errorMsg","renderValue","multiple","CustomSelect","labelId","ListItemText","FormHelperText","getRoles","apiData","async","Promise","resolve","reject","res","instance","get","dispatch","setRoles","data","getRoleModuleMapping","queryString","createQueryString","setRoleModuleMapping","RoleContent","roleModule","setRoleModule","moduleList","handleCheckboxChange","handleRoleApply","refRoleHandler","activeView","moduleListByRole","activeEdit","TextField","placeholder","roleName","e","target","required","description","multiline","rows","List","p","row","i","_roleModule$moduleLis","ListItem","Checkbox","stopPropagation","checked","includes","moduleName","ref","Content","_getMeterDropdownDeta4","_getMeterDropdownDeta5","_getMeterDropdownDeta6","formState","setFormState","errors","setErrors","errorsMsg","setErrorsMsg","showPassword","setShowPassword","roles","handleApplys","refHandler","activeViewState","projectList","columnsList","setColumnsList","getMeterDropdownDetailList","handleChange","_roles$roleList","selectedRole","roleList","find","roleId","prevState","split","project","join","prevErrors","prevErrorsMsg","filterRoles","loggedInRole","_roles$roleList2","_list","rolesToHide","findRoles","list","filter","toLowerCase","helperText","inputProps","autoFocus","email","autoComplete","password","OutlinedInput","endAdornment","InputAdornment","handleClickShowPassword","prev","onMouseDown","event","preventDefault","onMouseUp","edge","VisibilityOff","Visibility","phoneNumber","CommonSelectBox","selectedValue","selectedOption","selected","length","projectName","source","_getMeterDropdownDeta","_getMeterDropdownDeta2","_getMeterDropdownDeta3","dropdownDetailList","optionsList","_ref3","_roles$roleList3","fetchList","filterData","onChangeHandler","applyFilterHandler","clearFilterHandler","isRole","isBulk","applyBulkHandler","selectedEditData","setActiveEdit","setSelectedEditData","setActiveViewState","clearBulkHandler","defaultPayload","defaultFormData","isActive","defaultErrors","defaultErrorMsg","emailRegex","passwordRegex","phoneRegex","useRef","useSelector","state","accessManagement","permission","meters","media","useMediaQuery","common","auth","useDispatch","useState","setLoading","drawerOpen","setDrawerOpen","roleListMapping","setRoleListMapping","useEffect","setProjectList","RoleName","RoleId","then","catch","err","_res$moduleListByRole","createPayload","CustomBackdrop","CustomDrawer","handleRoleRefApply","current","click","_roleModule$moduleLis2","_roleModule$moduleLis3","module","payload","post","console","log","Message","validateForm","valid","newErrors","newErrorsMsg","trim","test","register","encryptMessage","message","_error$data","_error$data$errors","hasPermission","User_Management_Search","NameOrEmail","InputProps","Tooltip","TickIcon","ClearIcon","Delete","Clear","CommonDropdown","Role","Role_Management_Add_Role","User_Management_Add_User","paddingY","StyledTableCell","TableCell","align","tableCellClasses","head","textTransform","pxToRem","body","textAlign","StyledTableRow","TableRow","StyledPagination","TableSortLabel","opacity","Pagination","_ref4","primaryAlt","nmsPrimaryAlt","palette","info","light","status","Chip","getStatusChip","CustomSwitch","Switch","transform","top","backgroundImage","transition","transitions","create","duration","shouldForwardProp","prop","StatusBoxOnline","_ref5","StatusBoxOffline","_ref6","_ref7","_ref8","severity","showIcon","deleteIcon","WarningRounded","onDelete","undefined","_localStorage","_localStorage2","column","handleNavigation","routeType","checkBoxes","action","handleButtonClick","cellContent","formatTimestamp","completedOn","_row$meterNo","location","pathname","meterNo","timestamp","SeverityLabel","isPayloadColumn","isSuccessful","secondsToMint","driftInSeconds","className","formatTime","matchedCommandName","Object","keys","commandNameEnum","key","commandType","lastTriedOn","moment","format","lastRecordReceivedOnIst","createdDateIst","lastAccess","rtcDateTimeUtc","firstCommunicationOn","utc","localStorage","activeRouting","lastCommunicatedOn","serverTime","rtcDateTime","lastUpdateTime","createdAt","eventLogList","createdDate","rtcDateTimeIst","CommandStatusChip","mdmStatus","tabsEnum","GATEWAYLOAD","gatewayId","RightTableIcon","EditIcon","formatDateColumn","_columns$","columns","handleChangeRowsPerPage","rowsPerPage","totalRecords","paginationState","currentPaginationState","currentPage","pageNumber","nextPageHandler","previousPageHandler","isStatePagination","handleGotoPageChange","handleKeyPress","handleChangePage","totalPages","noPagination","isSelectionEnabled","selectedRows","handleRowSelection","handleSelectAll","navigate","useNavigate","useLocation","page","setPage","order","setOrder","orderBy","setOrderBy","displayRows","setDisplayRows","paginatedRows","slice","nodeId","obj","MeterCategory","meterCategory","ProfileType","profileType","RequiredTotalCount","PageSize","ValidationId","validationId","setLocalStorage","Paper","boxShadow","TableContainer","zIndex","borderCollapse","borderSpacing","Table","stickyHeader","TableHead","TableBody","colSpan","NotFound","rowIndex","has","getCellContent","container","count","siblingCount","boundaryCount","onKeyDown","RoleManagement","PageNumber","setFilterData","setRowsPerPage","setCurrentPage","selectRow","setSelectRow","show","setShow","setIsBulk","selectedEmails","setSelectedEmails","setActiveView","filterByRole","requiredPermission","view","Role_Management_View","edit","Role_Management_Edit","delete","Role_Management_Delete_Role","hasRequiredPermission","isRoleHidden","ActionContent","placement","deleteHandler","Header","CommonTable","parseInt","clearPaginationHistory","nextPage","prevPage","UserManagement","userList","setUserList","updateLocalStorage","handleStatusChange","newStatus","userName","isActivate","removeUserFromList","User_Management_View","User_Management_Edit_User_Details","User_Management_Delete_User","bulk","User_Management_Bulk_Delete","onStatusChange","setIsActive","ActionCheckBoxes","isChecked","prevSelectedEmails","userEmailList","FullWidthTabs","Tabs","CustomTab","Tab","tabValue","setTabValue","direction","handleTabChange","newValue","CustomTabPanel","Select","paddingLeft","ProjectSelect","nmsPrimary","ProjectMenuItem","NMSDownIcon","pointerEvents","Icon","NMSArrowUpIcon","NMSArrowDownIcon","StyledIcon","_ref9","ProjectSelectIcon","_ref10","FormControlUpIcon","FormControlDownIcon","_ref11","_ref12","baseURL","process","REACT_APP_BASE_URL_MAIN_NMS","axios","headers","interceptors","request","use","config","token","getLocalStorage","Backdrop"],"sourceRoot":""}