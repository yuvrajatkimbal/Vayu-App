{"version":3,"file":"static/js/10.e525329c.chunk.js","mappings":"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","sources":["components/LogoSign/index.tsx","components/CustomSelectMenu/index.tsx","components/Notification/NotificationItem.tsx","components/Drawer/index.tsx","layouts/SidebarLayout/Header/Buttons/Notifications/index.tsx","api/Meters/index.ts","layouts/SidebarLayout/Header/Buttons/index.tsx","layouts/SidebarLayout/Header/index.tsx","utils/_nav.ts","assets/styledComponent/SidebarStyled.tsx","layouts/SidebarLayout/Sidebar/SidebarMenu/index.tsx","components/Scrollbar/index.tsx","layouts/SidebarLayout/index.tsx","api/index.ts","components/CustomBackdrop/CustomBackdrop.tsx","api/auth/index.ts"],"sourcesContent":["import {\r\n  Box,\r\n  Tooltip,\r\n  Badge,\r\n  TooltipProps,\r\n  tooltipClasses,\r\n  styled,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ApraavaLogoIcon, KimbalLogoIcon, LogoIcon } from 'src/assets/svg/svg';\r\nimport { setPageTitle } from 'src/reducers/common';\r\n\r\nconst TooltipWrapper = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.colors.alpha.trueWhite[100],\r\n    color: theme.palette.getContrastText(theme.colors.alpha.trueWhite[100]),\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: 'bold',\r\n    borderRadius: theme.general.borderRadiusSm,\r\n    boxShadow:\r\n      '0 .2rem .8rem rgba(7,9,25,.18), 0 .08rem .15rem rgba(7,9,25,.15)'\r\n  },\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.colors.alpha.trueWhite[100]\r\n  }\r\n}));\r\ninterface LogoProps {\r\n  open?: boolean;\r\n  notClick?: boolean;\r\n}\r\n\r\n// Logo component\r\nfunction Logo({ open, notClick }: LogoProps) {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // Function to handle navigation\r\n  const handleNavigation = () => {\r\n    dispatch(setPageTitle('Commands'));\r\n    navigate('/commands');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      onClick={notClick ? null : handleNavigation}\r\n      sx={{ paddingTop: '0.5px'}}\r\n    >\r\n      {open ? <LogoIcon /> : <KimbalLogoIcon />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import { MenuItem, Select, styled } from '@mui/material';\r\nimport {\r\n  BottomIcon,\r\n  FormControlDownIcon,\r\n  FormControlUpIcon,\r\n  NMSArrowDownIcon,\r\n  NMSArrowUpIcon,\r\n  NMSDownIcon,\r\n  RightIcon,\r\n  UpIcon\r\n} from 'src/assets/svg/svg';\r\n\r\nexport const ProjectSelectDropDown = styled(Select)(({ theme }) => ({\r\n  backgroundColor: 'transparent',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '28px',\r\n  '& .MuiSelect-select': {\r\n    // padding: '28px 20px 18px 20px !important',\r\n    fontSize: '16px', // Set the desired font size\r\n    fontWeight: '500', // Set the desired font weight\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    paddingLeft: '10px'\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\nexport const ProjectSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '35px',\r\n  '& .MuiSelect-select': {\r\n    padding: '28px 20px 18px 20px !important',\r\n    fontSize: '20px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '60px',\r\n  '& .MuiSelect-select': {\r\n    padding: '10px 14px',\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomSelectInput = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  // borderRight: '0px solid #000',\r\n  height: '42px',\r\n  '& .MuiSelect-select': {\r\n    padding: '10px 14px',\r\n    fontSize: '14px',\r\n    fontWeight: '500'\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\nexport const CustomMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  backgroundColor: theme.colors.alpha.trueWhite[100],\r\n  border: 'none', \r\n  borderBottom: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  borderLeft: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  borderRight: `1px solid ${theme.colors.alpha.black[100]}`, \r\n  margin: '0px !important',\r\n  borderRadius: '0px',\r\n  fontSize: '14px !important',\r\n  fontWeight: '500',\r\n  color: `${theme.colors.alpha.black[100]} !important`,\r\n  height: '44px',\r\n\r\n  '&:first-child': {\r\n    borderTop: `1px solid ${theme.colors.alpha.black[100]}` \r\n  },\r\n  '&:hover': {\r\n    backgroundColor: `${theme.colors.alpha.grey[100]} !important`\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: `${theme.colors.alpha.nmsPrimary[100]} !important`\r\n  },\r\n    //   '&.Mui-selected:hover': {\r\n   //     backgroundColor: '#bae7ff'\r\n  //   }\r\n}));\r\n\r\nexport const ProjectMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  backgroundColor: theme.colors.alpha.primaryAlt[100],\r\n  border: `1px solid ${theme.colors.alpha.black[100]}`,\r\n  borderRadius: '0px',\r\n  fontSize: '18px !important',\r\n  fontWeight: '500 !important',\r\n  color: theme.colors.alpha.black[100],\r\n  height: '48px',\r\n  paddingLeft: '22px',\r\n\r\n  '&:hover': {\r\n    backgroundColor: `${theme.colors.alpha.primary[100]} !important`\r\n  },\r\n  '&.Mui-selected': {\r\n    backgroundColor: `${theme.colors.alpha.primary[100]} !important`\r\n  }\r\n  //   '&.Mui-selected:hover': {\r\n  //     backgroundColor: '#bae7ff'\r\n  //   }\r\n}));\r\n\r\n\r\nconst RotatingIcon = styled(NMSDownIcon, {\r\n  shouldForwardProp: (prop) => prop !== 'open'\r\n})(({ open }) => ({\r\n  transition: 'transform 0.3s ease',\r\n  transform: open ? 'rotate(180deg)' : 'rotate(0deg)',\r\n  pointerEvents: 'none',\r\n  // fontSize: '4px',\r\n  marginTop: 2\r\n}));\r\n\r\nexport const CustomSelectRotatingIcon = (props) => {\r\n  return <RotatingIcon {...props} />;\r\n};\r\n\r\n\r\nexport const CustomSelectIcon = ({ open, ...props }) => {\r\n  const Icon = open ? NMSArrowUpIcon : NMSArrowDownIcon;\r\n\r\n  const StyledIcon = styled(Icon)(({ theme }) => ({\r\n    // width: 18,\r\n    // height: 18,\r\n    marginTop: '2px',\r\n    transition: 'transform 0.3s ease',\r\n    transform: open ? 'rotate(180deg)' : 'rotate(0deg)', // rotation animation\r\n    pointerEvents: 'none'\r\n  }));\r\n\r\n  return <StyledIcon {...props} />;\r\n};\r\n\r\nexport const ProjectSelectIcon = ({ open, ...props }) =>\r\n  open ? (\r\n    <FormControlUpIcon\r\n      {...props}\r\n      style={{ marginTop: '9px', marginRight: '9px' }}\r\n    />\r\n  ) : (\r\n    <FormControlDownIcon\r\n      {...props}\r\n      style={{ marginTop: '9px', marginRight: '12px' }}\r\n    />\r\n  );\r\n// export const DropUpDown = ({ open, ...props }) =>\r\n//   open ? (\r\n//     <FormControlUpIcon\r\n//       {...props}\r\n//       style={{ marginTop: '9px', marginRight: '9px' }}\r\n//     />\r\n//   ) : (\r\n//     <FormControlUpIcon\r\n//       {...props}\r\n//       style={{ marginTop: '9px', marginRight: '12px' }}\r\n//     />\r\n//   );\r\n\r\nexport const CustomBasicSelect = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  '& .MuiSelect-select': {\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n\r\n// Common Select Input\r\nexport const CustomSelectInputBox = styled(Select)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  borderRadius: '0px',\r\n  border: '1px solid #000',\r\n  height: '36px',\r\n  '& .MuiSelect-select': {\r\n    fontSize: '15px', // Set the desired font size\r\n    fontWeight: '500' // Set the desired font weight\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&:hover .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  },\r\n  '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n    border: 'none'\r\n  }\r\n}));\r\n","import { useTheme } from \"@emotion/react\";\r\nimport { Box, ListItemIcon, Typography, Stack, Button } from \"@mui/material\";\r\nimport { NMSNotificationErrorIcon, NMSNotificationTickIcon, NMSNotificationRightIcon } from \"src/assets/svg/svg\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\n\r\nexport const NotificationItem = ({ status, message, time, retry = false }) => {\r\n    const theme = useTheme();\r\n    const isError = status === 'error';\r\n\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        bgcolor={retry || isError ? '#F9EDED' : '#F2F7FF'}\r\n        mb={1.5}\r\n        sx={{\r\n          padding: '18px 24px'\r\n        }}\r\n      >\r\n        <Box display=\"flex\">\r\n          <ListItemIcon sx={{\r\n            width: \"20px\"\r\n          }}>\r\n          {isError ? (\r\n            <NMSNotificationErrorIcon sx={{ color: '#F44336' }} />\r\n          ) : (\r\n            <NMSNotificationTickIcon sx={{ color: '#00C851' }} />\r\n          )}\r\n          </ListItemIcon>\r\n          <Box\r\n            sx={{\r\n              paddingLeft: '15px'\r\n            }}\r\n          >\r\n            <Typography className=\"f-16\">\r\n              <strong>{'<Report name>'}</strong> has been{' '}\r\n              {retry ? 'downloaded' : message} successfully.\r\n            </Typography>\r\n            <Typography className='f-14_400' color=\"#808089\">\r\n              {time}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n          <FiberManualRecordIcon sx={{ color: '#1976D2', fontSize: 12 }} />\r\n          {retry ? (\r\n            <Button\r\n              variant=\"text\"\r\n              className=\"f-16\"\r\n              endIcon={<ReplayIcon />}\r\n              sx={{ textTransform: 'none', fontWeight: 600, color: '#1773BE' }}\r\n            >\r\n              Retry\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"text\"\r\n              className=\"f-16\"\r\n              endIcon={<NMSNotificationRightIcon sx={{ fontSize: 14 }} />}\r\n              sx={{ textTransform: 'none', fontWeight: 600, color: '#1773BE' }}\r\n            >\r\n              downloaded\r\n            </Button>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n    );\r\n  };","import { GridCloseIcon } from '@mui/x-data-grid';\r\n// import { CloseIcon } from 'src/assets/svg/svg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { currentDay } from 'src/utils/helper';\r\nimport { useEffect, useState } from 'react';\r\nimport AdvancedFilterButton from '../Button/AdvancedFilterButton';\r\nimport { requestedForEnum, tablesEnum } from 'src/utils/enums';\r\nimport { styled } from '@mui/material/styles';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n  Stack,\r\n  useTheme\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport {\r\n  NMSNotificationErrorIcon,\r\n  NMSNotificationRightIcon,\r\n  NMSNotificationTickIcon\r\n} from 'src/assets/svg/svg';\r\nimport {NotificationItem} from '../Notification/NotificationItem';\r\n\r\nconst DrawerWrapper = styled(Drawer)(({ theme }) => ({\r\n  '& .MuiDrawer-paper': {\r\n    width: '400px',\r\n    padding: '1.2rem 0rem',\r\n    // padding: '1.2rem 1.8rem',\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '480px',\r\n      padding: '1.2rem 0rem'\r\n      // padding: '1.2rem 2rem'\r\n    }\r\n  }\r\n}));\r\n\r\nconst NotificationDrawer = ({ toggleDrawer, open, direction }) => {\r\n  const theme = useTheme();\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const toggleShowMore = () => {\r\n    setShowMore((prev) => !prev);\r\n  };\r\n  const { downloadList } = useSelector((state: any) => state.meters);\r\n\r\n  const downloadHandler = (url) => {\r\n    window.open(url);\r\n  };\r\n  useEffect(() => {\r\n    if (!open) setShowMore(false);\r\n  }, [open]);\r\n\r\n\r\n\r\n  const groupNotificationsByDate = (notifications) => {\r\n    return notifications?.reduce((acc, notification) => {\r\n      const date = moment(notification?.createdOn)\r\n        ?.startOf('day')\r\n        ?.format('YYYY-MM-DD');\r\n      if (!acc[date]) {\r\n        acc[date] = [];\r\n      }\r\n      acc[date]?.push(notification);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const getSortedDates = (groupedData) => {\r\n    return Object?.keys(groupedData)?.sort((a, b) =>\r\n      moment(b)?.diff(moment(a))\r\n    );\r\n  };\r\n\r\n  const getDisplayDate = (date) => {\r\n    const today = moment().startOf('day');\r\n    const yesterday = moment().subtract(1, 'day').startOf('day');\r\n    const momentDate = moment(date);\r\n    if (momentDate.isSame(today)) {\r\n      return 'Today';\r\n    } else if (momentDate.isSame(yesterday)) {\r\n      return 'Yesterday';\r\n    } else {\r\n      return momentDate.format('DD MMM YYYY');\r\n    }\r\n  };\r\n\r\n  const statusText = (value) => {\r\n    switch (value) {\r\n      case 1:\r\n      case 2:\r\n      case 3:\r\n        return 'Pending';\r\n      case 0:\r\n      case 4:\r\n        return 'Completed';\r\n      case 5:\r\n        return 'Failed';\r\n    }\r\n  };\r\n\r\n  // const NotificationItem = ({ notification }) => (\r\n  //   <Box\r\n  //     padding={1}\r\n  //     className=\"notification-box\"\r\n  //     sx={{\r\n  //       background: notification?.isWatched\r\n  //         ? theme.colors.alpha.trueWhite[100]\r\n  //         : theme.colors.alpha.primaryAlt[100],\r\n  //       padding: { sm: '12px 18px' }\r\n  //     }}\r\n  //   >\r\n  //     <Box sx={{ marginBottom: 0.1 }}>\r\n  //       <Typography variant=\"button\" display=\"inline\">\r\n  //         Request Id : &nbsp;\r\n  //       </Typography>\r\n  //       <Typography display=\"inline\" className=\"f-12\">\r\n  //         {notification?.requestId}\r\n  //       </Typography>\r\n  //     </Box>\r\n  //     <Box sx={{ marginBottom: 0.1 }}>\r\n  //       <Typography variant=\"button\" display=\"inline\">\r\n  //         Requested For : &nbsp;\r\n  //       </Typography>\r\n  //       <Typography display=\"inline\" className=\"f-12\">\r\n  //         {tableNameMap[notification?.tableName] || 'n/a'}\r\n  //       </Typography>\r\n  //     </Box>\r\n  //     <Typography variant=\"button\" display=\"inline\">\r\n  //       Download Status :{' '}\r\n  //     </Typography>\r\n  //     <Typography display=\"inline\" className=\"f-12\">\r\n  //       {statusText(notification?.status)}\r\n  //     </Typography>\r\n  //     <Box sx={{ marginBottom: 0.1 }}>\r\n  //       <Typography variant=\"button\" display=\"inline\">\r\n  //         Created On : &nbsp;\r\n  //       </Typography>\r\n  //       <Typography display=\"inline\" className=\"f-12\">\r\n  //         {moment(notification?.createdOn)\r\n  //           // ?.add('+05:30')\r\n  //           ?.format('DD-MM-YYYY HH:mm:ss A')}\r\n  //       </Typography>\r\n  //     </Box>\r\n  //     <Box mt={1} display=\"flex\" justifyContent=\"end\">\r\n  //       <IconButton\r\n  //         sx={{\r\n  //           cursor: notification?.generatedLink ? 'pointer' : 'not-allowed'\r\n  //         }}\r\n  //         disabled={!notification?.generatedLink}\r\n  //       >\r\n  //         <AdvancedFilterButton\r\n  //           text=\"Download\"\r\n  //           onClick={() => downloadHandler(notification?.generatedLink)}\r\n  //           disabled={!notification?.generatedLink}\r\n  //           customSx={{\r\n  //             background: notification?.generatedLink\r\n  //               ? theme.colors.alpha.secondary[100]\r\n  //               : '#EBEBE4',\r\n  //             width: '150px !important',\r\n  //             height: '32px !important',\r\n  //             padding: '6px 15px'\r\n  //           }}\r\n  //         />\r\n  //       </IconButton>\r\n  //     </Box>\r\n  //   </Box>\r\n  // );\r\n\r\n  const isRecentDate = (date) => {\r\n    const today = moment().startOf('day');\r\n    const yesterday = moment().subtract(1, 'day').startOf('day');\r\n    const momentDate = moment(date);\r\n    return momentDate.isSame(today) || momentDate.isSame(yesterday);\r\n  };\r\n\r\n  const groupedNotifications = groupNotificationsByDate(downloadList);\r\n  const sortedDates = getSortedDates(groupedNotifications);\r\n\r\n  const recentDates = sortedDates?.filter((date) => isRecentDate(date));\r\n  const olderDates = sortedDates?.filter((date) => !isRecentDate(date));\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <DrawerWrapper open={open} onClose={toggleDrawer} anchor={'right'}>\r\n        <Box\r\n          mb={2}\r\n          className=\"d-flex-justify-between\"\r\n          sx={{\r\n            padding: '0px 24px'\r\n          }}\r\n        >\r\n          <Typography ml={2} variant=\"h6\" className=\"f-20\">\r\n            Notifications\r\n          </Typography>\r\n          <IconButton onClick={toggleDrawer}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Typography\r\n          className='f-16_400'\r\n          color=\"#808089\"\r\n          mb={1}\r\n          sx={{\r\n            padding: '0px 24px'\r\n          }}\r\n        >\r\n          This week\r\n        </Typography>\r\n\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"error\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n          retry\r\n        />\r\n\r\n        <Typography\r\n          color=\"#808089\"\r\n          className='f-16_400'\r\n          mt={2}\r\n          mb={2}\r\n          sx={{\r\n            padding: '0px 24px'\r\n          }}\r\n        >\r\n          Previous week\r\n        </Typography>\r\n\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"10:30 AM, 3 April 2024\"\r\n        />\r\n        <NotificationItem\r\n          status=\"success\"\r\n          message=\"downloaded\"\r\n          time=\"4 minutes ago\"\r\n        />\r\n        {/* {recentDates.map((date) => (\r\n          <Box key={date}>\r\n            <Box mb={1} className=\"d-flex-justify-between\">\r\n              <Typography ml={2} variant=\"h6\" className=\"f-18\">\r\n                {getDisplayDate(date)}\r\n              </Typography>\r\n            </Box>\r\n            {groupedNotifications[date].map((notification, index) => (\r\n              <NotificationItem key={index} notification={notification} />\r\n            ))}\r\n          </Box>\r\n        ))}\r\n\r\n        {olderDates?.length > 0 && recentDates?.length > 0 && (\r\n          <Box display=\"flex\" justifyContent=\"center\" mt={2} mb={3}>\r\n            <Typography\r\n              variant=\"button\"\r\n              sx={{ cursor: 'pointer', color: theme.colors.alpha.black }}\r\n              onClick={toggleShowMore}\r\n            >\r\n              {showMore ? 'See Less' : 'See More'}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {recentDates?.length === 0\r\n          ? olderDates.map((date) => (\r\n              <Box key={date}>\r\n                <Box mb={1} className=\"d-flex-justify-between\">\r\n                  <Typography ml={2} variant=\"h6\" className=\"f-18\">\r\n                    {getDisplayDate(date)}\r\n                  </Typography>\r\n                </Box>\r\n                {groupedNotifications[date].map((notification, index) => (\r\n                  <NotificationItem key={index} notification={notification} />\r\n                ))}\r\n              </Box>\r\n            ))\r\n          : showMore &&\r\n            olderDates.map((date) => (\r\n              <Box key={date}>\r\n                <Box mb={1} className=\"d-flex-justify-between\">\r\n                  <Typography ml={2} variant=\"h6\" className=\"f-18\">\r\n                    {getDisplayDate(date)}\r\n                  </Typography>\r\n                </Box>\r\n                {groupedNotifications[date].map((notification, index) => (\r\n                  <NotificationItem key={index} notification={notification} />\r\n                ))}\r\n              </Box>\r\n            ))} */}\r\n      </DrawerWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationDrawer;\r\n","import { Box, IconButton, Menu, MenuItem, Stack, Tooltip } from \"@mui/material\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDownloadDetails, sendDownloadRequest } from \"src/api/Meters\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport {\r\n  LogOutIcon,\r\n  NMSUserIcon,\r\n  NotificationDotIcon,\r\n  NotificationIcon,\r\n  UnreadNotificationIcon,\r\n  VayuProfileIcon\r\n} from \"src/assets/svg/svg\";\r\nimport NotificationDrawer from \"src/components/Drawer\";\r\nimport {\r\n  currentDay,\r\n  getLocalStorage,\r\n  startWeekday,\r\n  startWeekdays\r\n} from \"src/utils/helper\";\r\nimport HeaderUserbox from \"../../Userbox\";\r\nimport moment from \"moment\";\r\nimport { Navigate, useNavigate } from \"react-router\";\r\n\r\nfunction HeaderNotifications() {\r\n  const ref = useRef<any>(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { downloadList } = useSelector((state: any) => state.meters);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  // const [openAccountsMenu, setOpenAccountsMenu] = React.useState(false);\r\n\r\n  const [isAnyUnwatched, setIsAnyUnwatched] = useState(false);\r\n  const [unwatchedItems, setUnwatchedItems] = useState([]);\r\n  const [unwatchedItemsArray, setUnwatchedItemsArray] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const hasUnwatchedItems = downloadList?.some(\r\n  //     (item) => item?.isWatched === false\r\n  //   );\r\n  //   const filteredItems = downloadList?.filter(\r\n  //     (item) => item?.isWatched === false\r\n  //   );\r\n  //   setUnwatchedItems(filteredItems);\r\n  //   setIsAnyUnwatched(hasUnwatchedItems);\r\n  // }, [downloadList]);\r\n\r\n  useEffect(() => {\r\n    // fetchNotificationDetails();\r\n    // setInterval(() => {\r\n    //   fetchNotificationDetails();\r\n    // }, 120000); // 2 minutes in milliseconds\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (unwatchedItems.length > 0) {\r\n      const newArray = unwatchedItems?.map((item) => ({\r\n        date: moment(item?.createdOn).format(\"YYYY-MM-DD\"), // Gets the current day in \"YYYY-MM-DD\" format\r\n        createdBy: getLocalStorage(\"userName\"),\r\n        headerRequired: item?.headerRequired, // Assuming this is the selectedColumnsString equivalent\r\n        fileFormat: item?.fileFormat,\r\n        requestId: item?.requestId,\r\n        Project: getLocalStorage(\"project\") || \"null\"\r\n      }));\r\n      setUnwatchedItemsArray(newArray);\r\n    }\r\n  }, [unwatchedItems]);\r\n\r\n  // const fetchNotificationDetails = () => {\r\n  //   dispatch(\r\n  //     getDownloadDetails({\r\n  //       createdBy: getLocalStorage('userName'),\r\n  //       StartDate: startWeekdays,\r\n  //       EndDate: currentDay,\r\n  //       Project: getLocalStorage(\"project\") || \"null\"\r\n  //     })\r\n  //   )\r\n  //     .then((res) => {})\r\n  //     .catch((err) => {});\r\n  // };\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openAccountsMenu = Boolean(anchorEl);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    toast.success(\"User has been logged out\");\r\n    navigate(\"/login\");\r\n    handleClose();\r\n    // Add your logout logic here\r\n    console.log(\"Logged out\");\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    if (open && isAnyUnwatched) {\r\n      const apiData = {\r\n        downloadRequestModelList: unwatchedItemsArray\r\n      };\r\n      dispatch(sendDownloadRequest(apiData))\r\n        .then((res) => {\r\n          dispatch(\r\n            getDownloadDetails({\r\n              createdBy: getLocalStorage(\"userName\"),\r\n              StartDate: startWeekdays,\r\n              EndDate: currentDay,\r\n              Project: getLocalStorage(\"project\") || \"null\"\r\n            })\r\n          )\r\n            .then((res) => {})\r\n            .catch((err) => {\r\n              console.log(\"err\", err);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n        });\r\n    }\r\n\r\n    setOpen((prevOpen) => !prevOpen);\r\n    // fetchNotificationDetails();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <Tooltip title=\"Notifications\">\r\n          <Box\r\n            className=\"cursor-pointer\"\r\n            component=\"div\"\r\n            marginRight={2}\r\n            onClick={toggleDrawer}\r\n          >\r\n            <IconButton sx={{ padding: \"4px\", position: \"relative\" }}>\r\n              {isAnyUnwatched ? (\r\n                <Box>\r\n                  <NotificationIcon />\r\n                </Box>\r\n              ) : (\r\n                <UnreadNotificationIcon />\r\n              )}\r\n            </IconButton>\r\n          </Box>\r\n        </Tooltip>\r\n        <Tooltip title=\"\">\r\n          <IconButton\r\n            onClick={handleClick}\r\n            sx={{ position: \"relative\", padding: \"4px\" }}\r\n          >\r\n            <NMSUserIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={openAccountsMenu}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          PaperProps={{\r\n            sx: {\r\n              p: 0,\r\n              mt: 1,\r\n              boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.1)\",\r\n              backgroundColor: \"background.paper\"\r\n            }\r\n          }}\r\n          MenuListProps={{\r\n            sx: { p: 0 }\r\n          }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => navigate(\"/my_profile\")}\r\n            sx={{ color: \"black\", px: 2, py: 1 }}\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              {/* <VayuProfileIcon /> */}\r\n              <Box component=\"span\">Profile</Box>\r\n            </Stack>\r\n          </MenuItem>\r\n\r\n          <MenuItem onClick={handleLogout} sx={{ px: 2, py: 1 }}>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              {/* <LogOutIcon /> */}\r\n              <Box component=\"span\">Logout</Box>\r\n            </Stack>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n\r\n      <NotificationDrawer\r\n        open={open}\r\n        toggleDrawer={toggleDrawer}\r\n        direction={\"right\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeaderNotifications;\r\n","import axios from 'axios';\r\nimport { instance } from '../index';\r\nimport {\r\n  setAllMetersList,\r\n  getMeterDropdownDetail,\r\n  setDownloadDetails,\r\n  setMeterDetails,\r\n  setMeterEventDetails,\r\n  setMeterProfilesDetail,\r\n  setMeterProfilesData,\r\n  setMeterEntities,\r\n  setMeterRoutings,\r\n  setCommandCategory,\r\n  setCommandListByCategory,\r\n  setMeterCommandsList,\r\n  setMeterAllCommandsList\r\n} from 'src/reducers/Meters';\r\nimport { createQueryString } from 'src/utils/helper';\r\n\r\nexport const getAllMetersList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(`/Meters/GetMeters?${queryString}`);\r\n      dispatch(setAllMetersList(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error?.data);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getMeterDropdownDetailHandler: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const queryString = createQueryString(apiData);\r\n        const res = await instance.get(\r\n          `/Meters/GetMeterDropdownDetail?${queryString}`\r\n        );\r\n        dispatch(getMeterDropdownDetail(res?.data));\r\n        resolve(res?.data);\r\n      } catch (error) {\r\n        //@ts-ignore\r\n\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getMeterDetails: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(`/Meters/GetMeterDetails?${queryString}`);\r\n      dispatch(setMeterDetails(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getMeterProfileDetails: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const queryString = createQueryString(apiData);\r\n        const res = await instance.get(\r\n          `/Meters/GetProfileDetails?${queryString}`\r\n        );\r\n        dispatch(setMeterProfilesDetail(res?.data));\r\n        resolve(res?.data);\r\n      } catch (error) {\r\n        //@ts-ignore\r\n\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getMeterEventDetails: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(\r\n        `/Meters/GetProfileDetails?${queryString}`\r\n      );\r\n      dispatch(setMeterEventDetails(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n// export const getDownloadDetails: any = (apiData) => async (dispatch: any) => {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     try {\r\n//       const queryString = createQueryString(apiData);\r\n//       const res = await instance.get(`/Meters/GetDownloadDetails?${queryString}`);\r\n//       dispatch(setDownloadDetails(res?.data?.meterDownloadList));\r\n//       resolve(res?.data);\r\n//     } catch (error) {\r\n//       //@ts-ignore\r\n//       console.log('error============', error);\r\n//       reject(error);\r\n//     }\r\n//   });\r\n// };\r\n\r\nexport const getDownloadDetails: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(\r\n        `/Meters/GetDownloadDetails?${queryString}`\r\n      );\r\n\r\n      if (res?.data?.meterDownloadList) {\r\n        dispatch(setDownloadDetails(res?.data?.meterDownloadList));\r\n        resolve(res?.data);\r\n      } else {\r\n        console.error('meterDownloadList is missing in response');\r\n        reject(new Error('meterDownloadList is missing in response'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching download details:', error);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const sendDownloadRequest: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/Meters/SendDownloadRequest`, apiData);\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const uploadMeterDetails: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/Meters/UpdateMeterDetails`, apiData);\r\n      resolve(res);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getMeterProfilesData: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (apiData.EventProfileTypeList.length === 1) {\r\n        const profileNameMapping: { [key: string]: string } = {\r\n          'Current Profile': 'CURRENTPROFILE',\r\n          'Other Profile': 'OTHERPROFILE',\r\n          'Power Profile': 'POWERPROFILE',\r\n          'RC/DC Profile': 'CONNECTDISCONNECTPROFILE',\r\n          'Voltage Profile': 'VOLTAGEPROFILE',\r\n          'Non-Rollover Profile': 'NONROLLOVERPROFILE',\r\n          'Transaction Profile': 'TRANSACTIONPROFILE'\r\n        };\r\n\r\n        const currentProfile = apiData.EventProfileTypeList[0];\r\n\r\n        // Change the name if a matching profile is found\r\n        if (profileNameMapping[currentProfile]) {\r\n          apiData.EventProfileTypeList[0] = profileNameMapping[currentProfile];\r\n        }\r\n      }\r\n      const res = await instance.post(`/Meters/GetMeterProfileData`, apiData);\r\n      // dispatch(setMeterProfilesData(res?.data));\r\n      // resolve(res?.data);\r\n      if (res?.data) {\r\n        dispatch(setMeterProfilesData(res?.data));\r\n        resolve(res?.data);\r\n      } else {\r\n        console.error('meter data is missing in response');\r\n        reject(new Error('meter data is missing in response'));\r\n      }\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n// export const getMeterProfilesData: any = (apiData: any) => async (dispatch: any) => {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     try {\r\n//       // Validate `EventProfileTypeList`\r\n//       if (!Array.isArray(apiData?.EventProfileTypeList) || apiData.EventProfileTypeList.length === 0) {\r\n//         throw new Error('EventProfileTypeList is missing or invalid.');\r\n//       }\r\n\r\n//       if (apiData.EventProfileTypeList.length === 1) {\r\n//         const profileNameMapping: { [key: string]: string } = {\r\n//           'Current Profile': 'CURRENTPROFILE',\r\n//           'Other Profile': 'OTHERPROFILE',\r\n//           'Power Profile': 'POWERPROFILE',\r\n//           'RC/DC Profile': 'CONNECTDISCONNECTPROFILE',\r\n//           'Voltage Profile': 'VOLTAGEPROFILE',\r\n//           'Non-Rollover Profile': 'NONROLLOVERPROFILE',\r\n//           'Transaction Profile': 'TRANSACTIONPROFILE',\r\n//         };\r\n\r\n//         const currentProfile = apiData.EventProfileTypeList[0];\r\n\r\n//         // Change the name if a matching profile is found\r\n//         if (profileNameMapping[currentProfile]) {\r\n//           apiData.EventProfileTypeList[0] = profileNameMapping[currentProfile];\r\n//         }\r\n//       }\r\n\r\n//       // Call the instance\r\n//       const res = await instance.post(`/Meters/GetMeterProfileData`, apiData);\r\n\r\n//       // Validate the instance response\r\n//       if (!res?.data) {\r\n//         throw new Error('instance response is missing or invalid.');\r\n//       }\r\n\r\n//       // Dispatch action\r\n//       dispatch(setMeterProfilesData(res.data));\r\n//       resolve(res.data);\r\n//     } catch (error) {\r\n//       // Log error details\r\n//       console.error('Error fetching meter profile data:', error);\r\n\r\n//       // Provide a meaningful rejection message\r\n//       reject({\r\n//         message: 'Failed to fetch meter profile data',\r\n//         details: error?.response?.data || error.message || error,\r\n//       });\r\n//     }\r\n//   });\r\n// };\r\n\r\nexport const getMeterRawData: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // const queryString = createQueryString(apiData);\r\n      const res = await instance.post(`/HESRawData/GetHESRawData`, apiData);\r\n      dispatch(setMeterProfilesData(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getMeterEntities: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(\r\n        `/MeterEntity/GetMeterEntities?${queryString}`\r\n      );\r\n      dispatch(setMeterEntities(res?.data?.entityList));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getMeterRoutings: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/MeterRouting/GetMeterRouting`, apiData);\r\n      dispatch(setMeterRoutings(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\nexport const getMeterRoutingList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(\r\n        `/MeterRouting/GetMeterRoutingHistory`,\r\n        apiData\r\n      );\r\n      dispatch(setMeterRoutings(res?.data));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCommandCategory: any = (apiData) => async (dispatch: any) => {\r\n  const queryString = createQueryString(apiData);\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.get(\r\n        `/HESCommand/GetCommandCategory?${queryString}`\r\n      );\r\n      dispatch(setCommandCategory(res?.data?.commandCategoryList));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCommandListByCategory: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await instance.post(\r\n          `/HESCommand/GetCommandListByCategory`,\r\n          apiData\r\n        );\r\n        dispatch(setCommandListByCategory(res?.data?.commandList));\r\n        resolve(res?.data);\r\n      } catch (error) {\r\n        //@ts-ignore\r\n\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getMeterAllCommandsList: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await instance.post(\r\n          `/HESCommand/GetCommandListByCategory`,\r\n          apiData\r\n        );\r\n        dispatch(setMeterAllCommandsList(res?.data?.commandList));\r\n        resolve(res?.data);\r\n      } catch (error) {\r\n        //@ts-ignore\r\n\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getMeterCommandsList: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const queryString = createQueryString(apiData);\r\n      const res = await instance.get(\r\n        `/HESCommand/GetHesCommands?${queryString}`\r\n      );\r\n      dispatch(setMeterCommandsList(res?.data?.hesCommandList));\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const runMeterCommand: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      // Check if CommandValue is an object\r\n      let commandValueString;\r\n      if (typeof apiData?.CommandValue === 'object') {\r\n        // If CommandValue is an object, stringify and encode it\r\n        commandValueString = encodeURIComponent(\r\n          JSON.stringify(apiData?.CommandValue)\r\n        );\r\n      } else {\r\n        // If CommandValue is not an object, use it as is\r\n        commandValueString = apiData?.CommandValue;\r\n      }\r\n\r\n      // Construct the instance URL based on the type of CommandValue\r\n      const res = await instance.get(\r\n        `/HES/RequestOnDemandData?MeterNo=${apiData?.MeterNo}&CommandType=${apiData?.CommandType}&CommandValue=${commandValueString}&IsDlms=${apiData?.IsDlms}&Project=${apiData?.Project}`\r\n      );\r\n\r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import { Box } from '@mui/material';\r\nimport HeaderSearch from './Search';\r\nimport HeaderNotifications from './Notifications';\r\n\r\nfunction HeaderButtons() {\r\n  return (\r\n    <Box >\r\n      {/* <HeaderSearch /> */}\r\n      <Box component=\"span\">\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HeaderButtons;\r\n","import { useContext, useState } from 'react';\r\nimport {\r\n  Box,\r\n  useTheme,\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { SidebarContext } from 'src/contexts/SidebarContext';\r\nimport { useSelector } from 'react-redux';\r\nimport HeaderButtons from './Buttons';\r\nimport ProjectFilter from 'src/components/ProjectFilter';\r\nimport {\r\n  ProjectSelect,\r\n  ProjectSelectIcon,\r\n  ProjectMenuItem\r\n} from 'src/components/CustomSelectMenu';\r\nimport { hasPermission } from 'src/utils/permission';\r\nimport { profilesEnum, profilesTitleEnum } from 'src/utils/enums';\r\nimport { getLocalStorage, setLocalStorage } from 'src/utils/helper';\r\nimport { useNavigate } from 'react-router';\r\n\r\nfunction Header() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  let projectList = getLocalStorage('projectList');\r\n  const [selectedProject, setSelectedProject] = useState(() => {\r\n    return getLocalStorage('project') || '\"\"';\r\n  });\r\n\r\n  const { sidebarToggle, toggleSidebar } = useContext(SidebarContext);\r\n  const { pageTitle } = useSelector((state: any) => state.common);\r\n  const { subTitle } = useSelector((state: any) => state.common);\r\n  const { subTitle1 } = useSelector((state: any) => state.common);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const typographyStyles = {\r\n    marginLeft: {\r\n      xs: '50px !important',\r\n      md: '50px !important',\r\n      lg: '15px !important',\r\n      xl: '15px !important'\r\n    }\r\n  };\r\n  if (pageTitle) setLocalStorage('title', pageTitle);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const projectFilterHandler = (event) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setAnchorEl(null);\r\n  // Map profile enums to profile titles\r\n  const getProfileTitle = (profile) => {\r\n    const profileTitleMap = {\r\n      [profilesEnum.ESWPUSHDATA]: profilesTitleEnum.ESWPUSHDATA,\r\n      [profilesEnum.INSTANTPROFILE]: profilesTitleEnum.INSTANTPROFILE,\r\n      [profilesEnum.BLOCKLOADPROFILE]: profilesTitleEnum.BLOCKLOADPROFILE,\r\n      [profilesEnum.DAILYLOADPROFILE]: profilesTitleEnum.DAILYLOADPROFILE,\r\n      [profilesEnum.EVENTLOG]: profilesTitleEnum.EVENTLOG,\r\n      [profilesEnum.RAWDATA]: profilesTitleEnum.RAWDATA,\r\n      [profilesEnum.BILLINGPROFILE]: profilesTitleEnum.BILLINGPROFILE\r\n    };\r\n\r\n    return profileTitleMap[profile] || '';\r\n  };\r\n\r\n  const handleProjectChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedProject(value);\r\n    setLocalStorage('project', value);\r\n    navigate('/');\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: isMobile ? 'column' : 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'strech',\r\n        width: '100%',\r\n        height: '75px'\r\n      }}\r\n    >\r\n      {/* Left Section: Title and Subtitles */}\r\n      <Box\r\n        px={3}\r\n        sx={{\r\n          flex: isMobile ? '1 0 auto' : '1 0 65%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          borderRight: isMobile ? 'none' : '1px solid black'\r\n        }}\r\n      >\r\n        <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n          <Typography variant=\"h1\" className=\"f-25\">\r\n            {pageTitle || getLocalStorage('title')}\r\n          </Typography>\r\n\r\n          {subTitle && (\r\n            <Typography variant=\"h1\" sx={typographyStyles} className=\"f-25\">\r\n              {'>'} {subTitle}\r\n            </Typography>\r\n          )}\r\n\r\n          {subTitle1 && (\r\n            <Typography variant=\"h1\" sx={typographyStyles} className=\"f-25\">\r\n              {'>'}&nbsp;{getProfileTitle(subTitle1)}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box>\r\n          <HeaderButtons />\r\n        </Box>\r\n      </Box>\r\n\r\n      {!isMobile &&\r\n        hasPermission(\r\n          moduleListByRole,\r\n          permission?.Meters_Filters_Project_SAT_Advanced\r\n        ) && (\r\n          <Box\r\n            sx={{\r\n              flex: isMobile ? '1 0 auto' : '1 0 25%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              padding: '0',\r\n              alignItems: 'center',\r\n              borderRight: isMobile ? 'none' : '1px solid black'\r\n            }}\r\n            onClick={projectFilterHandler}\r\n          >\r\n            <FormControl fullWidth>\r\n              <ProjectSelect\r\n                value={selectedProject}\r\n                onChange={handleProjectChange}\r\n                IconComponent={ProjectSelectIcon}\r\n                defaultValue={getLocalStorage('project') || 'null'}\r\n                displayEmpty\r\n                sx={{ border: '0px solid', backgroundColor: 'transparent' }}\r\n                MenuProps={{\r\n                  PaperProps: {\r\n                    style: {\r\n                      marginTop: '1px',\r\n                      padding: '0',\r\n                      maxHeight: 200,\r\n                      borderRadius: '0px',\r\n                      boxShadow: 'none'\r\n                    }\r\n                  },\r\n                  MenuListProps: {\r\n                    style: {\r\n                      marginTop: '1px',\r\n                      padding: '0px',\r\n                      maxHeight: 400,\r\n                      overflowY: 'auto'\r\n                    }\r\n                  }\r\n                }}\r\n                renderValue={(selected) =>\r\n                  !selected ? (\r\n                    <Typography color=\"text.secondary\"></Typography>\r\n                  ) : (\r\n                    selected\r\n                  )\r\n                }\r\n              >\r\n                {projectList?.split(',')?.map((project) => (\r\n                  <ProjectMenuItem key={project} value={project}>\r\n                    {project}\r\n                  </ProjectMenuItem>\r\n                ))}\r\n              </ProjectSelect>\r\n            </FormControl>\r\n          </Box>\r\n        )}\r\n{/* \r\n      {      !isMobile && (\r\n        <Box\r\n          sx={{\r\n            flex: isMobile ? '1 0 auto' : '1 0 10%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n            // borderLeft: isMobile ? 'none' : '1px solid black'\r\n          }}\r\n        >\r\n          <Typography className='f-18'>Client Logo</Typography>\r\n        </Box>\r\n      )} */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  VayuCommandsActiveIcon,\r\n  VayuCommandsIcon,\r\n  VayuDownloadDataActiveIcon,\r\n  VayuDownloadDataIcon,\r\n  VayuProfileActiveIcon,\r\n  VayuProfileIcon,\r\n  // VayuUserGroupsActiveIcon,\r\n  // VayuUserGroupsIcon,\r\n  VayuUserIcon,\r\n  VayuUserActiveIcon,\r\n  MetersIcon,\r\n  MetersIconActive,\r\n  CommandsIcon,\r\n  CommandsIconActive,\r\n  ExportIcon,\r\n  VayuUserGroupsActiveIcon,\r\n  VayuUserGroupsIcon\r\n} from \"../assets/svg/svg\";\r\n\r\n\r\nexport const vayuSidebarItems = [\r\n  {\r\n    name: \"Meters\",\r\n    path: \"/meters\",\r\n    icon:MetersIcon,\r\n    activeIcon: MetersIconActive,\r\n    key:\"Meters\"\r\n  },\r\n  {\r\n    name: \"Commands\",\r\n    path: \"/commands\",\r\n    icon: CommandsIcon,\r\n    activeIcon: CommandsIconActive,\r\n    key: \"Commands\"\r\n  },\r\n  {\r\n    name: \"Field Users\",\r\n    path: \"/field_users\",\r\n    icon: VayuUserIcon,\r\n    activeIcon: VayuUserActiveIcon,\r\n    key: \"Field Users\"\r\n  },\r\n  {\r\n    name: \"Field User Groups\",\r\n    path: \"/field_user_groups\",\r\n    icon: VayuUserGroupsIcon,\r\n    activeIcon: VayuUserGroupsActiveIcon,\r\n    key: \"Field User Groups\"\r\n  },\r\n  {\r\n    name: \"Download Data\",\r\n    path: \"/download_data\",\r\n    icon: VayuDownloadDataIcon,\r\n    activeIcon: VayuDownloadDataActiveIcon,\r\n    key: \"Download Data\"\r\n  },\r\n  {\r\n    name: \"My Profile\",\r\n    path: \"/my_profile\",\r\n    icon: VayuProfileIcon,\r\n    activeIcon: VayuProfileActiveIcon,\r\n    key: \"my_profile\"\r\n  },\r\n];\r\n","import { alpha, darken, styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nexport const MenuWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n    .MuiList-root {\r\n      padding: 0;\r\n      & > .MuiList-root {\r\n        padding: 0 ${theme.spacing(0)} ${theme.spacing(1)};\r\n      }\r\n    }\r\n    .MuiListSubheader-root {\r\n      text-transform: uppercase;\r\n      font-weight: bold;\r\n      font-size: ${theme.typography.pxToRem(17)};\r\n      color: ${theme.colors.alpha.black[50]};\r\n      padding: ${theme.spacing(0, 2.5)};\r\n    }\r\n    &.settings-menu {\r\n      position: fixed;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 290px;\r\n      background: ${darken(theme.colors.alpha.primary[100], 0.1)};\r\n    }\r\n    .icons {\r\n      padding-right: ${theme.spacing(2.33)};\r\n      padding-top: ${theme.spacing(0.44)};\r\n    }\r\n  `\r\n);\r\n\r\nexport const SubMenuWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n    .MuiList-root {\r\n      .MuiListItem-root {\r\n        padding: 0;\r\n        .MuiBadge-root {\r\n          position: absolute;\r\n          right: ${theme.spacing(3.2)};\r\n          .MuiBadge-standard {\r\n            background: ${theme.colors.primary.main};\r\n            font-size: ${theme.typography.pxToRem(10)};\r\n            font-weight: bold;\r\n            text-transform: uppercase;\r\n            color: ${theme.palette.primary.contrastText};\r\n          }\r\n        }\r\n        .MuiButton-root {\r\n          display: flex;\r\n          // border-bottom: 1px solid ${theme.colors.alpha.black[100]};\r\n          font-size: ${theme.typography.pxToRem(17)};\r\n          font-weight: 400 !important;\r\n          color: black;\r\n          background-color: #fff;\r\n          width: 100%;\r\n          justify-content: flex-start;\r\n          padding: ${theme.spacing(1.5, 0, 1.5, 2.9)};\r\n          .MuiButton-startIcon, .MuiButton-endIcon {\r\n            transition: ${theme.transitions.create('color')};\r\n            .MuiSvgIcon-root {\r\n              font-size: inherit;\r\n            }\r\n          }\r\n          .MuiButton-startIcon {\r\n            color: ${theme.colors.alpha.trueWhite[50]};\r\n            margin-right: ${theme.spacing(2.8)};\r\n          }\r\n          .MuiButton-endIcon {\r\n            color: ${theme.colors.alpha.trueWhite[50]};\r\n            margin-left: auto;\r\n            opacity: 0.8;\r\n          }\r\n          &.active {\r\n            background-color: ${alpha(theme.colors.alpha.nmsPrimary[100], 0.5)} !important;\r\n            color: ${theme.colors.alpha.nmsPrimaryAlt[100]};\r\n            border-right: 5px solid ${theme.colors.alpha.nmsPrimaryAlt[100]};\r\n            z-index: 999999;\r\n            font-weight: 500 !important;\r\n            .MuiButton-startIcon, .MuiButton-endIcon {\r\n              color: ${theme.colors.alpha.trueWhite[100]};\r\n            }\r\n          }\r\n          &.active:hover {\r\n            color: ${theme.colors.alpha.nmsPrimaryAlt[100]};\r\n            }\r\n          &:hover {\r\n            background-color: ${alpha(theme.colors.alpha.trueWhite[100], 0.1)};\r\n            color: ${theme.colors.alpha.black[100]};\r\n            .MuiButton-startIcon, .MuiButton-endIcon {\r\n              color: ${theme.colors.alpha.trueWhite[100]};\r\n            }\r\n          }\r\n          &:focus {\r\n           background-color: ${alpha(theme.colors.alpha.trueWhite[100], 0.5)};\r\n          }\r\n        }\r\n        &.Mui-children {\r\n          flex-direction: column;\r\n          .MuiBadge-root {\r\n            right: ${theme.spacing(7)};\r\n          }\r\n        }\r\n        .MuiCollapse-root {\r\n          width: 100%;\r\n          .MuiList-root {\r\n            padding: ${theme.spacing(1, 0)};\r\n          }\r\n          .MuiListItem-root {\r\n            padding: 1px 0;\r\n            .MuiButton-root {\r\n              padding: ${theme.spacing(0.8, 3)};\r\n              .MuiBadge-root {\r\n                right: ${theme.spacing(3.2)};\r\n              }\r\n              &:before {\r\n                content: ' ';\r\n                background: ${theme.colors.alpha.trueWhite[100]};\r\n                opacity: 0;\r\n                transition: ${theme.transitions.create([\r\n                  'transform',\r\n                  'opacity'\r\n                ])};\r\n                width: 6px;\r\n                height: 6px;\r\n                transform: scale(0);\r\n                border-radius: 20px;\r\n                margin-right: ${theme.spacing(1.8)};\r\n              }\r\n              &.active, &:hover {\r\n                &:before {\r\n                  transform: scale(1);\r\n                  opacity: 1;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n);\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  ListSubheader,\r\n  alpha,\r\n  Box,\r\n  List,\r\n  styled,\r\n  Button,\r\n  ListItem,\r\n  Collapse,\r\n  Divider,\r\n  useTheme,\r\n  darken\r\n} from '@mui/material';\r\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\r\nimport { SidebarContext } from 'src/contexts/SidebarContext';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setPageTitle } from 'src/reducers/common';\r\nimport {vayuSidebarItems } from 'src/utils/_nav';\r\nimport {\r\n  MenuWrapper,\r\n  SubMenuWrapper\r\n} from 'src/assets/styledComponent/SidebarStyled';\r\nimport { hasPermission } from 'src/utils/permission';\r\nimport { getModuleListByRoleAction } from 'src/api/auth';\r\nimport { setActiveSession } from 'src/reducers/auth';\r\nimport { NMSBackIcon } from 'src/assets/svg/svg';\r\nimport { projects } from 'src/utils/const';\r\n\r\nconst SidebarMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const { moduleListByRole } = useSelector((state: any) => state.auth);\r\n  const { closeSidebar } = useContext(SidebarContext);\r\n  const [activePage, setActivePage] = useState('');\r\n\r\n  const handleSidebar = (title: string) => {\r\n    closeSidebar();\r\n    setActivePage(title);\r\n    dispatch(setPageTitle(title));\r\n  };\r\n\r\n  useEffect(() => {\r\n    vayuSidebarItems?.find((item) => {\r\n      if (item.path === location.pathname) setActivePage(item.name);\r\n    });\r\n\r\n    // Extract base path (first two segments)\r\n    const basePath = '/' + location.pathname.split('/')[1];\r\n\r\n    const activeItem = vayuSidebarItems.find((item) => {\r\n      return (\r\n        item.path === basePath ||\r\n        (item.path.endsWith('s') && item.path.slice(0, -1) === basePath)\r\n      );\r\n    });\r\n\r\n    if (activeItem) {\r\n      setActivePage(activeItem.name);\r\n    } else {\r\n      console.log('No active item found!');\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <MenuWrapper\r\n        sx={{\r\n          overflowX: 'hidden'\r\n        }}\r\n      >\r\n        {/* {activeProject === projects?.NMS && (\r\n          <SubMenuWrapper>\r\n            <List component=\"div\">\r\n              <ListItem component=\"div\">\r\n                <Button\r\n                  disableRipple\r\n                  component={RouterLink}\r\n                  onClick={() => sidebarHandler()}\r\n                  to=\"/meters\"\r\n                  startIcon={<NMSBackIcon />}\r\n                >\r\n                  Back to EHES\r\n                </Button>\r\n              </ListItem>\r\n            </List>\r\n          </SubMenuWrapper>\r\n        )} */}\r\n        <SubMenuWrapper>\r\n          <List component=\"div\">\r\n            {vayuSidebarItems?.map((item) => {\r\n              if (\r\n                item.key === 'routings' &&\r\n                !hasPermission(\r\n                  moduleListByRole,\r\n                  permission?.Routings_Current_Routings_Search_Download\r\n                )\r\n              ) {\r\n                return null;\r\n              } else if (item.key === 'reports') {\r\n                if (\r\n                  !moduleListByRole?.moduleListByRole?.some(\r\n                    (i) => i.screen.toLowerCase() === 'reports'\r\n                  )\r\n                ) {\r\n                  return null;\r\n                }\r\n              } else if (\r\n                item.key === 'RTC-Details' &&\r\n                !hasPermission(\r\n                  moduleListByRole,\r\n                  permission?.RTC_Detail_Current_RTC\r\n                )\r\n              ) {\r\n                return null;\r\n              }\r\n              return (\r\n                <ListItem component=\"div\" key={item.name}>\r\n                  <Button\r\n                    disableRipple\r\n                    component={RouterLink}\r\n                    className={activePage === item.name ? 'active' : ''}\r\n                    onClick={() => handleSidebar(item.name)}\r\n                    to={item.path}\r\n                    startIcon={\r\n                      activePage === item.name ? (\r\n                        <item.activeIcon />\r\n                      ) : (\r\n                        <item.icon />\r\n                      )\r\n                    }\r\n                  >\r\n                    {item.name}\r\n                  </Button>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </SubMenuWrapper>\r\n      </MenuWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Scrollbar as RSCScrollbar } from 'react-scrollbars-custom';\r\nimport { Box, useTheme } from '@mui/material';\r\n\r\ninterface ScrollbarProps {\r\n  className?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst Scrollbar: FC<ScrollbarProps> = ({ className, children }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <RSCScrollbar\r\n      className={className}\r\n      style={{ height: '100%', width: '100%' }}\r\n      trackYProps={{\r\n        renderer: ({ elementRef, style, ...restProps }) => (\r\n          <div\r\n            ref={elementRef}\r\n            style={{\r\n              ...style,\r\n              position: 'absolute',\r\n              width: '6px',\r\n              right: '2px',\r\n              top: 0,\r\n              bottom: 0,\r\n              borderRadius: theme.general.borderRadiusLg,\r\n              backgroundColor: theme.colors.alpha.black[10],\r\n              transition: theme.transitions.create(['background']),\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              (e.currentTarget as HTMLDivElement).style.backgroundColor =\r\n                theme.colors.alpha.black[30];\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              (e.currentTarget as HTMLDivElement).style.backgroundColor =\r\n                theme.colors.alpha.black[10];\r\n            }}\r\n            {...restProps}\r\n          />\r\n        ),\r\n      }}\r\n    >\r\n      {children}\r\n    </RSCScrollbar>\r\n  );\r\n};\r\n\r\nexport default Scrollbar;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { FC, ReactNode } from 'react';\r\nimport { alpha, lighten, useMediaQuery } from '@mui/material';\r\nimport { Outlet, useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\n// import Footer from 'src/components/Footer';\r\n\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Logo from 'src/components/LogoSign';\r\nimport { ChevronLeftIcon, ChevronRightIcon, LogoIcon } from 'src/assets/svg/svg';\r\nimport SidebarMenu from './Sidebar/SidebarMenu';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport { getModuleListByRoleAction, logOutAction } from 'src/api/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getModules } from 'src/api/AccessManagement';\r\nimport { createPermissionEnum } from 'src/utils/permission';\r\nimport { setPermission } from 'src/reducers/AccessManagement';\r\nimport { clearLocalStorage, getLocalStorage } from 'src/utils/helper';\r\nimport CustomBackdrop from 'src/components/CustomBackdrop/CustomBackdrop';\r\nimport { getMeterProjectList } from 'src/api/common';\r\n\r\nconst drawerWidth = 290;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen\r\n  }),\r\n  overflowX: 'hidden'\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: `calc(${theme.spacing(8)} + 1px)`\r\n  }\r\n});\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open'\r\n})(({ theme }) => ({\r\n  zIndex: 300,\r\n  boxShadow: 'none',\r\n  borderWidth: '0 0 1px 0', // Top, Right, Bottom, Left\r\n  borderStyle: 'solid',\r\n  borderColor: 'black', //\r\n  background: theme.colors.alpha.white[100],\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  }),\r\n  variants: [\r\n    {\r\n      //@ts-ignore\r\n      props: ({ open }) => open,\r\n      style: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen\r\n        })\r\n      }\r\n    }\r\n  ]\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== 'open'\r\n})(({ theme }) => ({\r\n  zIndex: 200,\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n\r\n  boxSizing: 'border-box',\r\n  variants: [\r\n    {\r\n      props: ({ open }) => open,\r\n      style: {\r\n        ...openedMixin(theme),\r\n        '& .MuiDrawer-paper': openedMixin(theme),\r\n        '& .MuiPaper-root': {\r\n          borderRight: `1px solid ${theme.colors.alpha.black[100]} `,\r\n          overflowX: 'hidden'\r\n        }\r\n      }\r\n    },\r\n    {\r\n      props: ({ open }) => !open,\r\n      style: {\r\n        ...closedMixin(theme),\r\n        '& .MuiDrawer-paper': closedMixin(theme),\r\n        '& .MuiPaper-root': {\r\n          borderRight: `1px solid ${theme.colors.alpha.black[100]} `,\r\n          overflowX: 'hidden'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}));\r\n\r\ninterface SidebarLayoutProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst SidebarLayout: FC<SidebarLayoutProps> = () => {\r\n  const IDLE_TIMEOUT = 30 * 60 * 1000; // 30 minutes of inactivity timeout\r\n\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { permission } = useSelector((state: any) => state.accessManagement);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const isLargeScreen = useMediaQuery(theme.breakpoints.up('md'));\r\n  const [roleList, setRoleList] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isLargeScreen) {\r\n      setOpen(true);\r\n    } else if (isLargeScreen && open) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n  }, [isLargeScreen]);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getModules())\r\n  //     .then((res) => {\r\n  //       let permissionList = createPermissionEnum(res?.moduleList);\r\n  //       dispatch(setPermission(permissionList));\r\n  //     })\r\n  //     .catch((err) => {\r\n  //     });\r\n  // }, []);\r\n\r\n  const idleTimeoutRef = useRef<NodeJS.Timeout | null>(null); // Reference to track the timeout\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logOutAction({ userName: getLocalStorage('userName') }))\r\n      .then((res) => {\r\n        clearLocalStorage();\r\n        navigate('/login');\r\n      })\r\n      .catch((err) => {\r\n        console.log('err', err);\r\n      });\r\n  };\r\n\r\n  const resetIdleTimeout = () => {\r\n    if (idleTimeoutRef.current) {\r\n      clearTimeout(idleTimeoutRef.current);\r\n    }\r\n    idleTimeoutRef.current = setTimeout(logoutUser, IDLE_TIMEOUT);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const events = ['mousemove', 'keydown', 'click', 'touchstart'];\r\n\r\n    events.forEach((event) => window.addEventListener(event, resetIdleTimeout));\r\n\r\n    resetIdleTimeout();\r\n\r\n    return () => {\r\n      if (idleTimeoutRef.current) {\r\n        clearTimeout(idleTimeoutRef.current);\r\n      }\r\n      events.forEach((event) =>\r\n        window.removeEventListener(event, resetIdleTimeout)\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchModuleList = async () => {\r\n  //     try {\r\n  //       await dispatch(getMeterProjectList());\r\n  //       const res = await dispatch(getModuleListByRoleAction());\r\n\r\n  //       if (res.roleId) {\r\n  //         setRoleList(true);\r\n  //         setLoading(false);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching module list:', error);\r\n  //       setRoleList(false);\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n  //   setLoading(true);\r\n  //   fetchModuleList();\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <CustomBackdrop open={loading} />}\r\n        <Box sx={{ display: 'flex', minHeight: '100vh' }}>\r\n          {/* @ts-ignore */}\r\n          <AppBar open={open} position=\"fixed\">\r\n            <Box sx={{ display: 'flex',  height: '75px'}}>\r\n              <Box\r\n                className=\"cursor-pointer\"\r\n                sx={{\r\n                  display: !open ? 'flex' : 'none',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  paddingTop: '9px',\r\n                  width: 72,\r\n                  height: '75px'\r\n                }}\r\n              >\r\n                <Logo open={!open} />\r\n              </Box>\r\n              <Divider\r\n                sx={{ background: 'black', display: !open ? 'block' : 'none' }}\r\n                orientation=\"vertical\"\r\n              />\r\n              <Box sx={{ flexGrow: '1' }}>\r\n                <Header />\r\n              </Box>\r\n            </Box>\r\n          </AppBar>\r\n          {/* Mobile Drawer */}\r\n          {/* <Drawer\r\n          variant=\"temporary\"\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          ModalProps={{\r\n            keepMounted: true\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': {\r\n              boxSizing: 'border-box',\r\n              width: drawerWidth\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            className=\"cursor-pointer\"\r\n            sx={{\r\n              padding: theme.spacing(1.7, 0),\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderBottom: '1px solid black'\r\n            }}\r\n          >\r\n            <Logo open={!open} />\r\n          </Box>\r\n          <Scrollbar>\r\n            <SidebarMenu />\r\n          </Scrollbar>\r\n          <Divider sx={{ background: 'black' }} />\r\n          <ListItem>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {!open ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </ListItem>\r\n        </Drawer> */}\r\n        \r\n          {/* Desktop Drawer */}\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            /* @ts-ignore */\r\n            component=\"aside\"\r\n            open={open}\r\n            sx={{\r\n              display: { xs: 'block'},\r\n              width: open ? drawerWidth : 73,\r\n              '& .MuiDrawer-paper': {\r\n                width: open ? drawerWidth : 73\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              className=\"cursor-pointer\"\r\n              sx={{\r\n                padding: theme.spacing(1.7, 0),\r\n                display: 'flex',\r\n                justifyContent: 'left',\r\n                alignItems: 'center',\r\n                paddingLeft: '25px',\r\n                borderBottom: '1px solid black'\r\n              }}\r\n            >\r\n              <Logo open={!open} />\r\n            </Box> \r\n            <Scrollbar>\r\n              <SidebarMenu />\r\n            </Scrollbar>\r\n            <Divider sx={{ background: 'black' }} />\r\n            <ListItem >\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {!open ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n              </IconButton>\r\n            </ListItem>\r\n          </Drawer>\r\n          \r\n          {/* Body Content */}\r\n          <Box\r\n            component=\"main\"\r\n            overflow=\"auto\"\r\n            sx={{\r\n              flexGrow: 1,\r\n              pb: '60px',\r\n              pl: '30px',\r\n              pr: '30px',\r\n              background: theme.colors.alpha.trueWhite[100]\r\n            }}\r\n          >\r\n            <Toolbar\r\n              sx={{\r\n                height: 36\r\n              }}\r\n            />\r\n            <Outlet />\r\n          </Box>\r\n\r\n          {/* //Footer */}\r\n          {/* <Box\r\n            component=\"footer\"\r\n            sx={{\r\n              position: 'fixed',\r\n              bottom: 0,\r\n              right: 0,\r\n              textAlign: 'center',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: 0,\r\n              zIndex:'999999',\r\n              justifyContent: 'center',\r\n              width: open\r\n                ? `calc(100% - ${drawerWidth}px)`\r\n                : 'calc(100% - 73px)',\r\n              transition: 'width 0.3s'\r\n            }}\r\n          >\r\n            <Footer />\r\n          </Box> */}\r\n        </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarLayout;\r\n","// import axios from 'axios';\r\n// import { useDispatch } from 'react-redux';\r\n// import {\r\n//   clearLocalStorage,\r\n//   getErrorMessage,\r\n//   getLocalStorage,\r\n//   setLocalStorage\r\n// } from 'src/utils/helper';\r\n// import { logOutAction } from './auth';\r\n// import { store } from 'src/store';\r\n// import { showToast } from 'src/customHooks/ToastEmitter';\r\n\r\n// export const API_URLS = {\r\n//   baseURL: process.env.REACT_APP_BASE_URL_MAIN,\r\n//   baseURLCmd: process.env.REACT_APP_BASE_URL_COMMANDS,\r\n//   baseURLNMS: process.env.REACT_APP_BASE_URL_MAIN_NMS\r\n// };\r\n\r\n// export const instance = (baseURL) => {\r\n//   return axios.create({\r\n//     baseURL\r\n//   });\r\n// };\r\n\r\n// export const api = instance(API_URLS.baseURL);\r\n// export const api1 = instance(API_URLS.baseURLCmd);\r\n// export const instance = instance(API_URLS.baseURLNMS);\r\n\r\n// let isRefreshing = false;\r\n// let refreshSubscribers = [];\r\n// const handleConfig = (config: any) => {\r\n//   const token = getLocalStorage('accessToken');\r\n//   if (token) {\r\n//     config.headers['Authorization'] = `Bearer ${token}`;\r\n//   }\r\n//   if (config.data instanceof FormData) {\r\n//     config.headers['Content-Type'] = 'multipart/form-data';\r\n//   } else {\r\n//     config.headers['Content-Type'] = 'application/json';\r\n//   }\r\n//   return config;\r\n// };\r\n\r\n// const logoutUser = () => {\r\n//   store.dispatch(logOutAction({ userName: getLocalStorage('userName') }));\r\n//   clearLocalStorage();\r\n//   window.location.replace('/login');\r\n// };\r\n\r\n// const setupInterceptors = (axiosInstance) => {\r\n//   axiosInstance.interceptors.request.use(\r\n//     (config) => handleConfig(config),\r\n//     (error) => Promise.reject(error)\r\n//   );\r\n\r\n//   axiosInstance.interceptors.response.use(\r\n//     (response) => {\r\n//       if (response?.data?.accessToken) {\r\n//         let projectList = [];\r\n//         if (response?.data?.project) {\r\n//           projectList = response?.data?.project.split(',');\r\n//         }\r\n\r\n//         setLocalStorage('accessToken', response.data.accessToken);\r\n//         setLocalStorage('isAuthenticated', response.data.isAuthenticated);\r\n//         projectList.length > 0 && setLocalStorage('project', projectList[0]);\r\n//         projectList.length > 0 &&\r\n//           setLocalStorage('projectList', response?.data?.project);\r\n//       }\r\n//       if (response?.data?.message === 'concurrent session') {\r\n//         let projectList = [];\r\n//         if (response?.data?.project) {\r\n//           projectList = response?.data?.project.split(',');\r\n//         }\r\n//         setLocalStorage('isAuthenticated', response.data.isAuthenticated);\r\n//         projectList.length > 0 && setLocalStorage('project', projectList[0]);\r\n//         projectList.length > 0 &&\r\n//           setLocalStorage('projectList', response?.data?.project);\r\n//       }\r\n\r\n//       return response;\r\n//     },\r\n//     (error) => {\r\n//       if (error?.code === 'ERR_NETWORK') {\r\n//         showToast(error?.message || 'Network error occurred', {\r\n//           appearance: 'error'\r\n//         });\r\n//         // return Promise.reject(error?.response || 'Something went wrong!');\r\n//         return;\r\n//       }\r\n\r\n//       const errorData = error?.response?.data;\r\n//       if (typeof errorData === 'string' && errorData.includes('expired')) {\r\n//         // logoutUser();\r\n//         return;\r\n//       }\r\n\r\n//       let login;\r\n//       const url = error?.response?.config?.url;\r\n//       if (url) {\r\n//         const splitUrl = url?.split('/');\r\n//         login = splitUrl[splitUrl?.length - 1].toLowerCase();\r\n//       }\r\n//       // if (login !== 'login') {\r\n//       //   const originalRequest = error.config;\r\n//       //   if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       //     if (isRefreshing) {\r\n//       //       return new Promise((resolve) => {\r\n//       //         refreshSubscribers.push((token) => {\r\n//       //           originalRequest.headers['Authorization'] = `Bearer ${token}`;\r\n//       //           resolve(axios(originalRequest));\r\n//       //         });\r\n//       //       });\r\n//       //     }\r\n//       //     originalRequest._retry = true;\r\n//       //     isRefreshing = true;\r\n//       //     return new Promise((resolve, reject) => {\r\n//       //       const access_token = getLocalStorage('accessToken');\r\n//       //       axios\r\n//       //         .post(`${API_URLS.baseURL}/Authentication/Login`, {\r\n//       //           grantType: 'refresh_token',\r\n//       //           refreshToken: access_token\r\n//       //         })\r\n//       //         .then((response) => {\r\n//       //           const res = response.data;\r\n//       //           setLocalStorage('accessToken', res.accessToken);\r\n//       //           setLocalStorage('isAuthenticated', res.isAuthenticated);\r\n//       //           originalRequest.headers[\r\n//       //             'Authorization'\r\n//       //           ] = `Bearer ${res.accessToken}`;\r\n//       //           resolve(axios(originalRequest));\r\n//       //           refreshSubscribers.forEach((callback) =>\r\n//       //             callback(res.accessToken)\r\n//       //           );\r\n//       //         })\r\n//       //         .catch((err) => {\r\n//       //           // logoutUser();\r\n//       //           // clearLocalStorage();\r\n//       //           // window.location.replace('/login');\r\n//       //           reject(err);\r\n//       //         })\r\n//       //         .finally(() => {\r\n//       //           isRefreshing = false;\r\n//       //           refreshSubscribers = [];\r\n//       //         });\r\n//       //     });\r\n//       //   }\r\n//       // }\r\n\r\n//       if (error?.response?.status === 500 || error?.response?.status === 502) {\r\n//         const errorMessage = getErrorMessage(error?.response?.data?.errorCode);\r\n//         showToast(errorMessage, { appearance: 'error' });\r\n//       } else if (error?.response?.status === 404) {\r\n//         showToast('Something went wrong!', { appearance: 'error' });\r\n//       } else {\r\n//         return Promise.reject(error?.response || 'Something went wrong!');\r\n//       }\r\n//     }\r\n//   );\r\n// };\r\n\r\n// setupInterceptors(api);\r\n// setupInterceptors(api1);\r\n// setupInterceptors(instance);\r\n\r\n// export default instance;\r\n\r\nimport axios from 'axios';\r\nimport { getErrorMessage, getLocalStorage } from 'src/utils/helper';\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL_MAIN_VAYU;\r\n\r\nexport const instance = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request Interceptor\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getLocalStorage('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response Interceptor with toast handling\r\nexport const setupInterceptors = (\r\n  addToast: (message: string, options: any) => void\r\n) => {\r\n  instance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response) {\r\n        const errorMessage = getErrorMessage(error?.response?.data?.errorCode);\r\n        addToast(errorMessage, { appearance: 'error' });\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default instance;\r\n","\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\ninterface CustomBackdropProps {\r\n  open: boolean;\r\n}\r\n\r\nexport default function CustomBackdrop({ open }: CustomBackdropProps) {\r\n  return (\r\n    <div>\r\n      <Backdrop\r\n        sx={(theme) => ({\r\n          color: '#fff',\r\n          zIndex: '999999',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.6)'\r\n        })}\r\n        open={open}\r\n      >\r\n        <CircularProgress size={64} />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {instance} from '../index';\r\nimport {\r\n  setActiveSession,\r\n  setLogin,\r\n  setModuleListByRole\r\n} from '../../reducers/auth/index';\r\n\r\nexport const loginAction: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/Authentication/Login`, apiData);\r\n      resolve(res?.data);\r\n      dispatch(setLogin(res?.data));\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\nexport const handleActiveSessionAction: any =\r\n  (apiData) => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await instance.post(\r\n          `/Authentication/HandleActiveSession`,\r\n          apiData\r\n        );\r\n        resolve(res?.data);\r\n        dispatch(setActiveSession(res?.data));\r\n      } catch (error) {\r\n        //@ts-ignore\r\n        console.log('err', error.response);\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const getModuleListByRoleAction: any =\r\n  () => async (dispatch: any) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await instance.get(`/User/GetModuleListByRole`);\r\n        resolve(res?.data);\r\n        dispatch(setModuleListByRole(res?.data));\r\n      } catch (error) {\r\n        //@ts-ignore\r\n        console.log('err', error.response);\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\nexport const logOutAction: any = (apiData) => async (dispatch: any) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await instance.post(`/Authentication/LogOut`, apiData); \r\n      resolve(res?.data);\r\n    } catch (error) {\r\n      //@ts-ignore\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n"],"names":["styled","_ref","className","props","_jsx","Tooltip","classes","popper","_ref2","theme","tooltipClasses","tooltip","backgroundColor","colors","alpha","trueWhite","color","palette","getContrastText","fontSize","typography","pxToRem","fontWeight","borderRadius","general","borderRadiusSm","boxShadow","arrow","_ref3","open","notClick","useTheme","dispatch","useDispatch","navigate","useNavigate","Box","onClick","handleNavigation","setPageTitle","sx","paddingTop","children","LogoIcon","KimbalLogoIcon","Select","border","height","width","textAlign","paddingLeft","ProjectSelect","padding","CustomSelect","CustomMenuItem","_ref4","MenuItem","_ref5","borderBottom","black","borderLeft","borderRight","margin","borderTop","grey","nmsPrimary","ProjectMenuItem","_ref6","primaryAlt","primary","CustomSelectIcon","NMSDownIcon","shouldForwardProp","prop","_ref7","transition","transform","pointerEvents","marginTop","_ref8","Icon","NMSArrowUpIcon","NMSArrowDownIcon","StyledIcon","_ref9","ProjectSelectIcon","_ref10","FormControlUpIcon","style","marginRight","FormControlDownIcon","CustomSelectInputBox","_ref11","_ref12","NotificationItem","status","message","time","retry","isError","_jsxs","display","justifyContent","alignItems","p","bgcolor","mb","ListItemIcon","NMSNotificationErrorIcon","NMSNotificationTickIcon","Typography","Stack","direction","spacing","FiberManualRecordIcon","Button","variant","endIcon","ReplayIcon","textTransform","NMSNotificationRightIcon","DrawerWrapper","Drawer","breakpoints","up","toggleDrawer","showMore","setShowMore","useState","downloadList","useSelector","state","meters","useEffect","isRecentDate","date","today","moment","startOf","yesterday","subtract","momentDate","isSame","notifications","sortedDates","groupedData","_Object$keys","Object","keys","sort","a","b","_moment2","diff","getSortedDates","reduce","acc","notification","_moment","_moment$startOf","_acc$date","createdOn","format","push","filter","_Fragment","onClose","anchor","ml","IconButton","CloseIcon","mt","useRef","setOpen","React","isAnyUnwatched","setIsAnyUnwatched","unwatchedItems","setUnwatchedItems","unwatchedItemsArray","setUnwatchedItemsArray","length","newArray","map","item","createdBy","getLocalStorage","headerRequired","fileFormat","requestId","Project","anchorEl","setAnchorEl","openAccountsMenu","Boolean","handleClose","apiData","async","Promise","resolve","reject","res","instance","post","data","error","sendDownloadRequest","downloadRequestModelList","then","_res$data","queryString","createQueryString","get","_res$data2","meterDownloadList","setDownloadDetails","console","Error","getDownloadDetails","StartDate","startWeekdays","EndDate","currentDay","catch","err","log","prevOpen","title","component","position","NotificationIcon","UnreadNotificationIcon","event","currentTarget","NMSUserIcon","Menu","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuListProps","px","py","handleLogout","toast","success","NotificationDrawer","HeaderNotifications","_projectList$split","permission","accessManagement","moduleListByRole","auth","projectList","selectedProject","setSelectedProject","sidebarToggle","toggleSidebar","useContext","SidebarContext","pageTitle","common","subTitle","subTitle1","isMobile","useMediaQuery","down","typographyStyles","marginLeft","xs","md","lg","xl","setLocalStorage","flexDirection","flex","profile","profilesEnum","ESWPUSHDATA","profilesTitleEnum","INSTANTPROFILE","BLOCKLOADPROFILE","DAILYLOADPROFILE","EVENTLOG","RAWDATA","BILLINGPROFILE","HeaderButtons","hasPermission","Meters_Filters_Project_SAT_Advanced","stopPropagation","FormControl","fullWidth","value","onChange","target","window","location","reload","IconComponent","defaultValue","displayEmpty","MenuProps","maxHeight","overflowY","renderValue","selected","split","project","vayuSidebarItems","name","path","icon","MetersIcon","activeIcon","MetersIconActive","key","CommandsIcon","CommandsIconActive","VayuUserIcon","VayuUserActiveIcon","VayuUserGroupsIcon","VayuUserGroupsActiveIcon","VayuDownloadDataIcon","VayuDownloadDataActiveIcon","VayuProfileIcon","VayuProfileActiveIcon","MenuWrapper","darken","SubMenuWrapper","main","contrastText","transitions","create","nmsPrimaryAlt","SidebarMenu","useLocation","closeSidebar","activePage","setActivePage","find","pathname","basePath","activeItem","endsWith","slice","overflowX","List","Routings_Current_Routings_Search_Download","_moduleListByRole$mod","some","i","screen","toLowerCase","RTC_Detail_Current_RTC","ListItem","disableRipple","RouterLink","handleSidebar","to","startIcon","RSCScrollbar","trackYProps","renderer","elementRef","restProps","ref","right","top","bottom","borderRadiusLg","onMouseEnter","e","onMouseLeave","drawerWidth","openedMixin","easing","sharp","duration","enteringScreen","closedMixin","leavingScreen","AppBar","MuiAppBar","zIndex","borderWidth","borderStyle","borderColor","background","white","variants","MuiDrawer","flexShrink","whiteSpace","boxSizing","SidebarLayout","loading","setLoading","isLargeScreen","roleList","setRoleList","idleTimeoutRef","logoutUser","logOutAction","userName","clearLocalStorage","resetIdleTimeout","current","clearTimeout","setTimeout","events","forEach","addEventListener","removeEventListener","CustomBackdrop","minHeight","Logo","Divider","orientation","flexGrow","Header","Scrollbar","handleDrawerClose","ChevronLeftIcon","ChevronRightIcon","overflow","pb","pl","pr","Toolbar","Outlet","baseURL","process","REACT_APP_BASE_URL_MAIN_VAYU","axios","headers","interceptors","request","use","config","token","Backdrop","CircularProgress","size","loginAction","setLogin","handleActiveSessionAction","setActiveSession","response"],"sourceRoot":""}