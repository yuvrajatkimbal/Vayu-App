{"version":3,"file":"static/js/572.adee71a7.chunk.js","mappings":"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","sources":["components/Table/Table.tsx","../node_modules/@mui/icons-material/GroupAdd.js","../node_modules/@mui/icons-material/FileDownload.js","components/DialogBox/CreateUserGroupDialog.tsx","views/pages/FieldUserGroups/index.tsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { Collapse, TablePagination } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Checkbox,\r\n  IconButton,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  TableSortLabel,\r\n  Pagination,\r\n  Select,\r\n  MenuItem as MuiMenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  InputAdornment\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst CustomTable = ({\r\n  rows,\r\n  columns,\r\n  handleStatusChange = (id, value) => {}\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const [selected, setSelected] = useState([]);\r\n  const [expandedRow, setExpandedRow] = useState(null);\r\n\r\n  const [sortField, setSortField] = useState<string | null>(null);\r\n  const [sortDirection, setSortDirection] = useState<\"asc\" | \"desc\">(\"asc\");\r\n\r\n  // Filters state\r\n  const [filters, setFilters] = useState<{\r\n    [key: string]: { value: string; type: string };\r\n  }>({});\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [currentColumn, setCurrentColumn] = useState<string | null>(null);\r\n  const [filterValue, setFilterValue] = useState<string>(\"\");\r\n  const [filterType, setFilterType] = useState<string>(\"contains\");\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const handleSelect = (id: string) => {\r\n    setSelected((prev) =>\r\n      prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleToggleRow = (id: string) => {\r\n    setExpandedRow(expandedRow === id ? null : id);\r\n  };\r\n\r\n  // Handle applying the filter to the column\r\n  const applyFilter = () => {\r\n    if (currentColumn) {\r\n      setFilters((prev) => ({\r\n        ...prev,\r\n        [currentColumn]: { value: filterValue, type: filterType }\r\n      }));\r\n      setAnchorEl(null); // Close the filter menu\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (field: string, value: string) => {\r\n    setFilters((prev) => ({\r\n      ...prev,\r\n      [field]: { value, type: prev[field]?.type || \"contains\" }\r\n    }));\r\n  };\r\n\r\n  const filteredRows = useMemo(() => {\r\n    let filtered = [...rows];\r\n\r\n    // Apply filters\r\n    Object.entries(filters).forEach(([field, value]) => {\r\n      filtered = filtered.filter((row) =>\r\n        row[field]?.toString().toLowerCase().includes(value.value.toLowerCase())\r\n      );\r\n    });\r\n\r\n    // Apply sorting\r\n    if (sortField) {\r\n      filtered.sort((a, b) => {\r\n        const aVal = a[sortField];\r\n        const bVal = b[sortField];\r\n\r\n        if (aVal < bVal) return sortDirection === \"asc\" ? -1 : 1;\r\n        if (aVal > bVal) return sortDirection === \"asc\" ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }, [rows, sortField, sortDirection, filters]);\r\n\r\n  const handleFilterTypeChange = (event) => {\r\n    setFilterType(event.target.value as string);\r\n  };\r\n\r\n  const sortedRows = useMemo(() => {\r\n    if (!sortField) return filteredRows;\r\n    return [...filteredRows].sort((a, b) => {\r\n      const aVal = a[sortField as string];\r\n      const bVal = b[sortField as string];\r\n      if (aVal < bVal) return sortDirection === \"asc\" ? -1 : 1;\r\n      if (aVal > bVal) return sortDirection === \"asc\" ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }, [filteredRows, sortField, sortDirection]);\r\n\r\n  // Pagination state\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  // Handle page change\r\n  const handleChangePage = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Handle rows per page change\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0); // Reset to first page when rows per page change\r\n  };\r\n\r\n  // Pagination logic\r\n  const paginatedRows = rows.slice(\r\n    currentPage * pageSize,\r\n    (currentPage + 1) * pageSize\r\n  );\r\n\r\n  const handleSort = (field: string) => {\r\n    if (sortField === field) {\r\n      setSortDirection((prev) => (prev === \"asc\" ? \"desc\" : \"asc\"));\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection(\"asc\");\r\n    }\r\n  };\r\n\r\n  // Handle page size change\r\n  const handlePageSizeChange = (e: any) => {\r\n    setPageSize(parseInt(e.target.value, 10));\r\n    setCurrentPage(0); // Reset to the first page\r\n  };\r\n\r\n  // Handle page change\r\n  const handlePageChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setCurrentPage(value - 1); // Pagination starts from 1, but we need to store 0-based index\r\n  };\r\n\r\n  const handleClickMenu = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    column: string\r\n  ) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCurrentColumn(column);\r\n    const currentFilter = filters[column];\r\n    setFilterValue(currentFilter ? currentFilter.value : \"\");\r\n    setFilterType(currentFilter ? currentFilter.type : \"contains\");\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ position: \"relative\" }}>\r\n        {/* Blurred Edges */}\r\n        {/* <Box\r\n  sx={{\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: 30,\r\n    height: \"100%\",\r\n    zIndex: 2,\r\n    pointerEvents: \"none\",\r\n    background: \"linear-gradient(to right, #FFFFFFCC, #FFFFFF00)\"\r\n  }}\r\n/>\r\n<Box\r\n  sx={{\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    width: 30,\r\n    height: \"100%\",\r\n    zIndex: 2,\r\n    pointerEvents: \"none\",\r\n    background: \"linear-gradient(to left, #FFFFFFCC, #FFFFFF00)\"\r\n  }}\r\n/> */}\r\n\r\n        <TableContainer\r\n          component={Paper}\r\n          elevation={3}\r\n          sx={{\r\n            maxHeight: 500,\r\n            overflow: \"auto\",\r\n            borderRadius: 0,\r\n            border: \"1px solid black\",\r\n            position: \"relative\",\r\n            \"&::-webkit-scrollbar\": {\r\n              width: \"8px\",\r\n              height: \"8px\"\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n              backgroundColor: \"#bbb\",\r\n              borderRadius: \"4px\"\r\n            }\r\n          }}\r\n        >\r\n          <Table stickyHeader sx={{ minWidth: 1000 }}>\r\n            <TableHead>\r\n              <TableRow\r\n                sx={{\r\n                  backgroundColor: \"#e0f2fe\",\r\n                  boxShadow: \"inset 0 -1px 0 rgba(0, 0, 0, 0.1)\"\r\n                }}\r\n              >\r\n                <TableCell sx={{ backgroundColor: \"#e0f2fe\" }} />\r\n                <TableCell\r\n                  padding=\"checkbox\"\r\n                  sx={{\r\n                    backgroundColor: \"#e0f2fe\",\r\n                    borderBottom: \"1px solid #bae6fd\"\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={selected.length === rows.length}\r\n                    indeterminate={\r\n                      selected.length > 0 && selected.length < rows.length\r\n                    }\r\n                    onChange={(e) =>\r\n                      setSelected(e.target.checked ? rows.map((r) => r.id) : [])\r\n                    }\r\n                    sx={{\r\n                      color: \"#0284c7\",\r\n                      \"&.Mui-checked\": {\r\n                        color: \"#0284c7\"\r\n                      },\r\n                      \"&.MuiCheckbox-indeterminate\": {\r\n                        color: \"#0284c7\"\r\n                      }\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n\r\n                {columns.map((col) =>\r\n                  col.field === \"id\" ? null : (\r\n                    <TableCell\r\n                      key={col.field}\r\n                      sx={{\r\n                        fontWeight: 700,\r\n                        textTransform: \"capitalize\",\r\n                        backgroundColor: \"#e0f2fe\",\r\n                        color: \"#0f172a\",\r\n                        fontSize: \"0.9rem\",\r\n                        letterSpacing: \"0.02em\",\r\n                        borderBottom: \"1px solid #bae6fd\"\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <TableSortLabel\r\n                          active={sortField === col.field}\r\n                          direction={\r\n                            sortField === col.field ? sortDirection : \"asc\"\r\n                          }\r\n                          onClick={() => handleSort(col.field)}\r\n                          sx={{\r\n                            \"& .MuiTableSortLabel-icon\": {\r\n                              color: \"#38bdf8\"\r\n                            },\r\n                            \"&.Mui-active .MuiTableSortLabel-icon\": {\r\n                              color: \"#0284c7\"\r\n                            }\r\n                          }}\r\n                        >\r\n                          {col.headerName}\r\n                        </TableSortLabel>\r\n\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={(e) => handleClickMenu(e, col.field)}\r\n                          sx={{\r\n                            ml: 1,\r\n                            color: \"#0284c7\",\r\n                            \"&:hover\": {\r\n                              color: \"#0369a1\"\r\n                            }\r\n                          }}\r\n                        >\r\n                          <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </TableCell>\r\n                  )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {paginatedRows.map((row, index) => (\r\n                <React.Fragment key={row.id}>\r\n                  <TableRow\r\n                    hover\r\n                    key={row.id}\r\n                    sx={{\r\n                      backgroundColor: index % 2 === 0 ? \"#ffffff\" : \"#f6f8fa\",\r\n                      transition: \"background-color 0.3s\"\r\n                    }}\r\n                  >\r\n                    <TableCell>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() =>\r\n                          setExpandedRow(expandedRow === row.id ? null : row.id)\r\n                        }\r\n                      >\r\n                        {expandedRow === row.id ? <RemoveIcon /> : <AddIcon />}\r\n                      </IconButton>\r\n                    </TableCell>\r\n\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selected.includes(row.id)}\r\n                        onChange={() => handleSelect(row.id)}\r\n                      />\r\n                    </TableCell>\r\n\r\n                    {columns.map((col) =>\r\n                      col.field === \"status\" ? (\r\n                        <TableCell key={`${row.id}-status`}>\r\n                          <FormControl size=\"small\" fullWidth>\r\n                            <Select\r\n                              value={row.status ?? \"Inactive\"}\r\n                              onChange={(e) =>\r\n                                handleStatusChange(row.id, e.target.value)\r\n                              }\r\n                              sx={{\r\n                                fontSize: \"0.85rem\",\r\n                                fontWeight: 600,\r\n                                // border: \"1px solid #ccc\",\r\n                                borderRadius: \"0px\",\r\n                                color:\r\n                                  row.status === \"Active\"\r\n                                    ? \"#16a34a\"\r\n                                    : \"#dc2626\",\r\n                                backgroundColor:\r\n                                  row.status === \"Active\"\r\n                                    ? \"#dcfce7\"\r\n                                    : \"#fee2e2\",\r\n                                height: \"32px\"\r\n                              }}\r\n                            >\r\n                              <MenuItem value=\"Active\">Active</MenuItem>\r\n                              <MenuItem value=\"Inactive\">Inactive</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </TableCell>\r\n                      ) : col.field === \"id\" ? null : (\r\n                        <TableCell key={`${row.id}-${col.field}`}>\r\n                          {row[col.field]}\r\n                        </TableCell>\r\n                      )\r\n                    )}\r\n                  </TableRow>\r\n\r\n                  {expandedRow === row.id && (\r\n                    <TableRow>\r\n                      <TableCell colSpan={columns.length + 2} sx={{ p: 0 }}>\r\n                        <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n                          <Box\r\n                            sx={{ p: 2, bgcolor: \"#f0f4f8\", borderRadius: 1 }}\r\n                          >\r\n                            <Typography variant=\"body2\">\r\n                              Nested details for{\" \"}\r\n                              <b>{row.name || `Row ${row.id}`}</b>\r\n                            </Typography>\r\n                          </Box>\r\n                        </Collapse>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Paper\r\n          elevation={2}\r\n          sx={{\r\n            mt: 1,\r\n            px: 1,\r\n            py: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            borderRadius: 0\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Typography variant=\"body2\" sx={{ mr: 2 }}>\r\n              Rows per page:\r\n            </Typography>\r\n            <FormControl size=\"small\">\r\n              <Select\r\n                sx={{\r\n                  borderRadius: 0\r\n                }}\r\n                value={pageSize}\r\n                onChange={handlePageSizeChange}\r\n              >\r\n                {[10, 20, 50, 100].map((val) => (\r\n                  <MenuItem\r\n                    sx={{\r\n                      borderRadius: 0,\r\n                      \"&.MuiMenuItem-root\": {\r\n                        borderRadius: 0 // Additional safeguard for the inner MenuItem class\r\n                      }\r\n                    }}\r\n                    key={val}\r\n                    value={val}\r\n                  >\r\n                    {val}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Pagination\r\n            count={Math.ceil(rows.length / pageSize)}\r\n            page={currentPage + 1}\r\n            onChange={(e, page) => setCurrentPage(page - 1)}\r\n            color=\"primary\"\r\n            shape=\"rounded\"\r\n            showFirstButton\r\n            showLastButton\r\n            siblingCount={0}\r\n            boundaryCount={1}\r\n            sx={{\r\n              \"& .MuiPaginationItem-root\": {\r\n                borderRadius: 0 // <--- 0 border radius for each item\r\n              }\r\n            }}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n\r\n      {/* Filter Menu */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n        PaperProps={{\r\n          style: {\r\n            width: \"300px\",\r\n            padding: \"10px\"\r\n          }\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <FormControl fullWidth>\r\n            <InputLabel sx={{ fontWeight: 600 }}>Filter Type</InputLabel>\r\n            <Select\r\n              value={filterType}\r\n              onChange={handleFilterTypeChange}\r\n              label=\"Filter Type\"\r\n              sx={{\r\n                borderRadius: 0,\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: \"black\"\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: \"#1773be\"\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem value=\"contains\">Contains</MenuItem>\r\n              <MenuItem value=\"startsWith\">Starts With</MenuItem>\r\n              <MenuItem value=\"endsWith\">Ends With</MenuItem>\r\n              <MenuItem value=\"equals\">Equals</MenuItem>\r\n              <MenuItem value=\"greaterThan\">Greater Than</MenuItem>\r\n              <MenuItem value=\"lessThan\">Less Than</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </MenuItem>\r\n\r\n        <MenuItem>\r\n          <TextField\r\n            label=\"Filter Value\"\r\n            variant=\"outlined\"\r\n            value={filterValue}\r\n            onChange={() => {\r\n              handleFilterChange(filterType, filterValue);\r\n            }}\r\n            fullWidth\r\n            sx={{\r\n              mt: 1,\r\n              \"& .MuiInputLabel-root\": {\r\n                fontWeight: 600\r\n              },\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"#ccc\"\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"#1773be\"\r\n              }\r\n            }}\r\n          />\r\n        </MenuItem>\r\n\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={2} mr={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={applyFilter}\r\n            sx={{\r\n              padding: \"4px 16px\",\r\n              borderRadius: \"0px\",\r\n              backgroundColor: \"#1773ba\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#1773ba\"\r\n              }\r\n            }}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Box>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 9V7h-2v2h-2v2h2v2h2v-2h2V9zM8 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm4.51-8.95C13.43 5.11 14 6.49 14 8s-.57 2.89-1.49 3.95C14.47 11.7 16 10.04 16 8s-1.53-3.7-3.49-3.95zm4.02 9.78C17.42 14.66 18 15.7 18 17v3h2v-3c0-1.45-1.59-2.51-3.47-3.17z\"\n}), 'GroupAdd');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'FileDownload');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  useTheme\r\n} from \"@mui/material\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\n\r\nconst statusOptions = [\"Active\", \"Inactive\"];\r\n\r\nexport const CreateUserGroupDialog = ({ open, onClose, onSubmit }: any) => {\r\n  const theme = useTheme();\r\n\r\n  const [formData, setFormData] = useState({\r\n    groupName: \"\",\r\n    status: \"Inactive\"\r\n  });\r\n\r\n  const handleChange = (field: string, value: string) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!formData.groupName.trim()) {\r\n      alert(\"Please enter a group name.\");\r\n      return;\r\n    }\r\n    onSubmit(formData);\r\n    handleClose(); // Close after submit\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({ groupName: \"\", status: \"Inactive\" }); // Reset form on close\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({ groupName: \"\", status: \"Inactive\" });\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          padding: 2,\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[5]\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle\r\n        sx={{\r\n          fontFamily: \"GT Walsheim Pro, sans-serif\",\r\n          fontWeight: 600,\r\n          fontSize: \"1.25rem\",\r\n          textAlign: \"center\",\r\n          pb: 1\r\n        }}\r\n      >\r\n        Create a New Field Group\r\n      </DialogTitle>\r\n\r\n      <DialogContent\r\n        sx={{\r\n          pt: 0,\r\n          minWidth: { xs: 250, md: 500 }\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{ color: \"grey.700\", textAlign: \"center\", mb: 3 }}\r\n        >\r\n          Enter the group name and choose its status below.\r\n        </Typography>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Group Name\"\r\n              placeholder=\"Type a group name\"\r\n              value={formData.groupName}\r\n              onChange={(e) => handleChange(\"groupName\", e.target.value)}\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderRadius: 0,\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: 0,\r\n                  \"& fieldset\": {\r\n                    borderColor: \"#1773be\"\r\n                  },\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: theme.palette.primary.main\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    borderColor: theme.palette.primary.dark\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Status</InputLabel>\r\n              <Select\r\n                value={formData.status}\r\n                onChange={(e) => handleChange(\"status\", e.target.value)}\r\n                label=\"Status\"\r\n                sx={{\r\n                  borderRadius: 0,\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor: \"#1773be\"\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor: theme.palette.primary.main\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor: theme.palette.primary.dark\r\n                  }\r\n                }}\r\n              >\r\n                {statusOptions.map((status) => (\r\n                  <MenuItem key={status} value={status}>\r\n                    {status}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions\r\n        sx={{\r\n          justifyContent: \"space-between\",\r\n          px: 3,\r\n          pb: 3,\r\n          mt: 1,\r\n          gap: 2\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={handleClose}\r\n          variant=\"outlined\"\r\n          color=\"error\"\r\n          startIcon={<CancelIcon />}\r\n          sx={{\r\n            borderRadius: 1,\r\n            textTransform: \"none\",\r\n            px: 3\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          startIcon={<GroupAddIcon />}\r\n          sx={{\r\n            borderRadius: 1,\r\n            textTransform: \"none\",\r\n            px: 4,\r\n            background: `linear-gradient(to right, ${theme.palette.primary.light}, ${theme.palette.primary.main})`,\r\n            color: \"#fff\",\r\n            boxShadow: \"0px 4px 14px rgba(99, 102, 241, 0.3)\",\r\n            \"&:hover\": {\r\n              background: `linear-gradient(to right, ${theme.palette.primary.dark}, ${theme.palette.primary.main})`\r\n            }\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Collapse,\r\n  Paper\r\n} from \"@mui/material\";\r\nimport { DataGrid, GridToolbar, GridPaginationModel } from \"@mui/x-data-grid\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport Table from \"src/components/Table/Table\";\r\nimport CustomTable from \"src/components/Table/Table\";\r\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\r\nimport { FileUploadDialog } from \"src/components/DialogBox/UploadDialog\";\r\nimport { CreateUserDialog } from \"src/components/DialogBox/CreateUserDialog\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport { CreateUserGroupDialog } from \"src/components/DialogBox/CreateUserGroupDialog\";\r\n\r\nexport default function FieldUserGroups() {\r\n  const [expandedRow, setExpandedRow] = useState(null);\r\n  const [paginationModel, setPaginationModel] = useState<GridPaginationModel>({\r\n    page: 1,\r\n    pageSize: 10\r\n  });\r\n\r\n  // const { data, loading } = useDemoData({\r\n  //   dataSet: 'Commodity',\r\n  //   rowLength: 500,\r\n  //   maxColumns: 6,\r\n  // });\r\n\r\n  const [tableRows, setTableRows] = useState([\r\n    {\r\n      id: 1,\r\n      groupCode: \"CR-43A29F\",\r\n      groupName: \"Field Users\",\r\n      totalUsers: 2,\r\n      createdOn: \"23/01/2025 11:52 AM\",\r\n      status: \"Active\"\r\n    },\r\n    {\r\n      id: 2,\r\n      groupCode: \"CR-8C7B2C\",\r\n      groupName: \"Staging\",\r\n      totalUsers: 1,\r\n      createdOn: \"10/01/2025 04:55 PM\",\r\n      status: \"Active\"\r\n    },\r\n    {\r\n      id: 3,\r\n      groupCode: \"CR-952909\",\r\n      groupName: \"Development\",\r\n      totalUsers: 0,\r\n      createdOn: \"21/08/2024 12:11 PM\",\r\n      status: \"Active\"\r\n    },\r\n    {\r\n      id: 4,\r\n      groupCode: \"CR-4A3E0C\",\r\n      groupName: \"TEST GROUP\",\r\n      totalUsers: 2,\r\n      createdOn: \"30/04/2024 12:08 PM\",\r\n      status: \"Active\"\r\n    },\r\n    {\r\n      id: 5,\r\n      groupCode: \"CR-68C50F\",\r\n      groupName: \"Group 1\",\r\n      totalUsers: 21,\r\n      createdOn: \"29/07/2023 02:23 PM\",\r\n      status: \"Active\"\r\n    }\r\n  ]);\r\n\r\n  const columns = [\r\n    { field: \"groupCode\", headerName: \"Group Code\", minWidth: 150 },\r\n    { field: \"groupName\", headerName: \"Group Name\", minWidth: 150 },\r\n    { field: \"totalUsers\", headerName: \"Total Users\", minWidth: 120 },\r\n    { field: \"createdOn\", headerName: \"Created On\", minWidth: 180 },\r\n    { field: \"status\", headerName: \"Status\", minWidth: 100 }\r\n  ];\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(\"\");\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleSubmitUser = (formData: any) => {\r\n    console.log(\"User Data Submitted:\", formData);\r\n    // 🚀 Send formData to backend API here\r\n    // await api.post(\"/users\", formData)\r\n  };\r\n\r\n  const exportCSV = () => {\r\n    const headers = columns.map((c) => c.headerName).join(\",\");\r\n    const data = tableRows\r\n      .map((row) => columns.map((col) => row[col.field]).join(\",\"))\r\n      .join(\"\\n\");\r\n    const blob = new Blob([`${headers}\\n${data}`], {\r\n      type: \"text/csv;charset=utf-8;\"\r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"table_data.csv\");\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={2} mt={6}>\r\n        <Typography variant=\"h6\"></Typography>\r\n        <Box>\r\n          {/* Dialog for file upload */}\r\n          <CreateUserGroupDialog\r\n            open={openDialog}\r\n            onClose={handleCloseDialog}\r\n            onSubmit={handleSubmitUser}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={2}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          startIcon={<FileDownloadIcon />}\r\n          onClick={exportCSV}\r\n        >\r\n          Export CSV\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          startIcon={<GroupAddIcon />}\r\n          onClick={handleOpenDialog}\r\n        >\r\n          Create User Group\r\n        </Button>\r\n      </Box>\r\n      <CustomTable\r\n        rows={tableRows}\r\n        columns={columns}\r\n        handleStatusChange={(id, value) => {\r\n          const updatedRows = tableRows.map((row) =>\r\n            row.id === id ? { ...row, status: value } : row\r\n          );\r\n          setTableRows(updatedRows);\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["_ref","rows","columns","handleStatusChange","id","value","page","setPage","useState","selected","setSelected","expandedRow","setExpandedRow","sortField","setSortField","sortDirection","setSortDirection","filters","setFilters","anchorEl","setAnchorEl","currentColumn","setCurrentColumn","filterValue","setFilterValue","filterType","setFilterType","currentPage","setCurrentPage","pageSize","setPageSize","filteredRows","useMemo","filtered","Object","entries","forEach","_ref2","field","filter","row","_row$field","toString","toLowerCase","includes","sort","a","b","aVal","bVal","rowsPerPage","setRowsPerPage","paginatedRows","slice","_jsxs","Box","children","sx","position","_jsx","TableContainer","component","Paper","elevation","maxHeight","overflow","borderRadius","border","width","height","backgroundColor","Table","stickyHeader","minWidth","TableHead","TableRow","boxShadow","TableCell","padding","borderBottom","Checkbox","checked","length","indeterminate","onChange","e","target","map","r","color","col","fontWeight","textTransform","fontSize","letterSpacing","display","alignItems","justifyContent","TableSortLabel","active","direction","onClick","handleSort","prev","headerName","IconButton","size","handleClickMenu","event","column","currentTarget","currentFilter","type","ml","MoreVertIcon","TableBody","index","React","hover","transition","RemoveIcon","AddIcon","handleSelect","item","_row$status","FormControl","fullWidth","Select","status","MenuItem","colSpan","p","Collapse","in","timeout","unmountOnExit","bgcolor","Typography","variant","name","mt","px","py","mr","parseInt","val","Pagination","count","Math","ceil","shape","showFirstButton","showLastButton","siblingCount","boundaryCount","Menu","open","Boolean","onClose","PaperProps","style","InputLabel","label","borderColor","TextField","handleFilterChange","_prev$field","Button","applyFilter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","statusOptions","CreateUserGroupDialog","onSubmit","theme","useTheme","formData","setFormData","groupName","handleChange","handleClose","useEffect","Dialog","maxWidth","palette","background","paper","shadows","DialogTitle","fontFamily","textAlign","pb","DialogContent","pt","xs","md","mb","Grid","container","spacing","placeholder","primary","main","dark","DialogActions","gap","startIcon","CancelIcon","handleSubmit","trim","alert","GroupAddIcon","light","FieldUserGroups","paginationModel","setPaginationModel","tableRows","setTableRows","groupCode","totalUsers","createdOn","openDialog","setOpenDialog","dialogTitle","setDialogTitle","handleCloseDialog","console","log","FileDownloadIcon","exportCSV","headers","c","join","data","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","click","handleOpenDialog","CustomTable","updatedRows"],"sourceRoot":""}